begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* LIBGIMP - The GIMP Library  * Copyright (C) 1995-1997 Peter Mattis and Spencer Kimball  *  * gimpquerybox.h  * Copyright (C) 1999-2000 Michael Natterer<mitch@gimp.org>  *  * This library is free software: you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public  * License as published by the Free Software Foundation; either  * version 3 of the License, or (at your option) any later version.  *  * This library is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  * Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library.  If not, see  *<http://www.gnu.org/licenses/>.  */
end_comment

begin_if
if|#
directive|if
operator|!
name|defined
argument_list|(
name|__GIMP_WIDGETS_H_INSIDE__
argument_list|)
operator|&&
operator|!
name|defined
argument_list|(
name|GIMP_WIDGETS_COMPILATION
argument_list|)
end_if

begin_error
error|#
directive|error
literal|"Only<libgimpwidgets/gimpwidgets.h> can be included directly."
end_error

begin_endif
endif|#
directive|endif
end_endif

begin_ifndef
ifndef|#
directive|ifndef
name|__GIMP_QUERY_BOX_H__
end_ifndef

begin_define
DECL|macro|__GIMP_QUERY_BOX_H__
define|#
directive|define
name|__GIMP_QUERY_BOX_H__
end_define

begin_macro
name|G_BEGIN_DECLS
end_macro

begin_comment
comment|/* For information look into the C source or the html documentation */
end_comment

begin_comment
comment|/**  * GimpQueryStringCallback:  * @query_box: The query box.  * @string:    The entered string.  * @data:      The user data.  *  * Note that you must not g_free() the passed string.  **/
end_comment

begin_typedef
DECL|typedef|GimpQueryStringCallback
typedef|typedef
name|void
function_decl|(
modifier|*
name|GimpQueryStringCallback
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
name|query_box
parameter_list|,
specifier|const
name|gchar
modifier|*
name|string
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/**  * GimpQueryIntCallback:  * @query_box: The query box.  * @value:     The entered integer value.  * @data:      The user data.  *  * The callback for an int query box.  **/
end_comment

begin_typedef
DECL|typedef|GimpQueryIntCallback
typedef|typedef
name|void
function_decl|(
modifier|*
name|GimpQueryIntCallback
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
name|query_box
parameter_list|,
name|gint
name|value
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/**  * GimpQueryDoubleCallback:  * @query_box: The query box.  * @value:     The entered double value.  * @data:      The user data.  *  * The callback for a double query box.  **/
end_comment

begin_typedef
DECL|typedef|GimpQueryDoubleCallback
typedef|typedef
name|void
function_decl|(
modifier|*
name|GimpQueryDoubleCallback
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
name|query_box
parameter_list|,
name|gdouble
name|value
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/**  * GimpQuerySizeCallback:  * @query_box: The query box.  * @size:      The entered size in pixels.  * @unit:      The selected unit from the #GimpUnitMenu.  * @data:      The user data.  *  * The callback for a size query box.  **/
end_comment

begin_typedef
DECL|typedef|GimpQuerySizeCallback
typedef|typedef
name|void
function_decl|(
modifier|*
name|GimpQuerySizeCallback
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
name|query_box
parameter_list|,
name|gdouble
name|size
parameter_list|,
name|GimpUnit
name|unit
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/**  * GimpQueryBooleanCallback:  * @query_box: The query box.  * @value:     The entered boolean value.  * @data:      The user data.  *  * The callback for a boolean query box.  **/
end_comment

begin_typedef
DECL|typedef|GimpQueryBooleanCallback
typedef|typedef
name|void
function_decl|(
modifier|*
name|GimpQueryBooleanCallback
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
name|query_box
parameter_list|,
name|gboolean
name|value
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/**  * GIMP_QUERY_BOX_VBOX:  * @qbox: The query box.  *  * A macro to access the #GtkVBox in a #libgimpwidgets-gimpquerybox.  * Useful if you want to add more widgets.  **/
end_comment

begin_define
DECL|macro|GIMP_QUERY_BOX_VBOX (qbox)
define|#
directive|define
name|GIMP_QUERY_BOX_VBOX
parameter_list|(
name|qbox
parameter_list|)
value|g_object_get_data (G_OBJECT (qbox), \                                                      "gimp-query-box-vbox")
end_define

begin_comment
comment|/*  some simple query dialogs  */
end_comment

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_query_string_box
parameter_list|(
specifier|const
name|gchar
modifier|*
name|title
parameter_list|,
name|GtkWidget
modifier|*
name|parent
parameter_list|,
name|GimpHelpFunc
name|help_func
parameter_list|,
specifier|const
name|gchar
modifier|*
name|help_id
parameter_list|,
specifier|const
name|gchar
modifier|*
name|message
parameter_list|,
specifier|const
name|gchar
modifier|*
name|initial
parameter_list|,
name|GObject
modifier|*
name|object
parameter_list|,
specifier|const
name|gchar
modifier|*
name|signal
parameter_list|,
name|GimpQueryStringCallback
name|callback
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_query_int_box
parameter_list|(
specifier|const
name|gchar
modifier|*
name|title
parameter_list|,
name|GtkWidget
modifier|*
name|parent
parameter_list|,
name|GimpHelpFunc
name|help_func
parameter_list|,
specifier|const
name|gchar
modifier|*
name|help_id
parameter_list|,
specifier|const
name|gchar
modifier|*
name|message
parameter_list|,
name|gint
name|initial
parameter_list|,
name|gint
name|lower
parameter_list|,
name|gint
name|upper
parameter_list|,
name|GObject
modifier|*
name|object
parameter_list|,
specifier|const
name|gchar
modifier|*
name|signal
parameter_list|,
name|GimpQueryIntCallback
name|callback
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_query_double_box
parameter_list|(
specifier|const
name|gchar
modifier|*
name|title
parameter_list|,
name|GtkWidget
modifier|*
name|parent
parameter_list|,
name|GimpHelpFunc
name|help_func
parameter_list|,
specifier|const
name|gchar
modifier|*
name|help_id
parameter_list|,
specifier|const
name|gchar
modifier|*
name|message
parameter_list|,
name|gdouble
name|initial
parameter_list|,
name|gdouble
name|lower
parameter_list|,
name|gdouble
name|upper
parameter_list|,
name|gint
name|digits
parameter_list|,
name|GObject
modifier|*
name|object
parameter_list|,
specifier|const
name|gchar
modifier|*
name|signal
parameter_list|,
name|GimpQueryDoubleCallback
name|callback
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_query_size_box
parameter_list|(
specifier|const
name|gchar
modifier|*
name|title
parameter_list|,
name|GtkWidget
modifier|*
name|parent
parameter_list|,
name|GimpHelpFunc
name|help_func
parameter_list|,
specifier|const
name|gchar
modifier|*
name|help_id
parameter_list|,
specifier|const
name|gchar
modifier|*
name|message
parameter_list|,
name|gdouble
name|initial
parameter_list|,
name|gdouble
name|lower
parameter_list|,
name|gdouble
name|upper
parameter_list|,
name|gint
name|digits
parameter_list|,
name|GimpUnit
name|unit
parameter_list|,
name|gdouble
name|resolution
parameter_list|,
name|gboolean
name|dot_for_dot
parameter_list|,
name|GObject
modifier|*
name|object
parameter_list|,
specifier|const
name|gchar
modifier|*
name|signal
parameter_list|,
name|GimpQuerySizeCallback
name|callback
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_query_boolean_box
parameter_list|(
specifier|const
name|gchar
modifier|*
name|title
parameter_list|,
name|GtkWidget
modifier|*
name|parent
parameter_list|,
name|GimpHelpFunc
name|help_func
parameter_list|,
specifier|const
name|gchar
modifier|*
name|help_id
parameter_list|,
specifier|const
name|gchar
modifier|*
name|stock_id
parameter_list|,
specifier|const
name|gchar
modifier|*
name|message
parameter_list|,
specifier|const
name|gchar
modifier|*
name|true_button
parameter_list|,
specifier|const
name|gchar
modifier|*
name|false_button
parameter_list|,
name|GObject
modifier|*
name|object
parameter_list|,
specifier|const
name|gchar
modifier|*
name|signal
parameter_list|,
name|GimpQueryBooleanCallback
name|callback
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_macro
name|G_END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __GIMP_QUERY_BOX_H__ */
end_comment

end_unit

