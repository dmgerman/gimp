2001-08-30  Sven Neumann  <sven@gimp.org>

	* configure.in: check for bind_textdomain_codeset, use standard 
	HAVE_FOO semantic for difftime.

	* libgimp/gimpintl.h
	* libgimp/libgimp-intl.h
	* libgimp/stdplugins-intl.h: set encoding of message translations
	to UTF-8 if bind_textdomain_codeset() is available. We still 
	explicitely set LC_NUMERIC to "C" so we can write and parse floats 
	in a defined way independent of the locale. We might want to find 
	a cleaner solution for this.
	
	* plug-ins/script-fu/script-fu-server.c: inverted preprocessor logic
	from NO_DIFFTIME to HAVE_DIFFTIME.
	
	* plug-ins/script-fu/scripts/trochoid.scm: 
	fixed parameter description (bug #59760).

2001-08-29  Sven Neumann  <sven@gimp.org>

	* README.i18n: added a section that mentions the GNOME translation
	project that coordinates translation efforts in the GNOME CVS tree.

	Mention the fact that po files as well as the tips files need to be
	UTF-8 encoded to work with GTK+-2.0.

	* tips/gimp_tips.de.txt: converted to UTF-8.

2001-08-29  Sven Neumann  <sven@gimp.org>

	* app/widgets/gtkhwrapbox.[ch]
	* app/widgets/gtkvwrapbox.[ch]
	* app/widgets/gtkwrapbox.[ch]: make it compile even if you don't 
	have gle installed ;-)

2001-08-29  Sven Neumann  <sven@gimp.org>

	* configure.in: added comment how to handle version numbers when
	making releases so I don't get it wrong once again. 
	Removed leftover GIMP_CONTRIBUTORS.

	* gimptool.1.in: removed this file.

	* docs/Makefile.am
	* docs/gimp.1.in: fixed stuff that was left after the removal of
	the GIMP_CONTRIBUTORS hack.

2001-08-29  Michael Natterer  <mitch@gimp.org>

	* configure.in: added -DG_DISABLE_DEPRECATED and
	-DGDK_DISABLE_COMPAT_H.

	* app/batch.c
	* app/file-utils.c
	* app/gdisplay.c
	* app/gdisplay_ops.c
	* app/gimprc.[ch]
	* app/module_db.c
	* app/nav_window.c
	* app/undo_history.c
	* app/core/gimpgradient.c
	* app/core/gimpimagefile.c
	* app/core/gimppalette.c
	* app/gui/color-notebook.c
	* app/gui/convert-dialog.c
	* app/gui/error-console-dialog.c
	* app/gui/file-commands.c
	* app/gui/file-open-dialog.c
	* app/gui/file-save-dialog.c
	* app/gui/gradient-editor.c
	* app/gui/info-window.c
	* app/gui/menus.c
	* app/gui/palette-import-dialog.c
	* app/tools/gimpbycolorselecttool.c
	* app/widgets/gimpcontainerview-utils.c
	* app/widgets/gimpdatafactoryview.c
	* libgimp/gimpmenu.c
	* plug-ins/common/bz2.c
	* plug-ins/common/compose.c
	* plug-ins/common/csource.c
	* plug-ins/common/decompose.c
	* plug-ins/common/gz.c
	* plug-ins/common/uniteditor.c
	* plug-ins/common/wmf.c
	* plug-ins/common/xbm.c
	* plug-ins/rcm/rcm_dialog.c
	* plug-ins/script-fu/interp_slib.c
	* plug-ins/script-fu/script-fu-console.c
	* plug-ins/script-fu/script-fu-scripts.c
	* tools/pdbgen/pdb/fileops.pdb
	* tools/pdbgen/pdb/gimprc.pdb
	* app/pdb/fileops_cmds.c
	* app/pdb/gimprc_cmds.c: removed deprecated stuff like
	g_basename(), g_dirname(), g_strup() and friends. Added some
	"const gchar *" declarations while I was on it. Added some
	G_N_ELEMENTS() macros instead of declaring a useless variable
	for the number of items.

	* app/widgets/gtkhwrapbox.[ch]
	* app/widgets/gtkvwrapbox.[ch]
	* app/widgets/gtkwrapbox.[ch]: replaced with the latest versions
	from GLE, ported by the master himself.

	* app/gui/toolbox.c: changed accordingly.

	* app/plug_in.c
	* libgimp/gimp.c
	* libgimpbase/gimpwire.[ch]: use evil hacks to get binary mode
	from the new GIOChannel implementation (upstream bugreport already
	posted).

2001-08-28  Sven Neumann  <sven@gimp.org>

	* configure.in: removed the authorgen hack. It broke the build with
	autoconf-2.52. Need to come up with a better idea. Until then the
	manpages don't show the autors anymore.
	Removed the useless definitions of brushdata, palettedata, ...
	while I was on it.

	* data/Makefile.am
	* data/brushes/Makefile.am
	* data/gradients/Makefile.am
	* data/palettes/Makefile.am
	* data/patterns/Makefile.am: do it the conventional way and list all
	data files in the Makefiles.

2001-08-28  Sven Neumann  <sven@gimp.org>

	* HACKING
	* autogen.sh: libtool >= 1.3.4 should be good enough

2001-08-28  Sven Neumann  <sven@gimp.org>

	* acinclude.m4: removed redefinitions of libtool macros. We use the
	installed libtool now. If this breaks the build for your system, 
	upgrade libtool. If that does not help, let us know.
	
	* ltconfig
	* ltmain.sh: removed these files. Newer versions of libtool don't use
	ltconfig and ltmain.sh is taken from your libtool installation.

	* autogen.sh: check for presence of libtool.
	
	* Makefile.am
	* configure.in
	* gimp-remote.1.in
	* gimp.1.in
	* gimprc.5.in: removed man-pages from toplevel dir ...
	
	* docs/Makefile.am
	* docs/gimp-remote.1.in
	* docs/gimp.1.in
	* docs/gimprc.5.in
	* docs/gimptool-1.4.1.in: ... and added them back here.
	
	* gimp-1.4.m4: removed from toplevel dir ...
	
	* m4macros/Makefile.am
	* m4macros/gimp-1.4.m4: ... and added it back here.

2001-08-19  Sven Neumann  <sven@gimp.org>

	* app/widgets/Makefile.am: added PANGOFT2_CFLAGS to INCLUDES.

2001-08-19  Sven Neumann  <sven@gimp.org>

	* app/devices.h
	* app/disp_callbacks.c
	* app/interface.c: applied a patch from <David.Odin@bigfoot.com> that
	changes some function prototype to return gboolean instead of gint.
	
	* app/tools/gimpblendtool.c: pixel_regions_register() and 
	pixel_regions_process() return a gpointer, not (gpointer *).

2001-08-17  Michael Natterer  <mitch@gimp.org>

	* configure.in: added app/display/ and app/plug-in/. Empty for
	now except for the types files.

	* app/Makefile.am
	* app/appenums.h
	* app/apptypes.h: removed.

	* app/display/Makefile.am
	* app/display/display-types.h
	* app/plug-in/Makefile.am
	* app/plug-in/plug-in-types.h
	* app/gui/Makefile.am
	* app/gui/gui-types.h
	* app/pdb/Makefile.am
	* app/pdb/pdb-types.h: new files for typedefs.

	* app/appenv.h: added MessageHandlerType and StackTraceMode here.

	* app/undo_types.h: moved undo struct typedefs here.

	* app/tools/tools-types.h
	* app/core/core-types.h: added some enums and Tattoo here
	(renamed to GimpTattoo).

	* app/gdisplay.h: temp_hack: #include "display/display-types.h"

	* app/gimphelp.c: s/gtk_idle_add/g_idle_add/

	* app/gimprc.c: don't use "gimprc" in token handlers but the
	passed "val1p" and "val2p".

	* app/image_map.[ch]: cleanup in preparation of making a GObject
	out of it.

	* app/base/pixel-region.[ch]: no need to pass the
	PixelRegionIterator around as void pointer.

	* app/core/gimp.[ch]
	* app/core/gimpcontext.[ch]
	* app/core/gimptoolinfo.[ch]
	* app/tools/tool_manager.c
	* app/widgets/gimpdnd.c: added the standard_tool_info to the Gimp
	object.

	* app/batch.c
	* app/file-open.c
	* app/file-save.c
	* app/file-utils.c
	* app/interface.c
	* app/main.c
	* app/path.[ch]
	* app/pathP.h
	* app/plug_in.h
	* app/core/gimpdrawable.[ch]
	* app/core/gimpimage-mask.c
	* app/core/gimpimage.[ch]
	* app/core/gimplayer.c
	* app/gui/color-area.c
	* app/gui/color-notebook.c
	* app/gui/colormap-dialog.c
	* app/gui/dialogs-commands.c
	* app/gui/dialogs-constructors.c
	* app/gui/error-console-dialog.c
	* app/gui/gradient-editor.c
	* app/gui/gradient-select.c
	* app/gui/indicator-area.c
	* app/gui/info-dialog.c
	* app/gui/palette-editor.c
	* app/gui/palette-select.c
	* app/gui/pattern-select.c
	* app/gui/session.c
	* app/gui/splash.c
	* app/gui/view-commands.c
	* app/tools/gimpinktool-blob.c
	* app/widgets/gimpcolorpanel.c
	* app/widgets/gimpdockbook.c
	* app/widgets/gimppreview.c
	* app/xcf/xcf-load.c
	* app/xcf/xcf-save.c
	* app/xcf/xcf.c: changed accordingly: s/Tattoo/GimpTattoo/, include
	the new types files, include <glib-object.h> instead of >gtk/gtk.h>.
	Bad hacks to get rid of SELECTION_OFF and friends in core/ (will
	be replaced ba a signal soon).

	* tools/pdbgen/Makefile.am: changed list of headers scanned for
	enums accordingly.

	* app/pdb/procedural_db.c
	* tools/pdbgen/app.pl
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/display.pdb
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/layer.pdb
	* tools/pdbgen/pdb/pattern_select.pdb: same fixes as above, added
	hacks to ensure that all foo-types.h files are included before all
	other gimp internal includes, include "pdb-types.h" unconditionally.

	* tools/pdbgen/enums.pl
	* app/pdb/*_cmds.c: regenerated.

2001-08-15  Michael Natterer  <mitch@gimp.org>

	* app/tools/gimptool.[ch]
	* app/tools/tool_manager.[ch]: removed all *_get_PDB_string()
	functions and GimpToolClass' "pdb_string" field as this info is
	stored independent from a specific tool instance in GimpToolInfo

	* app/tools/gimpbezierselecttool.c: use GimpToolInfo's "pdb_string".

2001-08-14  Michael Natterer  <mitch@gimp.org>

	* app/interface.c
	* app/gui/about-dialog.c
	* app/gui/brush-editor.c
	* app/gui/brush-select.c
	* app/gui/color-notebook.c
	* app/gui/color-select.c
	* app/gui/convert-dialog.c
	* app/gui/file-commands.c
	* app/gui/file-dialog-utils.c
	* app/gui/file-dialog-utils.h
	* app/gui/file-new-dialog.c
	* app/gui/file-open-dialog.c
	* app/gui/file-save-dialog.c
	* app/gui/gradient-editor.c
	* app/gui/gradients-commands.c
	* app/gui/gui.c
	* app/gui/image-commands.c
	* app/gui/info-window.c
	* app/gui/layer-select.c
	* app/gui/menus.c
	* app/gui/paths-dialog.c
	* app/gui/preferences-dialog.c
	* app/gui/resolution-calibrate-dialog.c
	* app/gui/select-commands.c
	* app/gui/splash.c
	* app/gui/test-commands.c
	* app/gui/tips-dialog.c
	* app/tools/gimpthresholdtool.c
	* app/tools/paint_options.c
	* app/widgets/gimpdock.c
	* app/widgets/gimpdockbook.c: got rid of all
	gtk_object_[get|set]_data() and almost all gtk_signal_foo()
	function calls.

2001-08-14  Michael Natterer  <mitch@gimp.org>

	* app/gdisplay.h: an evil temp_hack which lets GimpContext manage
	the active display without including "gdisplay.h". Will go away as
	soon as context properties are registered dynamically.

	* app/module_db.c: cleaned up the object code in preparation of
	moving it to core/.

	* app/path.c: connect to GimpImage's "disconnect" signal instead
	of "destroy".

	* app/core/gimpobject.[ch]: derive it from GObject, not from
	GtkObject any more (yeah :-)

	* app/core/*.c: #include <glib-object.h> instead of <gtk/gtk.h>,
	removed some remaining GtkObject-isms.

	(left in a few #include <gtk/gtk.h> where bigger changes are needed
	to get rid of the UI dependency).

	* app/core/core-types.h: #include <gdk-pixbuf/gdk-pixbuf.h> here
	temporarily.

	* app/core/gimp.c (gimp_create_display): unref the image after
	creating it's first display.

	* app/core/gimpbrush.[ch]: disabled the parts of the code which
	depend on GimpPaintTool.

	* app/core/gimpbrushgenerated.c
	* app/core/gimpbrushpipe.c: changed accordingly.

	* app/core/gimpcontext.[ch]: evil hack (see above) to manage the
	active display without including "gdisplay.h"

	* app/core/gimpimage-mask.[ch]: pass a context to
	gimage_mask_stroke() and get the current tool's PDB string from
	there.

	* app/core/gimpedit.c: changed accordingly.

	* app/core/gimpimage.c: use gimp_image_update() instead of
	gdisplays_update_full().

	* app/gui/color-area.c
	* app/gui/colormap-dialog.c
	* app/gui/dialogs-constructors.c
	* app/gui/edit-commands.c
	* app/gui/image-commands.c
	* app/gui/toolbox.c: changed accordingly (don't use Gtk methods on
	GObjects).

	* app/gui/menus.c: fix some const warnings by explicit casting.

	* app/tools/*.[ch]: ported all tools to GObject, some minor
	cleanup while i was on it.

	* app/widgets/gimpdialogfactory.[ch]: ported to GObject.

	* app/widgets/gimplayerlistview.h: added FOO_GET_CLASS() macro.

	* tools/pdbgen/app.pl: added a "widgets_eek" hack like "tools_eek"
	which inserts #include "widgets/widgets-types.h" before ordinary
	includes.

	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/edit.pdb
	* app/pdb/brush_select_cmds.c
	* app/pdb/edit_cmds.c: changed according to the stuff above.

2001-08-14  Sven Neumann  <sven@gimp.org>

	* app/tools/gimptexttool.c: take image resolution and choosen unit 
	into account for font and border size.
	
	* app/widgets/gimpfontselection-dialog.[ch]
	* app/widgets/gimpfontselection.[ch]
	* app/widgets/widgets-types.h: added an indicator for font validity.
	Added a font preview to the font selection dialog.
	
	* libgimpwidgets/gimpfileselection.c: return FALSE from 
	gimp_file_selection_entry_focus_out_callback() since we do not want
	to stop signal emission.
	
2001-08-12  Michael Natterer  <mitch@gimp.org>

	Switched to GObject reference counting:

	* app/core/gimpcontainer.c: only ref(), not ref()/sink() children
	of strong containers. Reordered gimp_container_remove() so we
	don't need to ref the object while removing it.

	* app/core/gimpcontext.c: misc fixes. Needs to be badly tortured...

	* app/app_procs.c
	* app/gdisplay.c
	* app/gimprc.c
	* app/core/gimp.c
	* app/core/gimpbrush.c
	* app/core/gimpbrushpipe.c
	* app/core/gimpdatafactory.c
	* app/core/gimpdocuments.c
	* app/core/gimpgradient.c
	* app/core/gimpimage.c
	* app/core/gimplayer.c
	* app/core/gimplist.c
	* app/core/gimpobject.c
	* app/core/gimpparasite.c
	* app/core/gimppattern.c
	* app/core/gimpundostack.c
	* app/gui/dialogs.c
	* app/tools/gimpbezierselecttool.c
	* app/tools/gimpfuzzyselecttool.c: changed accordingly: don't
	ref()/sink() any more, unref all (??) objects after adding them to
	strong containers, misc. minor fixes.

	* app/gui/dialogs-constructors.c
	* app/widgets/gimpwidgets.c: use g_object_add_weak_pointer()
	instead of simply crashing because g_object_weak_ref() was used
	with gtk_widget_destroyed, brrr.

	* app/widgets/gimpdnd.c: removed unneeded g_return_if_fail()'s.

2001-08-12  Sven Neumann  <sven@gimp.org>

	* TODO.xml: fixed an error, updated some numbers and added new items.

2001-08-11  Sven Neumann  <sven@gimp.org>

	* app/tools/gimptexttool.c: return the created layer.

	* app/pdb/text_tool_cmds.c
	* libgimp/gimptexttool_pdb.c
	* tools/pdbgen/pdb/text_tool.pdb: hacked a bit so scripts using the 
	text_*_fontname procedures work again with the new text tool. 
	The fontname is however no longer a X Logical Font Description, but 
	the much simpler scheme that Pango understands: 
	"[FAMILY-LIST] [STYLE-OPTIONS]". Interactive font selection is still
	broken. The variants of the text PDB calls that pass the XLFD fields
	directly should also work since the PDB now translates this to a
	Pango-conform fontname. Later this API will die, but for the moment,
	some backward compatibility can't hurt...

2001-08-11  Michael Natterer  <mitch@gimp.org>

	* app/core/gimp.c: split "destroy" up in "dispose" and "finalize".

	* app/core/gimpcontext.c: objects need to be passed around with
	g_param_spec_object() or bad things will happen.

	* app/gui/channels-commands.c
	* app/gui/edit-commands.c
	* app/gui/file-commands.c
	* app/gui/gui.c
	* app/gui/layers-commands.c
	* app/gui/resize-dialog.c
	* app/gui/select-commands.c
	* app/tools/gimpclonetool.c
	* app/widgets/gimpdatafactoryview.c
	* app/widgets/gimppreview.c: removed many connections to
	"destroy": Connect to "disconnect" or use g_object_weak_ref()
	instead.

2001-08-11  Michael Natterer  <mitch@gimp.org>

	* configure.in: fsck^^^ -- lovely autofoo wants "changequote([,])dnl"

	* app/core/gimpcontext.[ch]: lots of GObject porting.

	* app/core/gimpobject.[ch]: added a "disconnect" signal, which
	like gtk's "destroy" is emitted in dispose(). This is ugly but
	I don't see another "clean" way to implement weak containers.

	* app/core/gimpcontainer.c: connect to the "disconnect" signal of
	the children of weak containes.

	* app/core/gimpimage.[ch]: replaced the "destroy" implementation
	with "dispose" + "finalize". Removed gimage->undo_history.

	* app/devices.c
	* app/gui/dialogs-constructors.c
	* app/gui/tools-commands.c
	* app/tools/tool_manager.c
	* app/widgets/gimpimagedock.c: changed accordingly.

2001-08-11  Sven Neumann  <sven@gimp.org>

	* app/tools/gimptexttool.c: made border work and fixed render offsets.

2001-08-11  Sven Neumann  <sven@gimp.org>

	* app/tools/gimptexttool.c: allow to specify size and border. 
	
	* app/widgets/gimpfontselection.c: use GTK_STOCK_SELECT_FONT icon.

2001-08-11  Sven Neumann  <sven@gimp.org>

	* configure.in: added dependency on PangoFT2 (Pango compiled with 
	FreeType2 support).
	
	* app/Makefile.am: link against PangoFT2.
	
	* app/tools/Makefile.am
	* app/tools/gimptexttool.[ch]: rudimentary new text tool. Still needs
	lots of work.

	* app/widgets/Makefile.am
	* app/widgets/widgets-types.h:
	* app/widgets/gimpfontselection-dialog.[ch]
	* app/widgets/gimpfontselection.[ch]: added font selection widgets.

	* libgimpwidgets/Makefile.am
	* libgimpwidgets/gimpwidgetstypes.h
	* libgimpwidgets/gimpfontselection.[ch]: removed font selection code 
	from here since the fonts need to be selected from the core's 
	PangoContext. Will add PDB-controlled font selection later.

2001-08-11  Michael Natterer  <mitch@gimp.org>

	* TODO.xml: added a TODO entry about additional image/file info.

	* app/file-save.c: #include "core/gimpdocuments.h"

	* app/core/gimpcontainer.[ch]: made virtual functions out of some
	signals.

	* app/core/*.[ch]: more GObject stuff: ported all
	gimp_foo_get_type() functions and replaced almost all "destroy"
	implementations with either "finalize" or "dispose" functions.

2001-08-11  Seth Burgess      <sjburges@gimp.org>
	
	* plug-ins/common/colortoalpha.c: set nparams != 4 for 
	non-interactive execution.  Thanks to alex@foogod.com for
	this fix.

2001-08-11  Michael Natterer  <mitch@gimp.org>

	* app/core/Makefile.am
	* app/core/gimpdocuments.[ch]: new file implementing the
	docindex.* replacement.

	* app/gimprc.c: added TT_XDOCUMENT to parse the new document
	history.

	* app/file-save.c
	* app/gui/file-open-dialog.c: add opened & saved images to the
	document history.

	* app/core/gimp.c: call gimp_documents_init/exit() instead of
	doing it here.

	* app/core/gimpimagefile.[ch]: removed the "filename" attribute
	and use GimpObject's "name" instead.

	* app/gui/dialogs-constructors.[ch]
	* app/gui/dialogs.c
	* app/gui/menus.c: added a menu entry/dockable for the document
	history.

	* app/widgets/gimpdnd.[ch]: make it DND-able.

	* app/widgets/gimppreview.c: fix preview rendering correctly this
	time.

2001-08-10  Sven Neumann  <sven@gimp.org>

	* libgimpwidgets/Makefile.am
	* libgimpwidgets/gimpwidgetstypes.h
	* libgimpwidgets/gimpfontselection.[ch]: added a rudimentary font
	selection widget, mostly copied from GtkFontSelection.

	* libgimpwidgets/gimpfileselection.c: more GObject porting.

2001-08-10  Michael Natterer  <mitch@gimp.org>

	* app/nav_window.c: fix compiler warning.

	* app/core/gimp.[ch]: added gimp->documents which will be an MRU
	list of GimpImagefile objects.

	* app/core/gimpcontainer.c: added some g_return_if_fail().

	* app/gui/palette-editor.c: use GtkImage instead of GtkPixmap,
	s/gtk_signal_*/g_signal_*/.

	* app/widgets/gimppreview.c: render the checkerboard only for
	channel == -1. In particular, don't render it for channel
	previews.

	* app/module_db.c
	* app/core/*.c
	* app/gui/colormap-dialog.c
	* app/tools/gimpairbrushtool.c
	* app/tools/gimpdodgeburntool.c
	* app/tools/gimpeditselectiontool.c
	* app/tools/gimperasertool.c
	* app/tools/gimppaintbrushtool.c
	* app/tools/gimppenciltool.c
	* app/tools/gimpsmudgetool.c
	* app/tools/tool_manager.c
	* app/widgets/*.c
	* libgimpwidgets/*.c: s/gtk_type_new/g_object_new/

2001-08-09  Michael Natterer  <mitch@gimp.org>

	* app/appenums.h: removed GIMP_ZOOM_TYPE,

	* app/widgets/widgets-types.h: added it here.

	* app/disp_callbacks.c
	* app/widgets/gimpnavigationpreview.[ch]
	* app/gui/gradient-editor.c: removed old cruft which expects wheel
	events as button_4 and button_5 and connect to GdkEventScroll
	instead.

	* app/nav_window.c: connect to GimpNavigationPreview's new
	"scroll" and "zoom" signals.

	* app/gui/error-console-dialog.c: remove wheel scrol stuff (done
	by GtkScrolledWindow now).

	* app/gui/color-notebook.c
	* app/gui/gradient-editor.c: removed GtkPixmap stuff and use
	GtkImage instead. Looks a bit ugly in the color_notebook (seems
	we need more icon sizes).

	* app/gui/indicator-area.c: GObject porting.

	* app/gui/menus.c_ some more menu icons.

	* app/gui/toolbox.c: pass a GimpContext around as callback data
	and use context->gimp instead of accessing the global "the_gimp"
	variable.

2001-08-09  Sven Neumann  <sven@gimp.org>

	* app/core/Makefile.am
	* app/core/core-types.h
	* app/core/gimpimagefile.[ch]: added first draft of a GimpImagefile
	object that will handle image files on disk, in particular their 
	thumbnails.

2001-08-07  Michael Natterer  <mitch@gimp.org>

	* app/disp_callbacks.c: removed a gdk_pointer_ungrab(), it was
	only there because of buggy gtk+ 1.2.x. Cosmetic changes.

	* app/undo.c: use G_N_ELEMENTS() instead of
	sizeof(array)/sizeof(element).

	* app/gui/menus.c: more stock icons, moved the item_factory
	creation into the menus_get_foo_factory() functions, use
	G_N_ELEMENTS(). This file badly needs to be spit up...

	* app/core/gimpviewable.[ch]
	* app/widgets/gimpcontainermenu.[ch]
	* app/widgets/gimpcontainerview.[ch]
	* app/widgets/gimplistitem.[ch]
	* app/widgets/gimpmenuitem.[ch]
	* app/widgets/gimppreview.[ch]: replaced tons of signal emissions
	by virtual functions which are *much* faster. Moreover, all of
	them are private implementation bits of the specific class
	hierarchy and are useless or even dangerous to be exposed as
	signals.

	* app/widgets/gimpdrawablelistitem.c: removed the drag_motion()
	implementation as it's already done in the parent class.

	* app/widgets/gimplistitem.[ch]
	* app/widgets/gimplayerlistitem.c: redraw the widget when the
	drop_type has changed. Fixes drop_indicator drawing.

2001-08-07  Michael Natterer  <mitch@gimp.org>

	* libgimpwidgets/gimpbutton.[ch]: cleanup.

	* app/Makefile.am
	* app/errorconsole.[ch]: removed...

	* app/gui/Makefile.am
	* app/gui/error-console-dialog.[ch]: ...added here. Lots of cleanup,
	create a vbox instead of a dialog.

	* app/gui/dialogs-constructors.c
	* app/gui/dialogs.c: added a dockable for the error console.

	* app/errors.c
	* app/gui/gui.c
	* app/gui/menus.c: changed accordingly.

	* app/widgets/gimpcontainerview.c: conntect "extended_clicked" to
	the "extended_clicked" callback, not "clicked".

	* app/widgets/gimplayerlistview.c: set the layer option box'
	spacing in "style_set".

	* app/widgets/gimplistitem.c: argh.

	* themes/Default/gtkrc: changed the default theme to set a smaller
	font only for the dockable because that's where saving screen
	estate really makes sense. May need some further tweaking.

2001-08-06  Daniel Egger  <egger@suse.de>

	* autogen.sh: Fix error message to reflect that one needs
	gettext 0.10.38 to compile GIMP.

2001-08-06  Michael Natterer  <mitch@gimp.org>

	* configure.in
	* themes/Default/images/Makefile.am
	* themes/Default/images/tools/Makefile.am: some new Makefiles to
	make it installable.

	* Makefile.am
	* gtkrc: removed...

	* themes/Default/Makefile.am
	* themes/Default/gtkrc: ...added here.

	* themes/Default/imagerc: new file (not used, just for
	documentation) which loads the default theme's images in the same
	way the inlined pixbufs are registered with the stock system.

	* gimprc.in
	* gimprc.win32
	* user_install
	* user_install.bat
	* app/gimprc.[ch]: added "theme-path" and "theme" gimprc variables.

	* app/app_procs.c: prase gimprc before initializing the GUI.

	* app/core/gimpdatafiles.[ch]: added support for getting only
	subdirectories in the callback.

	* libgimpbase/gimpenv.c: as a temp_hack gimp_gtkrc(); returns the
	default theme's gtkrc.

	* app/gui/gui.c: build a hash of theme directories and select
	the one configured in gimprc.theme. Use gimp_gtkrc()'s default
	value if there is no theme installed or configured.

	* app/gui/preferences-dialog.c: Added theme_path to the GUI. No
	stuff for selection the theme yet.

	* app/gui/menus.c: beautify <Image>/Tools/

	* app/tools/gimpcroptool.c: register in <Image>/Tools/Transform Tools/

2001-08-05  Michael Natterer  <mitch@gimp.org>

	* Makefile.am
	* configure.in
	* themes/.cvsignore
	* themes/Makefile.am
	* themes/Default/.cvsignore
	* themes/Default/Makefile.am
	* themes/Default/images/.cvsignore
	* themes/Default/images/*.png
	* themes/Default/images/tools/.cvsignore
	* themes/Default/images/tools/*.png: new place for all images
	which are registered with the stock system. The default images are
	all inlined but we will install the default theme later along with
	an appropriate gtkrc as a template for custom themes.

	Added PNGs of all tools icons. Thanks to syngin :)

	* pixmaps/.cvsignore
	* pixmaps/Makefile.am: reverted everything to the old state. This
	directory will go away soon.

	* libgimpwidgets/gimpstock.[ch]: changed accordingly. Register
	stock icons in GTK_ICON_SIZE_BUTTON for all tools.

	* app/core/gimptoolinfo.[ch]
	* app/tools/tool_manager.[ch]: GimpToolInfo wants a stock_id and a
	pre-rendered GdkPixbuf instead of ugly icon_data now. Added some
	workarounds until GimpPreview is a GtkImage and uses GdkPixbuf
	instead of TempBuf.

	* app/tools/Makefile.am
	* app/tools/icons.h: die, uglyness, die.

	* app/tools/[all tools].c: register with a stock_id, not a
	icon_data pointer.

	* app/gui/dialogs-constructors.c: Oops, GIMP badly crashed on
	changing the image for the past few days :)

	* app/gui/menus.c: create the tools' menu entries with stock
	icons.

	* app/gui/toolbox.c: use GtkImages instead of GimpPreviews for
	the toolbox buttons. Will need to change this back as soon
	as GimpPreview actually _is_ a GtkImage.

2001-08-05  Michael Natterer  <mitch@gimp.org>

	* libgimpwidgets/gimpstock.[ch]: register the button icons with
	GTK_ICON_SIZE_BUTTON, but set them as scalable fallbacks for
	themselves so they get scaled for menus.

	* app/gui/menus.c: set stock icons for much more menu entries.

	* app/widgets/gimpwidgets-utils.[ch]: new utility function
	gimp_item_factory_popup_with_data().

	* app/disp_callbacks.[ch]
	* app/gui/brushes-commands.c
	* app/gui/channels-commands.c
	* app/gui/gradients-commands.c
	* app/gui/layers-commands.c
	* app/gui/palettes-commands.c
	* app/gui/paths-dialog.c
	* app/gui/patterns-commands.c: use the new function.

	* app/tools/gimpcolorbalancetool.c
	* app/tools/gimpcurvestool.c
	* app/tools/gimphuesaturationtool.c
	* app/tools/gimplevelstool.c
	* app/tools/gimpposterizetool.c: s/_("Reset")/GIMP_STOCK_RESET/

	* app/widgets/gimpcontainereditor.[ch]
	* app/widgets/gimpcontainerview.[ch]: moved the button_box utility
	functions from the container editor to GimpContainerView itself.

	* app/widgets/gimpbufferview.c
	* app/widgets/gimpchannellistview.c
	* app/widgets/gimpcomponentlistitem.c
	* app/widgets/gimpcontainergridview.[ch]
	* app/widgets/gimpdatafactoryview.c
	* app/widgets/gimpdrawablelistitem.c
	* app/widgets/gimpdrawablelistview.[ch]
	* app/widgets/gimplayerlistitem.c
	* app/widgets/gimplayerlistview.c: changed accordingly. Removed
	lots of duplicated code and use stock images instead of pixmaps.

	* libgimpwidgets/gimpfileselection.[ch]
	* libgimpwidgets/gimppatheditor.c: use stock images instead of
	pixmaps.

	* pixmaps/Makefile.am: removed "yes" and "no", added "stroke".

	* pixmaps/anchor.xpm
	* pixmaps/delete.xpm
	* pixmaps/lower.xpm
	* pixmaps/new.xpm
	* pixmaps/paste-as-new.xpm
	* pixmaps/paste-into.xpm
	* pixmaps/paste.xpm
	* pixmaps/raise.xpm
	* pixmaps/refresh.xpm
	* pixmaps/toselection.xpm: made them all 16x16 so they are scaled
	nicely in menus. Should probably be 18x18.

2001-08-04  Michael Natterer  <mitch@gimp.org>

	* Makefile.am: build pixmaps/ before libgimpwidgets/.

	* pixmaps/.cvsignore
	* pixmaps/Makefile.am: build gimp-stock-pixbufs.h using
	gdk-pixbuf-csource from some of our XPMs.

	* libgimpwidgets/Makefile.am
	* libgimpwidgets/gimpwidgets.h
	* libgimpwidgets/gimpstock.[ch]: new files featuring
	gimp_stock_init(). Register a default GtkIconFactory and a set of
	stock buttons.

	* app/gui/gui.[ch]: new function gui_libs_init(). Call
	gimp_stock_init() from it.

	* app/app_procs.c: call new function gui_libs_init().

	* libgimp/gimpui.c: call gimp_stock_init().

	* app/devices.c: removed action_area hacks as we can configure it
	via style properties now.

	* app/gui/menus.c: use <StockItem> for some menu entries.
	Looks nifty :-)

	* app/widgets/gimpcontainereditor.[ch]: take a "stock_id"
	parameter in gimp_container_editor_add_button(), not a EEKy
	pxm_data pointer.

	* app/widgets/gimpbufferview.c
	* app/widgets/gimpdatafactoryview.c: changed accordingly.

	* app/widgets/gimpchannellistview.c
	* app/widgets/gimpdrawablelistview.c: removed ugly tooltips
	formating hacks since gtk2 does it right now.

	* app/widgets/gimpdockbook.c: re-enabled a line that was commented
	out for some reason...?

	* app/errorconsole.c
	* app/gui/file-new-dialog.c
	* app/gui/tool-options-dialog.c
	* plug-ins/common/uniteditor.c: use the new GIMP_STOCK_FOO id's.

	* libgimpwidgets/gimpquerybox.c: fixed auto-hiding by connection
	to a passed object's signal.

2001-08-03  Michael Natterer  <mitch@gimp.org>

	* gtkrc: set style properties for dockables.

	* app/main.c: some #if 0'ed code for mem profiling.

	* app/gui/commands.[ch]
	* app/gui/menus.c: added a mem profiling menu entry + callback.

	* app/gui/palette-editor.c: added a #warning as reminder, use
	gtk_dialog_set_has_separator().

	* app/widgets/gimpcontainereditor.[ch]
	* app/widgets/gimpcontainerview.[ch]
	* app/widgets/gimpdockable.[ch]
	* app/widgets/gimpdrawablelistview.[ch]: added some style
	properties to set GimpDockable and friends' borders and spacings.

	* libgimpwidgets/gimppixmap.[ch]
	* libgimpwidgets/gimpsizeentry.[ch]
	* libgimpwidgets/gimpunitmenu.[ch]: GObject stuff, cleanup.

	* app/docindex.c
	* app/errorconsole.c
	* app/gdisplay_color_ui.c
	* app/gimpprogress.c
	* app/module_db.c
	* app/undo_history.c
	* app/user_install.c
	* app/gui/channels-commands.c
	* app/gui/gradient-editor.c
	* app/gui/info-window.c
	* app/gui/tips-dialog.c
	* app/tools/gimpbrightnesscontrasttool.c
	* app/tools/gimpbycolorselecttool.c
	* app/tools/gimpcolorbalancetool.c
	* app/tools/gimpcolorpickertool.c
	* app/tools/gimpcroptool.c
	* app/tools/gimpcurvestool.c
	* app/tools/gimphistogramtool.c
	* app/tools/gimphuesaturationtool.c
	* app/tools/gimplevelstool.c
	* app/tools/gimpmeasuretool.c
	* app/tools/gimpposterizetool.c
	* app/tools/gimpthresholdtool.c
	* app/widgets/gimpdatafactoryview.c
	* libgimp/gimpexport.c
	* modules/cdisplay_gamma.c
	* modules/cdisplay_highcontrast.c
	* plug-ins/[lots of files]:

	Some perl mass processing applying s/_("Foo")/GTK_STOCK_FOO/g,
	minor manual cleanup in some files.

2001-08-02  Michael Natterer  <mitch@gimp.org>

	* app/tools/gimptexttool.c:
	s/#ifndef GDK_WINDOWING_WIN32/#ifdef GDK_WINDOWING_X11/

2001-08-02  Sven Neumann  <sven@gimp.org>

	* plug-ins/common/tga.c: merged fix for small TGA2 files by
	 Nick Lamb <njl195@zepler.org.uk> from the stable branch.

2001-08-01  Sven Neumann  <sven@gimp.org>

	* app/docindex.c
	* app/gdisplay_color_ui.c
	* app/gimpprogress.c
	* app/nav_window.c
	* app/path.c
	* app/scale.c
	* app/undo_history.c
	* app/user_install.c
	* app/gui/resolution-calibrate-dialog.[ch]: converted uses of  
	gtk_signal_* to g_signal_*. 

	Changed expose_event handlers that used to be connected using 
	signal_connect_after to call the default handler, do the additional 
	drawing, then stop the signal emission by returning TRUE.

2001-08-01  Sven Neumann  <sven@gimp.org>

	* app/tools/gimpairbrushtool.c
	* app/tools/gimpblendtool.c
	* app/tools/gimpbrightnesscontrasttool.c
	* app/tools/gimpbucketfilltool.c
	* app/tools/gimpcolorpickertool.c
	* app/tools/gimpconvolvetool.c
	* app/tools/gimpcroptool.c
	* app/tools/gimperasertool.c
	* app/tools/gimphistogramtool.c
	* app/tools/gimphuesaturationtool.c
	* app/tools/gimplevelstool.c
	* app/tools/gimpmagnifytool.c
	* app/tools/gimpposterizetool.c
	* app/tools/gimprotatetool.c
	* app/tools/gimpscaletool.c
	* app/tools/gimpsmudgetool.c
	* app/tools/gimptexttool.c
	* app/tools/gimpthresholdtool.c
	* app/tools/gimptransformtool.c
	* app/tools/paint_options.c
	* app/tools/selection_options.c
	* app/tools/transform_options.c: got rid of all remaining gtk_signal 
	wrappers in the tools directory.

2001-08-01  Sven Neumann  <sven@gimp.org>

	* app/core/core-types.h: defined GimpTransferMode enum.
	
	* app/tools/gimpcolorbalancetool.[ch]
	* app/tools/gimpdodgeburntool.[ch]: use it here instead of defining
	the same enum again. Some GObject porting.
	
	* app/tools/gimpsmudgetool.h: removed unused enum SmudgeMode.

	* app/pdb/color_cmds.c
	* app/pdb/tools_cmds.c
	* libgimp/gimpenums.h
	* libgimp/gimptools_pdb.[ch]
	* plug-ins/script-fu/script-fu-constants.c
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/enums.pl
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/tools.pdb: changed accordingly (mostly generated)

2001-08-01  Sven Neumann  <sven@gimp.org>

	* configure.in: added GTK_DISABLE_COMPAT_H back to CPPFLAGS.
	
	* app/user_install.c
	* app/base/base.c
	* app/gui/info-window.c
	* app/gui/menus.c
	* app/gui/preferences-dialog.c
	* app/pdb/procedural_db_cmds.c
	* app/tools/gimpcurvestool.c
	* app/tools/gimptexttool.c
	* app/tools/gimptransformtool.c
	* app/widgets/gimpdialogfactory.c
	* app/widgets/gimpdockbook.c
	* app/widgets/gimpdrawablelistview.c
	* app/widgets/gimpnavigationpreview.c
	* libgimpbase/gimpparasiteio.c
	* libgimpwidgets/gimpwidgets.c
	* plug-ins/FractalExplorer/Dialogs.c
	* plug-ins/common/animationplay.c
	* plug-ins/common/newsprint.c
	* plug-ins/common/uniteditor.c
	* plug-ins/dbbrowser/dbbrowser_utils.c
	* plug-ins/gap/gap_navigator_dialog.c
	* plug-ins/gdyntext/gdyntext_ui.c
	* plug-ins/helpbrowser/helpbrowser.c
	* plug-ins/ifscompose/ifscompose_storage.c
	* plug-ins/print/gimp_main_window.c
	* tools/gimp-remote.c
	* tools/pdbgen/pdb/procedural_db.pdb: replaced lots of deprecated 
	glib, gdk and gtk+ functions using the new API.

	* app/paint-funcs/paint-funcs-rgb.c: removed trailing commas.

2001-08-01  Michael Natterer  <mitch@gimp.org>

	* app/base/base.c: g_strdup (g_get_temp_dir ()), may fix an unseen
	crash.

	* libgimpwidgets/gimphelpui.[ch]: fixed the help stuff by using
	GtkWidget's new "show_help" signal, which is exactly what we did
	before, only without badly hacking around.
	Renamed gimp_help_connect_help_accel() to gimp_help_connect()
	because that's what it does.

	* app/devices.c
	* app/errorconsole.c
	* app/interface.c
	* app/gui/about-dialog.c
	* app/gui/edit-commands.c
	* app/gui/file-commands.c
	* app/gui/file-new-dialog.c
	* app/gui/file-open-dialog.c
	* app/gui/file-save-dialog.c
	* app/gui/gradients-commands.c
	* app/gui/gui.c
	* app/gui/info-dialog.c
	* app/gui/palettes-commands.c
	* app/gui/paths-dialog.c
	* app/gui/select-commands.c
	* app/gui/tips-dialog.c
	* app/gui/toolbox.c
	* app/tools/gimpcurvestool.c
	* app/tools/gimplevelstool.c
	* app/widgets/gimpdatafactoryview.c
	* libgimpwidgets/gimpdialog.c
	* plug-ins/FractalExplorer/FractalExplorer.c
	* plug-ins/common/CEL.c
	* plug-ins/common/CML_explorer.c
	* plug-ins/common/gee.c
	* plug-ins/common/gee_zoom.c
	* plug-ins/common/gqbist.c
	* plug-ins/flame/flame.c
	* plug-ins/fp/fp_gtk.c
	* plug-ins/script-fu/script-fu-scripts.c: changed accordingly,
	GObject stuff, sprinkled some GTK_STOCK_FOOs, minor cleanups.

2001-07-31  Michael Natterer  <mitch@gimp.org>

	* gtkrc: eek, my last change changed the width of all GtkRange
	subclasses, not only GtkScale, fixed now.

	* app/devices.c: use GTK_STOCK_FOO button texts.

	* app/interface.c
	* app/qmask.[ch]: renamed all qmask callbacks to *_callback().

	* app/gui/tool-options-dialog.c: GObject stuff, use
	gtk_dialog_set_has_separator() instead of poking around.

	* app/widgets/gimpcolorpanel.c: set panel->color_notebook to NULL
	in "destroy".

	* app/widgets/gimpnavigationpreview.c: return TRUE from the
	"expose_event" handler.

	* app/widgets/gimppreview.c: tiny optimizatin.

2001-07-31  Sven Neumann  <sven@gimp.org>

	* libgimpwidgets/gimpfileselection.c
	* libgimpwidgets/gimppixmap.c: replaced deprecated GDK calls
	
	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c: GObject porting.

2001-07-31  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpbrushmenu.c
	* libgimp/gimpexport.c
	* libgimp/gimpgradientmenu.c
	* libgimp/gimpmenu.c
	* libgimp/gimppatternmenu.c: GObject porting.

2001-07-31  Sven Neumann  <sven@gimp.org>

	* app/core/core-types.h: removed g_signal_handlers_disconnect_by_data
	again. As Owen pointed out, it's generally a bad idea to use it since
	you can't be absolutely sure that no one else has a pointer to the 
	data you are disconnecting.

	* app/gdisplay.c: added the macro here temporarily.
	
	* app/module_db.c
	* app/undo_history.c
	* app/gui/brush-editor.c
	* app/gui/brush-select.c
	* app/gui/gradient-select.c
	* app/gui/pattern-select.c: use g_signal_handlers_disconnect_by_func.
	
	* libgimpwidgets/gimpbutton.c
	* libgimpwidgets/gimpchainbutton.c
	* libgimpwidgets/gimpcolorarea.c
	* libgimpwidgets/gimpcolorbutton.c
	* libgimpwidgets/gimpfileselection.c
	* libgimpwidgets/gimphelpui.c
	* libgimpwidgets/gimpoffsetarea.c
	* libgimpwidgets/gimppatheditor.c
	* libgimpwidgets/gimpsizeentry.c
	* libgimpwidgets/gimpunitmenu.c
	* libgimpwidgets/gimpwidgets.c: GObject porting.

2001-07-30  Michael Natterer  <mitch@gimp.org>

	* gtkrc: set the width of the scrollbar slider to the same value
	as our default font size so the sliders are nicely aligned with
	their descriptive labels.

	* libgimpwidgets/gimpdialog.[ch]
	* libgimpwidgets/gimpquerybox.[ch]: use GLib-isms and create the
	dialogs' action_area buttons with gtk_dialog_add_button() so we
	can use the GTK_STOCK_FOO buttons and plug in our own icon factory
	later.

	* app/qmask.[ch]: fixed the qmask buttons by applying proper
	GdkEvent callback conventions.

	* libgimpwidgets/gimpcolorbutton.c: NULLify all pointers in
	"destroy".

	* app/gdisplay_ops.c
	* app/gimphelp.c
	* app/interface.c
	* app/gui/brush-editor.c
	* app/gui/color-notebook.c
	* app/gui/convert-dialog.c
	* app/gui/dialogs-constructors.c
	* app/gui/file-commands.c
	* app/gui/file-new-dialog.c
	* app/gui/file-save-dialog.c
	* app/gui/gradient-editor.c
	* app/gui/gui.c
	* app/gui/image-commands.c
	* app/gui/layers-commands.c
	* app/gui/offset-dialog.c
	* app/gui/palette-editor.c
	* app/gui/palette-import-dialog.c
	* app/gui/preferences-dialog.c
	* app/gui/resize-dialog.c
	* app/gui/resolution-calibrate-dialog.c
	* app/gui/tool-options-dialog.c
	* app/widgets/gimpwidgets-utils.c
	* libgimpwidgets/gimpunitmenu.c: g_signal_* and GObject stuff,
	use lots of GTK_STOCK_OK and friends instead of _("OK") etc.,
	misc minor cleanups.

2001-07-30  Sven Neumann  <sven@gimp.org>

	* HACKING
	* autogen.sh: require gettext version 0.38.

	* configure.in: removed some ugly sed hacks that are not any longer 
	needed with recent versions of gettext.

2001-07-29  Michael Natterer  <mitch@gimp.org>

	* app/gimphelp.c: code formating paranoia.

	* app/core/gimp.c: one more g_signal_connect().

	* app/tools/gimpmeasuretool.c: a gtk_widget_show() was optimized
	away :)

	* plug-ins/Makefile.am: re-enabled script-fu and dbbrowser.

	* plug-ins/dbbrowser/dbbrowser_utils.[ch]
	* plug-ins/script-fu/script-fu-console.[ch]
	* plug-ins/script-fu/script-fu-scripts.c
	* plug-ins/script-fu/script-fu-text-console.[ch]
	* plug-ins/script-fu/script-fu.c: use GtkTextBuffer/GtkTextView
	all over the place. GUI code cleanup in the dbbrowser and
	the script-fu console.

2001-07-29  Sven Neumann  <sven@gimp.org>

	* app/devices.c
	* app/disp_callbacks.c
	* app/docindex.[ch]
	* app/file-save.c
	* app/gdisplay.c
	* app/gimpprogress.[ch]
	* app/gimprc.c
	* app/plug_in.c
	* app/gui/gradient-editor.c
	* app/gui/menus.[ch]: more GObject and const changes.

2001-07-29  Hans Breuer  <hans@breuer.org>

	* plug-ins/common/animationplay.c : REVERTED for all platforms
	which do install headers 'reflect that GTK2 has its
	gdk<x|win32|fb>.h files in the back-end sub directories'
	only the win32 headers aren't installed ...

2001-07-29  Sven Neumann  <sven@gimp.org>

	* INSTALL
	* README
	* configure.in
	* gimp-1.4.m4: updated pkg-config location and various other tweaks.
	
2001-07-29  Sven Neumann  <sven@gimp.org>

	* plug-ins/FractalExplorer/Dialogs.c
	* plug-ins/Lighting/lighting_ui.c
	* plug-ins/MapObject/mapobject_ui.c
	* plug-ins/fits/fits.c
	* plug-ins/flame/flame.c
	* plug-ins/ifscompose/ifscompose.c
	* plug-ins/maze/maze_face.c
	* plug-ins/mosaic/mosaic.c
	* plug-ins/rcm/rcm_dialog.c
	* plug-ins/sgi/sgi.c: removed compiler warnings by adding G_CALLBACK()
	casts and const declarations.

2001-07-29  Sven Neumann  <sven@gimp.org>

	* plug-ins/common/AlienMap.c
	* plug-ins/common/AlienMap2.c
	* plug-ins/common/CML_explorer.c
	* plug-ins/common/align_layers.c
	* plug-ins/common/blinds.c
	* plug-ins/common/borderaverage.c
	* plug-ins/common/bumpmap.c
	* plug-ins/common/curve_bend.c
	* plug-ins/common/deinterlace.c
	* plug-ins/common/emboss.c
	* plug-ins/common/film.c
	* plug-ins/common/fractaltrace.c
	* plug-ins/common/gif.c
	* plug-ins/common/gih.c
	* plug-ins/common/hot.c
	* plug-ins/common/iwarp.c
	* plug-ins/common/jigsaw.c
	* plug-ins/common/jpeg.c
	* plug-ins/common/lic.c
	* plug-ins/common/mail.c
	* plug-ins/common/max_rgb.c
	* plug-ins/common/mblur.c
	* plug-ins/common/newsprint.c
	* plug-ins/common/nlfilt.c
	* plug-ins/common/papertile.c
	* plug-ins/common/pnm.c
	* plug-ins/common/ps.c
	* plug-ins/common/psp.c
	* plug-ins/common/ripple.c
	* plug-ins/common/sample_colorize.c
	* plug-ins/common/screenshot.c
	* plug-ins/common/shift.c
	* plug-ins/common/sinus.c
	* plug-ins/common/sparkle.c
	* plug-ins/common/struc.c
	* plug-ins/common/sunras.c
	* plug-ins/common/tiff.c
	* plug-ins/common/waves.c
	* plug-ins/common/wind.c
	* plug-ins/common/xbm.c: got rid of lots of compiler warnings by 
	adding G_CALLBACK() casts and some const declarations.

2001-07-29  Sven Neumann  <sven@gimp.org>

	* app/docindex.c
	* app/ops_buttons.[ch]: more GObject porting.

2001-07-28  Hans Breuer  <hans@breuer.org>

	* */*/makefile.msc : updated for GTK2 build

	* app/widgets/makefile.msc : (new file) forgot this one last time

	* plug-ins/common/animationplay.c : reflect that GTK2 has its
	gdk<x|win32|fb>.h files in the back-end sub directories

	* plug-ins/common/gif.c :
	* plug-ins/common/jpeg.c :
	* plug-ins/dbbrowser/dbbrowser_utils.c :
	* plug-ins/gap/gap_dbbrowser_utils.c :
	* plug-ims/gimpressionist/presets.c :
	* plug-ims/gimpressionist/imap_setting.c :
	* plug-ims/gimpressionist/imap_source.c :
	* plug-ims/script-fu/script-fu-console.c :
	* plug-ims/script-fu/script-fu-scripts.c : #define GTK_ENABLE_BROKEN
	and include <gtk/gtktext.h> to make them compile/work again

	* plug-ins/common/spheredesigner.c : gtk_color_selction_set_opacity
	renamed to gtk_color_selection_set_current_alpha

	* plug-ins/gflare/gtkmultioptionmenu.c : ported ny removing the
	virtual draw function and style->xthickness and ythickness via
	direct access, klass field isn't available anymore

	* plug-ins/common/nlfilt.c :
	* plug-ims/gap/gap_movdialog.c :
	* plug-ims/gimpressionist/gimpressionist.c : 
	gtk_widget_set_default_visible is neither available nor needed anymore

	* plug-ins/common/plugindetails.c : ported to GtkTextBuffer
	and reflect gtk_paned api changes 

	* plug-ims/gimpressionist/imap_preview.c : replace GTK_WIDGET(a)->klass
	access by GTK_WIDGET_GET_CLASS(a) 

	* plug-ims/gimpressionist/imap_selection.c :
	* plug-ims/gimpressionist/imap_toolbar.c :
	* plug-ims/gimpressionist/imap_tools.c : gtk_toolbar api changes

2001-07-27  Sven Neumann  <sven@gimp.org>

	* app/core/core-types.h: 
	defined convenience macro g_signal_handlers_disconnect_by_data().
	Will try to persuade Tim to accept it for GLib.

	* app/module_db.c
	* app/undo_history.c
	* app/core/gimp.c
	* app/core/gimpbrush.c
	* app/core/gimpbrushpipe.c
	* app/core/gimpcontainer.c
	* app/core/gimpcontext.c
	* app/core/gimpdatafactory.c
	* app/core/gimpparasite.c
	* app/gui/brush-editor.c
	* app/gui/brush-select.c
	* app/gui/dialogs.c
	* app/gui/file-open-dialog.c
	* app/gui/gradient-select.c
	* app/gui/gradients-commands.c
	* app/gui/menus.c
	* app/gui/pattern-select.c: GObject porting. 
	Replaced all remainaing gtk_object_[unref|ref] calls by their 
	g_object_ counterparts, except refs that are used with 
	gtk_object_sink().

2001-07-27  Sven Neumann  <sven@gimp.org>

	* app/module_db.c
	* app/gui/color-area.c
	* app/widgets/gimpbrushfactoryview.c
	* app/widgets/gimpbufferview.c
	* app/widgets/gimpchannellistview.c
	* app/widgets/gimpcontainerlistview.c
	* app/widgets/gimpdatafactoryview.c
	* app/widgets/gimpdialogfactory.c
	* app/widgets/gimpdock.c: more GObject porting

2001-07-27  Michael Natterer  <mitch@gimp.org>

	* app/errorconsole.c
	* app/user_install.c: use GtkTextView.

	* app/gui/preferences-dialog.c: use GtkTextView correctly :)

	* app/interface.c: a quick hack which enables setting the
	canvas padding color via gtkrc.

	* app/file-utils.c
	* app/plug_in.c
	* app/pdb/fileops_cmds.c
	* tools/pdbgen/pdb/fileops.pdb: s/g_basename/g_path_get_basename/

	* app/tools/gimpinktool.c
	* app/tools/gimppainttool.c: stupid /me disabled all paint tools
	by setting pressure to 0.0 instead of 1.0, fixed now.

2001-07-27  Michael Natterer  <mitch@gimp.org>

	* app/gui/indicator-area.c: create/raise the new dialogs, not the
	old ones when clicking on the previews.

	* app/gui/palette-editor.c: some debugging g_print()s to track
	down a funny GTK+ "lets trash const data" bug.

	* app/gui/preferences-dialog.c: replaced deprecated GtkText with
	GtkTextBuffer/GtkTextView.

	* app/widgets/gimpdockbook.c: when creating a new dock from a DND
	operation, set it's auto_follow_active and show_image_menu state
	to the source dock's values.

2001-07-26  Sven Neumann  <sven@gimp.org>

	* configure.in: check for X, respect X_LIBS when searching for libxpm.
	We can't rely on GTK_LIBS including the X_LIBS any longer.
	
	* app/errorconsole.[ch]: some const fixes.

2001-07-25  Michael Natterer  <mitch@gimp.org>

	* gtkrc
	* gtkrc_user: updated for gtk+ 2.0, added a "gimp-" prefix to
	all global GIMP styles.

	* app/app_procs.c: typo.

	* app/user_install.c
	* app/gui/resolution-calibrate-dialog.[ch]: use GtkRcStyle along
	with gtk_widget_get_modifier_style()/gtk_widget_modify_style() as
	recommended instead of messing with the widgets' styles directly.

	* app/core/gimpdatalist.[ch]
	* app/core/gimpparasitelist.[ch]
	* app/core/gimpundo.[ch]
	* app/core/gimpundostack.[ch]: GObject porting stuff.

2001-07-25  Sven Neumann  <sven@gimp.org>

	* app/devices.c: fixed typo.
	
	* app/gdisplay.c
	* app/undo_history.c
	* app/user_install.c
	* app/gui/about-dialog.c
	* app/gui/color-area.c
	* app/gui/gradient-editor.c
	* app/gui/gui.c
	* app/gui/paths-dialog.c
	* app/gui/splash.c
	* app/tools/gimpcurvestool.c
	* app/tools/gimpinktool.c
	* app/tools/gimptexttool.c: 
	s/gdk_[bit|pix]map_unref/gdk_drawable_unref/
	
	* app/xcf/xcf-load.c: use GObject functions

	* plug-ins/common/animationplay.c: include GDK backend specific 
	headers

2001-07-25  Sven Neumann  <sven@gimp.org>

	* configure.in: only build X11 specific plug-ins and tools if 
	building for GTK+ on X11.

2001-07-25  Michael Natterer  <mitch@gimp.org>

	* HACKING
	* INSTALL: updated, mention pkg-config.

	* app/gdisplay_ops.c
	* app/gui/resize-dialog.c
	* app/gui/toolbox.c: more GObject porting and const stuff.

2001-07-25  Sven Neumann  <sven@gimp.org>

	* configure.in: check for pkg-config (>= 0.7)
	
	* gimptool-1.4.in: use pkg-config instead of glib-config and 
	gtk-config.

2001-07-25  Sven Neumann  <sven@gimp.org>

	* app_procs.c
	* errors.c
	* errors.h
	* file-save.c
	* gdisplay.c
	* module_db.c
	* undo.c: use GObject functions and const fixes.

2001-07-25  Michael Natterer  <mitch@gimp.org>

	* app/gui/brush-select.c
	* app/gui/channels-commands.c
	* app/gui/info-window.c
	* app/gui/layers-commands.c
	* app/gui/offset-dialog.c
	* app/gui/palette-import-dialog.c
	* app/gui/paths-dialog.c
	* app/gui/preferences-dialog.c: use GObject functions, stuff.

2001-07-25  Sven Neumann  <sven@gimp.org>

	* app/nav_window.c
	* app/user_install.c
	* app/pdb/color_cmds.c
	* app/pdb/selection_cmds.c
	* app/tools/gimpbezierselecttool.c
	* app/tools/gimpblendtool.c
	* app/tools/gimpbucketfilltool.c
	* app/tools/gimpbycolorselecttool.c
	* app/tools/gimpclonetool.c
	* app/tools/gimpcolorpickertool.c
	* app/tools/gimpdrawtool.c
	* app/tools/gimpeditselectiontool.c
	* app/tools/gimpellipseselecttool.c
	* app/tools/gimpfreeselecttool.c
	* app/tools/gimpfuzzyselecttool.c
	* app/tools/gimphuesaturationtool.c
	* app/tools/gimpiscissorstool.c
	* app/tools/gimppainttool.c
	* app/tools/gimprectselecttool.c
	* app/tools/gimptexttool.c
	* app/tools/gimptool.c
	* app/tools/paint_options.c
	* app/tools/selection_options.c
	* app/tools/tool_manager.c
	* app/tools/transform_options.c
	* app/widgets/gimpdnd.c
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/selection.pdb: use GObject functions.

2001-07-25  Sven Neumann  <sven@gimp.org>

	* app/gximage.c: replaced some deprecated gdk functions.
	
	* app/widgets/gimpcontainergridview.c
	* app/widgets/gimpcontainermenuimpl.c
	* app/widgets/gimpcursor.c
	* app/widgets/gimpdialogfactory.c
	* app/widgets/gimpdnd.c
	* app/widgets/gimpdock.c
	* app/widgets/gimpdockbook.c
	* app/widgets/gimphistogramview.c
	* app/widgets/gimplistitem.c
	* app/widgets/gimpmenuitem.c
	* app/widgets/gimpnavigationpreview.c
	* app/widgets/gimppreview.c
	* app/widgets/gimpwidgets-utils.c: more work on porting to GObject.

2001-07-25  Michael Natterer  <mitch@gimp.org>

	* app/gui/dialogs-constructors.c
	* app/widgets/gimpdockable.c: removed debugging g_print().

	* app/widgets/gimpdock.c: ditto, fixed a crash caused by some
	intermediate porting hack.

2001-07-24  Michael Natterer  <mitch@gimp.org>

	Port to glib/gtk+ 2.0 episode I (every segfault has it's beginning)

	* configure.in: require glib/gtk+ >= 1.3.7, commented out the
	gtkxmhtml stuff.

	From now on, you will need glib, pango, atk and gtk+ HEAD from CVS
	to hack or use GIMP HEAD.

	Beware, it crashes randomly :)

	* app/core/Makefile.am
	* app/core/gimpmarshal.list: new file plus rules to generate
	gimpmarshal.[ch] from it.

	* app/core/*
	* app/tools/*
	* app/widgets/*
	* libgimpwidgets/*: started to use the glib object system. All
	core/ objects are still gtk objects however. All signals are
	created using g_signal_new(). There are many gtk+ artefacts left.
	Finally, we will _not_ use the gtk_signal_foo() wrappers and
	friends any more.

	* app/colormaps.c
	* app/devices.[ch]
	* app/disp_callbacks.c
	* app/errorconsole.c
	* app/file-save.[ch]
	* app/interface.c
	* app/module_db.c
	* app/nav_window.c
	* app/ops_buttons.c
	* app/scroll.c
	* app/user_install.c
	* app/gui/about-dialog.c
	* app/gui/brush-editor.c
	* app/gui/brushes-commands.c
	* app/gui/color-notebook.c
	* app/gui/colormap-dialog.c
	* app/gui/dialogs-commands.c
	* app/gui/dialogs-constructors.c
	* app/gui/file-commands.c
	* app/gui/file-dialog-utils.c
	* app/gui/file-new-dialog.c
	* app/gui/file-open-dialog.[ch]
	* app/gui/file-save-dialog.c
	* app/gui/gradient-editor.c
	* app/gui/gradients-commands.c
	* app/gui/image-commands.c
	* app/gui/info-dialog.[ch]
	* app/gui/layer-select.c
	* app/gui/layers-commands.c
	* app/gui/menus.c
	* app/gui/offset-dialog.c
	* app/gui/palette-editor.c
	* app/gui/palettes-commands.c
	* app/gui/patterns-commands.c
	* app/gui/preferences-dialog.c
	* app/gui/resize-dialog.[ch]
	* app/gui/splash.c
	* app/gui/tips-dialog.c
	* app/gui/tool-options-dialog.c
	* app/gui/toolbox.c
	* app/gui/tools-commands.c
	* libgimp/gimpbrushmenu.c
	* libgimp/gimpmenu.c
	* libgimp/gimppatternmenu.c
	* libgimp/gimpui.c
	* libgimpbase/gimpenv.c: tons and tons of changes like "const
	gchar*", switch from GdkDeviceInfo to GdkDevice (very incomplete
	and currently disables), lots of s/gtk_signal/g_signal/,
	removal/replacement of deprecated stuff,
	s/GtkSignalFunc/GCallback/ and lots of small changes and fixes 
	while I was on it, zillions of warnings left...

	* modules/Makefile.am: disabled the water color selector
	temporarily (XInput issues).

	* plug-ins/Makefile.am
	* plug-ins/common/.cvsignore
	* plug-ins/common/Makefile.am
	* plug-ins/common/plugin-defs.pl: simply excluded all plug-ins
	which did not build (including Script-Fu). They are trivial to
	fix.

2001-07-23  Sven Neumann  <sven@gimp.org>

	* plug-ins/common/winclipboard.c
	* plug-ins/gap/gap_filter_foreach.c
	* plug-ins/imagemap/imap_cmd_guides.c
	* plug-ins/sel2path/pxl-outline.c: marked missing strings for 
	translation (patch from "Iccii" <iccii@hotmail.com>).

2001-07-22  Hans Breuer  <hans@breuer.org>

	* app/*/makefile.msc : 
	* plug-ins/makefile.msc	: 
	* libgimp/gimp.def :
	* libgimpwidgets/gimpwidgets.def : updated

	* makefile.msc :
	* app/xcf/makefile.msc :
	* regexrepl/makefile.msc : new files
	
	* app/base/base-config.c : a work-around for a gccism with
	structure initialization

	* app/core/gimp.c :
	* app/core/gimpimage-new.c :
	* app/gui/color-area.c
	* app/widgets/gimpdialogfactory.c
	* app/xcf/xcf-load.c
	* app/xcf/xcf-save.c
	* app/xcf/xcf-write.c
	* plug-ins/common/plasma.c :
	* plug-ins/flame/libifs.c : added <string.h> for strlen(), strcpy(),
	memcpy(), memcmp() and friends 	

	* plug-ins/imagemap/imap_rectangle.c :
	* plug-ins/ifscompose/ifscompose_storage.c : added <stdlib.h> for abs()

	* plug-ins/common/spheredesigner.c : reflect renaming of drawable.id
	drawable.drawable_id 

	* plug-ins/script-fu/siod-wrapper.c : <string.h> and conditional use
	of script_fu_server_quit () cause there is not yet script-fu server
	on win32.

2001-07-22  Stanislav Brabec  <utx@penguin.cz>

	* plugins/common/despeckle.c: Reflect my fix from 2001-03-01
	(range limits) in script-fu comments.

2001-07-20  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/dialog_handler.[ch]: removed.

	* app/widgets/gimpdialogfactory.[ch]: added the missing features
	from the dialog_handler: idle/unidle all dialogs and the show_all
	-> hide_all -> show_toolbox -> show_all cycling (a bit ugly
	currently because the toolbox's factory and it's identifier has to
	be passed to gimp_dialog_factories_toggle()).

	* app/disp_callbacks.c
	* app/gui/gui.c: call the new dialog factory class methods.

	* app/devices.c
	* app/docindex.c
	* app/errorconsole.c
	* app/nav_window.c
	* app/undo_history.c
	* app/gui/info-dialog.c
	* app/gui/file-open-dialog.c
	* app/gui/file-save-dialog.c: currently "unmanaged" because they
	are not yet registered with a dialog factory.

	* app/gui/menus.c: ditto for the tearoff menus.

	* app/gui/brush-select.c
	* app/gui/colormap-dialog.c
	* app/gui/gradient-select.c
	* app/gui/palette-select.c
	* app/gui/pattern-select.c
	* app/gui/tool-options-dialog.c
	* app/gui/toolbox.c: these are already factory created so toggling
	and (un)idling works like before.

	* app/widgets/gimpdock.c: reduced the minimal width from 280 to 250.

	* app/widgets/gimplayerlistview.c: use a toggle button instead of
	a check button for "Keep transp.".

2001-07-19  Sven Neumann  <sven@gimp.org>

	* configure.in: ran autoupdate on this file
	
	* app/xcf/xcf-load.c
	* app/xcf/xcf-private.h
	* app/xcf/xcf-save.c: code cleanup, no changes

2001-07-18  Michael Natterer  <mitch@gimp.org>

	* app/batch.c: bahave like the old batch code and call
	app_exit(FALSE) when reading from STDIN is finished.

2001-07-18  Sven Neumann  <sven@gimp.org>

	* plug-ins/script-fu/script-fu-text-console.c: stop reading on EOF

	* plug-ins/script-fu/script-fu-console.c
	* plug-ins/script-fu/script-fu.c: some small cleanups

2001-07-18  Michael Natterer  <mitch@gimp.org>

	* app/batch.[ch]: seems Mathieu messed up the last commit :) Added
	these two files back from the Attic, removed the old STDIN code
	and added a small hack which calls "extension-script-fu-text-console"

	* app/main.c: reverted to the last version, so old and new batch
	mode are both there now.

2001-07-17  Mathieu Lacage  <mathieu@gnome.org>

	* app/batch.c: new code to call the script_fuc_text_console pdb function.
	* app/main.c: (main): remove batch command code.

	* plug-ins/script-fu/Makefile.am: add siod-wrapper.h/c
	* plug-ins/script-fu/script-fu-console.c:
	(script_fu_cc_key_function), 
	(script_fu_open_siod_console),
	(script_fu_close_siod_console):
	* plug-ins/script-fu/script-fu-scripts.h: 
	* plug-ins/script-fu/script-fu-server.c: 
	(script_fu_server_quit),
	(script_fu_server_get_mode), 
	(execute_command):
	Replace all direct calls to the scheme interpreter with calls to the siod-wrapper.
	* plug-ins/script-fu/script-fu-console.h: remove run_eval.
	* plug-ins/script-fu/script-fu-server.h:
	* plug-ins/script-fu/script-fu-text-console.c:
	(script_fu_text_console_run), 
	(read_command),
	(script_fu_text_console_interface):
	The actual new text console.
	* plug-ins/script-fu/script-fu-text-console.h: header.
	* plug-ins/script-fu/script-fu.c: 
	(script_fu_quit),
	(script_fu_query), 
	(script_fu_run): rename to better words.
	move most of the code to siod-wrapper.c/h
	* plug-ins/script-fu/siod-wrapper.c: 
	(siod_get_output_file),
	(siod_set_output_file), 
	(siod_get_verbose_level),
	(siod_set_verbose_level), 
	(siod_print_welcome),
	(siod_interpret_string), 
	(siod_get_error_msg),
	(siod_get_success_msg), 
	(siod_init), 
	(init_procedures),
	(init_constants), 
	(convert_string), 
	(sputs_fcn), 
	(lprin1s),
	(marshall_proc_db_call), 
	(script_fu_register_call),
	(script_fu_quit_call):
	All the funcitons dealing with the internals of the scheme interpreter.
	* plug-ins/script-fu/siod-wrapper.h: the header.

2001-07-17  Michael Natterer  <mitch@gimp.org>

	* app/path.[ch]: removed path_to_beziersel() so this file can be
	safely included from core/.

	* app/tools/gimpbezierselecttool.[ch]: added it here.

	* app/core/core-types.h: added a GimpToolOptions typedef. Removes
	deps into tools/ and will later be a core object anyway.

	* app/tools/tools-types.h: removed the ToolOptions typedef here.

	* app/core/gimpimage-duplicate.c
	* app/core/gimpimage-mask.c
	* app/core/gimpimage.c
	* app/core/gimptoolinfo.[ch]: removed deps into tools/, misc stuff.

	* app/tools/tool_manager.[ch]: some ugly temp hacks. Please ignore.

	* app/widgets/gimpdialogfactory.[ch]: added a "remember_if_open" field
	to the GimpDialogFactoryEntry so we can manage dialogs which should
	not be re-opened on startup.

	* app/gui/dialogs-constructors.c
	* app/gui/dialogs.c: register & create all editor dialog with the
	"global_dialog_factory".

	* app/gui/tool-options-dialog.c
	* app/tools/*: s/ToolOptions/GimpToolOptions/

2001-07-15  Michael Natterer  <mitch@gimp.org>

	* libgimpbase/gimpwire.c: remove the usage of printf()/scanf()
	when sending doubles over the wire. Instead, rely on the memory
	layout of gdouble being IEEE compliant and transmit 8 bytes in
	network byte order.

	* libgimpbase/gimpprotocol.h: increase GP_VERSION because this
	makes the wire protocol binary incompatible.

	* app/main.c
	* libgimp/gimp.c: removed the setlocate(LC_NUMERIC,"C") workaround.

2001-07-15  Michael Natterer  <mitch@gimp.org>

	* app/core/gimp.c: don't use the global "the_gimp" variable.

	* app/core/gimpimage-convert.c: don't update the display here.

	* app/gui/gui.c: connect to the images' "mode_changed" signal
	and update here.

	* app/gui/brush-editor.[ch]
	* app/gui/gradient-editor.[ch]
	* app/gui/palette-editor.[ch]: pass a "Gimp" pointer to all
	editors. Added an palette_name entry to the palette editor.

	* app/gui/colormap-dialog.[ch]: removed all the dialog stuff and
	made the constructor return a vbox so it can be integrated in a
	dockable. Lots of cleanup and removal of anqiuqe aretfacts.

	* app/gui/dialogs-constructors.[ch]: wrap the colormap dialog in
	a dockable.

	* app/gui/dialogs-commands.[ch]
	* app/gui/dialogs.c
	* app/gui/menus.c: integrate the new dockable, made the "Brushes.."
	etc. menu entries create dockbles. Moved the old dialogs and the
	test menu entries to "Old + Testing" and removed N_() so the .po
	files stay cruft-free.

	* app/gui/test-commands.[ch]: removed lots of stuff which is not
	"testing" any more.

2001-07-14  Sven Neumann  <sven@gimp.org>

	* app/pdb/display_cmds.c
	* tools/pdbgen/pdb/display.pdb (display_new_invoker): removed 
	unnecessary check for image being nonempty.

2001-07-14  Fatih Demir <kabalak@gtranslator.org>

	* tips/Makefile.am|makefile.mingw: Added gimp_tips.tr.txt to the
	targets and re-ordered the tips files listings.

	* tips/gimp_tips.tr.txt: Added Turkish tips file from Alper Ersoy.

2001-07-13  Michael Natterer  <mitch@gimp.org>

	* app/appenv.h
	* app/main.c: removed "use_mmx" and the MMX detection.

	* app/base/Makefile.am: build the MMX detection unconditionally
	as it's already #ifdef'ed in the source.

	* app/base/detect-mmx.h: added a header for detect-mmx.S

	* app/base/base-config.[ch]: added the "use_mmx" boolean.

	* app/base/base.c: call intel_cpu_features() here.

	* app/paint-funcs/paint-funcs.c: #include "base/base-config.h".

	* app/floating_sel.c
	* app/core/gimpimage.c: removed commented out cruft.

	* app/core/gimplayer.c: gimp_layer_new_from_tiles(): pass the
	gimage instead of NULL to gimp_layer_new() because layers have to
	be created in an image context now
	(checked gimp_layer_new_from_tile()'s callers if this is
	semantically correct).

2001-07-12  Dave Neary  <dneary@eircom.net>

	* po/POTFILES.in: One line fix to fix dependency problem.
	
2001-07-12  Sven Neumann  <sven@gimp.org>

	* app/regexrepl.c
	* app/regexrepl.h: removed here ...

	* plug-ins/script-fu/regexrepl.c
	* plug-ins/script-fu/regexrepl.h: ... and here ...

	* regexrepl/Makefile.am
	* regexrepl/regex.c
	* regexrepl/regex.h: ... and added here again.
	
	* Makefile.am
	* configure.in
	* app/Makefile.am
	* app/pdb/plug_in_cmds.c
	* app/pdb/procedural_db_cmds.c
	* plug-ins/script-fu/Makefile.am
	* plug-ins/script-fu/interp_regex.c
	* tools/pdbgen/app.pl
	* tools/pdbgen/pdb/plug_in.pdb
	* tools/pdbgen/pdb/procedural_db.pdb: changed accordingly.

2001-07-12  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/detect_mmx.S: removed.

	* app/base/Makefile.am
	* app/base/detect-mmx.S: added.

2001-07-11  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpunit.c
	* app/unitrc.h: removed...

	* app/core/Makefile.am
	* app/core/gimpunit.[ch]: ...re-added here.

	* app/core/gimp.[ch]: added the image and drawable hash tables,
	next_image_ID, next_guide_ID and next_drawable_ID, added a
	GimpCoreConfig pointer which is now initalized dynamically.

	* app/core/gimpcoreconfig.[ch]: don't provide a global core_config
	variable any more (need to access gimp->config now).

	* app/gdisplay.[ch]
	* app/core/gimpdrawable.[ch]
	* app/core/gimpimage.[ch]: removed all global variables from
	gimpimage.c and gimpdrawable.c, pass a Gimp* to all *_get_by_ID()
	functions.

	* tools/pdbgen/app.pl: pass Gimp* to all _get_by_ID() functions.

	* app/app_procs.c
	* app/file-open.c
	* app/file-save.c
	* app/gimprc.c
	* app/libgimp_glue.c
	* app/module_db.c
	* app/plug_in.c
	* app/undo.c
	* app/user_install.c
	* app/core/core-types.h
	* app/core/gimpcontext.c
	* app/core/gimpimage-crop.c
	* app/core/gimpimage-new.c
	* app/core/gimpparasite.c
	* app/gui/file-new-dialog.c
	* app/gui/file-open-dialog.c
	* app/gui/info-window.c
	* app/gui/preferences-dialog.c
	* app/gui/resize-dialog.c
	* app/xcf/xcf-load.c
	* app/xcf/xcf-save.c
	* app/xcf/xcf.c
	* app/widgets/gimpdnd.c

	* app/pdb/channel_cmds.c
	* app/pdb/color_cmds.c
	* app/pdb/convert_cmds.c
	* app/pdb/display_cmds.c
	* app/pdb/drawable_cmds.c
	* app/pdb/edit_cmds.c
	* app/pdb/fileops_cmds.c
	* app/pdb/floating_sel_cmds.c
	* app/pdb/guides_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/layer_cmds.c
	* app/pdb/parasite_cmds.c
	* app/pdb/paths_cmds.c
	* app/pdb/selection_cmds.c
	* app/pdb/text_tool_cmds.c
	* app/pdb/tools_cmds.c
	* app/pdb/undo_cmds.c
	* app/pdb/unit_cmds.c

	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/unit.pdb: changed accordingly.

2001-07-10  Sven Neumann  <sven@gimp.org>

	Bugfixes from the stable branch:
	
	* plug-ins/common/bz2.c
	* plug-ins/common/gz.c: a fix for bug #57217 based on a patch from
	Raphael Quinet.

	* plug-ins/gap/gap_lib.c (p_file_copy): open files in binary mode. 
	A patch from Wolfgang Hofer that possibly fixes bug #52890.

	* tools/Makefile.am: added gimppath2svg.py to EXTRA_DIST.
	
2001-07-10  Michael Natterer  <mitch@gimp.org>

	* app/app_procs.[ch]: removed the gimp_busy boolean, check whether
	user_installation is needed here, not in user_install.c, parse
	gtkrc an friends only if(!no_interface), create the Gimp object
	before parsing gimp's rc files and pass it to the parse functions,
	many other cleanups.

	* app/appenums.h: added MessageHandlerType and StackTraceMode.
	
	* app/appenv.h: removed MessageHandlerType, declare all global
	variables from main.c (no more hidden global stuff please).

	* app/errors.[ch]: added the fatal message func here (from main.c),
	removed the StackTraceMode enum.

	* app/gimprc.[ch]: renamed functions to gimprc_*(), pass a Gimp
	pointer to some functions.

	* app/gimpunit.c
	* app/unitrc.h: ok, this is ugly: renamed all functions to
	_gimp_unit_*() and made them public. The unit list is part
	of the Gimp object now, so pass a Gimp* to all functions.

	* app/libgimp_glue.[ch]: added EEKy wrappers for all gimp_unit_*()
	functions which are used by widgets.

	* app/main.c: cleaned up the global variables, removed the fatal
	message handler, call app_init() directly, not via the
	user_install stuff, misc. cleanups.

	* app/user_install.[ch]: removed the check if user_installation is
	needed (done by app_procs.c now).

	* app/core/gimp.[ch]: added the user_unit list and the "busy"
	boolean. Moved gimp_[set|unset]_busy() here. Added
	gimp_initialize() which is called after unitrc and gimprc are
	parsed.

	* app/batch.c
	* app/colormaps.c
	* app/devices.c
	* app/disp_callbacks.c
	* app/gdisplay_ops.c
	* app/gimphelp.c
	* app/module_db.c
	* app/nav_window.c
	* app/plug_in.c
	* app/core/gimpcontext.c
	* app/core/gimpdatafiles.c
	* app/core/gimpimage-convert.c
	* app/core/gimpimage-duplicate.c
	* app/core/gimpimage.c
	* app/core/gimpparasite.c
	* app/core/gimpparasitelist.h
	* app/gui/file-open-dialog.c
	* app/gui/gui.[ch]
	* app/gui/info-dialog.c
	* app/gui/info-window.c
	* app/gui/preferences-dialog.c
	* app/gui/session.c
	* app/gui/tips-dialog.c
	* app/gui/toolbox.c
	* app/tools/gimpblendtool.c
	* app/tools/gimpbucketfilltool.c
	* app/tools/gimpcolorpickertool.c
	* app/tools/gimpfuzzyselecttool.c
	* app/tools/gimptransformtool.c
	* app/tools/tool_manager.c
	* app/widgets/gimpcolorpanel.c
	* app/widgets/gimpcursor.c
	* app/xcf/xcf-load.c
	* app/xcf/xcf-save.c
	* app/xcf/xcf.c
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/app.pl
	* tools/pdbgen/enums.pl
	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/message.pdb
	* tools/pdbgen/pdb/unit.pdb
	* app/pdb/image_cmds.c
	* app/pdb/message_cmds.c
	* app/pdb/unit_cmds.c: changed accordingly, minor cleanups.

2001-07-09  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/datafiles.[ch]
	* app/gimpparasite.[ch]
	* app/parasitelist.[ch]: removed...

	* app/core/Makefile.am
	* app/core/gimpdatafiles.[ch]
	* app/core/gimpparasite.[ch]
	* app/core/gimpparasitelist.[ch]: ...and added here.

	* app/gimprc.c
	* app/module_db.c
	* app/plug_in.c
	* app/undo.c
	* app/core/gimp.c
	* app/core/gimpchannel.c
	* app/core/gimpdatafactory.c
	* app/core/gimpdrawable.c
	* app/core/gimpimage-duplicate.c
	* app/core/gimpimage.c
	* app/core/gimplayer.c
	* app/xcf/xcf-load.c
	* app/xcf/xcf-save.c
	* tools/pdbgen/pdb/parasite.pdb
	* app/pdb/parasite_cmds.c: changed #include's accordingly.

2001-07-09  Dave Neary  <dneary@eircom.net>

	* app/plug_in.c: One-line fix which is needed, but never showed 
	up before. Initialise a string to NULL, to avoid a !=NULL
	mishap later on. 
	
2001-07-09  Michael Natterer  <mitch@gimp.org>

	* app/core/gimp.[ch]: added a (commented out) function to open
	files (to get rid of including gui/file-open-dialog.h)

	* app/gui/file-open-dialog.[ch]
	* app/gui/file-save-dialog.[ch]: renamed all functions because they
	are no callbacks any more. Removed the _by_extension() callbacks.

	* app/gui/file-commands.[ch]: added the
	file_[open|save]_by_extension() callbaks here along with some
	other stuff which has nothing to do with the file dialogs.

	* app/gui/menus.c: added a helper function to create an item
	factory, cleanup.

	* app/gui/palette-editor.[ch]: contains only the editor for a
	single palette now (removed the notebook and the palette list).
	Renamed all functions to palette_editor_*(). Will be made a
	dockable later.

	* app/gui/palette-select.[ch]: made it work like the other
	selection dialogs.

	* app/app_procs.c
	* app/docindex.c
	* app/gui/dialogs-constructors.[ch]
	* app/gui/dialogs.c
	* app/gui/gradient-select.c
	* app/gui/gui.c
	* app/widgets/gimpdnd.c: changed accordingly.

2001-07-08  Michael Natterer  <mitch@gimp.org>

	* app/disp_callbacks.c: the active_tool may change in the middle
	of gdisplay_canvas_events(), so re-get it after using it for
	cursor_update.

	* app/base/boundary.c: made some global variables local.

	* app/core/gimpdrawable.c: don't call gimp_drawable_set_visible()
	in gimp_drawable_configure() because we don't want signal
	emissions while configuring the drawable.

	* app/gui/Makefile.am
	* app/gui/brushes-commands.[ch]
	* app/gui/data-commands.[ch]
	* app/gui/gradients-commands.[ch]
	* app/gui/palettes-commands.[ch]
	* app/gui/patterns-commands.[ch]: new files for new new item
	factories' callbacks.

	* app/gui/menus.[ch]: added context menus for brushes, patterns, ...

	* app/gui/gradient-editor.c
	* app/gui/palette-editor.c: removed the "Save as POV", "Import
	Palette" and "Merge Palattes" buttons as they are item factory
	callbacks now.

	* app/widgets/gimpbrushfactoryview.[ch]
	* app/widgets/gimpbufferview.[ch]
	* app/widgets/gimpcontainereditor.[ch]
	* app/widgets/gimpdatafactoryview.[ch]: pass a
	"GimpContainerContextFunc" pointer to all GimpContainerEditor
	subclasses' constructors. Use the function to show the context
	menu.

	* app/widgets/gimpcontainergridview.c: dispatch the previews'
	"context" signal.

	* app/widgets/gimppreview.[ch]: new signal "context" which is
	emitted on right-click.

	* app/gui/brush-select.c
	* app/gui/dialogs-constructors.c
	* app/gui/gradient-select.c
	* app/gui/layers-commands.c
	* app/gui/palette-select.c
	* app/gui/pattern-select.c
	* app/gui/test-commands.c: changed accordingly.

2001-07-08  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/drawable.[ch]: removed.

	* app/core/gimpdrawable.[ch]: added the functions here. Made an
	end to the myth that FG/BG and the undo system (!!!) are not
	really part of the core.

	* app/disp_callbacks.c
	* app/floating_sel.c
	* app/image_map.c
	* app/qmask.c
	* app/undo.c
	* app/core/gimpchannel.c
	* app/core/gimpdrawable-desaturate.c
	* app/core/gimpdrawable-equalize.c
	* app/core/gimpdrawable-invert.c
	* app/core/gimpdrawable-offset.c
	* app/core/gimpedit.c
	* app/core/gimpimage-duplicate.c
	* app/core/gimpimage-mask.c
	* app/core/gimpimage-new.c
	* app/core/gimpimage.[ch]
	* app/core/gimplayer.c
	* app/core/gimplayermask.c
	* app/gui/channels-commands.c
	* app/gui/gui.c
	* app/gui/layers-commands.c
	* app/tools/gimpairbrushtool.c
	* app/tools/gimpbezierselecttool.c
	* app/tools/gimpblendtool.c
	* app/tools/gimpbrightnesscontrasttool.c
	* app/tools/gimpbucketfilltool.c
	* app/tools/gimpclonetool.c
	* app/tools/gimpcolorbalancetool.c
	* app/tools/gimpconvolvetool.c
	* app/tools/gimpcurvestool.c
	* app/tools/gimphistogramtool.c
	* app/tools/gimphuesaturationtool.c
	* app/tools/gimpinktool.c
	* app/tools/gimpiscissorstool.c
	* app/tools/gimplevelstool.c
	* app/tools/gimppainttool.c
	* app/tools/gimpposterizetool.c
	* app/tools/gimpscaletool.c
	* app/tools/gimpthresholdtool.c
	* app/tools/gimptransformtool.c
	* app/tools/tool_manager.c
	* app/widgets/gimpchannellistitem.c
	* app/widgets/gimpchannellistview.c
	* app/widgets/gimpdrawablelistitem.c
	* app/widgets/gimplayerlistitem.c
	* app/widgets/gimplayerlistview.c
	* app/pdb/channel_cmds.c
	* app/pdb/color_cmds.c
	* app/pdb/drawable_cmds.c
	* app/pdb/edit_cmds.c
	* app/pdb/floating_sel_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/layer_cmds.c
	* app/pdb/parasite_cmds.c
	* app/pdb/selection_cmds.c
	* app/pdb/text_tool_cmds.c
	* app/pdb/tools_cmds.c
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/drawable.pdb: changed accordingly. Misc small
	fixes and cleanups.

2001-07-07  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimage.[ch]: removed.

	* app/core/gimp.c: s/gimage_new/gimp_image_new/

	* app/gui/gui.c
	* app/tools/tool_manager.c: added the handlers from gimage.c

2001-07-07  Michael Natterer  <mitch@gimp.org>

	* app/tools/tool_manager.[ch]: put all tool_manager variables into
	a struct which is attached to a "Gimp". Pass a Gimp* to all
	tool_manager functions.

	* app/disp_callbacks.c
	* app/gdisplay.c
	* app/gimage.c
	* app/scale.c
	* app/scroll.c
	* app/undo.c
	* app/gui/convert-dialog.c
	* app/gui/edit-commands.c
	* app/gui/tool-options-dialog.c
	* app/gui/tools-commands.c: changed accordingly.

	* app/tools/gimpbezierselecttool.c
	* app/tools/gimpbrightnesscontrasttool.c
	* app/tools/gimpbycolorselecttool.c
	* app/tools/gimpclonetool.c
	* app/tools/gimpcolorbalancetool.c
	* app/tools/gimpcroptool.c
	* app/tools/gimpcurvestool.c
	* app/tools/gimpeditselectiontool.c
	* app/tools/gimphistogramtool.c
	* app/tools/gimphuesaturationtool.c
	* app/tools/gimplevelstool.c
	* app/tools/gimpposterizetool.c
	* app/tools/gimptexttool.c
	* app/tools/gimpthresholdtool.c
	* app/tools/gimptool.c
	* app/tools/gimptransformtool.c: mostly bad hacks for tool dialogs
	which exist without a real context. Needs some more review.

2001-07-07  Michael Natterer  <mitch@gimp.org>

	* app/core/Makefile.am
	* app/core/gimpimage-crop.[ch]: new files for gimp_image_crop()
	and gimp_image_crop_auto_shrink() (should share large portions of
	code with gimp_image_resize()).

	* app/tools/gimpcroptool.[ch]: removed here.

	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/tools.pdb: gimp_crop --> gimp_image_crop

	* app/pdb/image_cmds.c
	* app/pdb/internal_procs.c
	* app/pdb/tools_cmds.c
	* libgimp/gimpimage_pdb.[ch]
	* libgimp/gimptools_pdb.[ch]: regenerated.

	* plug-ins/common/autocrop.c
	* plug-ins/common/gif.c
	* plug-ins/common/guillotine.c
	* plug-ins/common/zealouscrop.c
	* plug-ins/perl/examples/image_tile
	* plug-ins/script-fu/scripts/add-bevel.scm
	* plug-ins/script-fu/scripts/ripply-anim.scm
	* plug-ins/script-fu/scripts/slide.scm: changed accordingly. Some
	cleanups in the plug-ins.

2001-07-07  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/context_manager.[ch]: removed.

	* app/app_procs.c: call tool_mananger instead of context_manager
	functions, pass "the_gimp" to some more functions.

	* app/drawable.[ch]: pass a GimpContext to drawable_fill().

	* app/errors.c: behave according to "stack_trace_mode" when using
	the debugging signal handler.

	* app/gimprc.[ch]: removed the core/ config variables.

	* app/selection.c: set the selection's state to INVISIBLE in
	selection_pause().

	* app/core/Makefile.am
	* app/core/gimpcoreconfig.[ch]: new files (the configuration
	variables used by core/).

	* app/core/gimpcontext.[ch]: removed the global contexts (user,
	default, ...) and their functions. It's no longer possible to pass
	NULL to the context functions to manipulate the current context
	(gimpcontext.c doesn't know the current context any more).

	* app/core/gimp.[ch]: added them here. The functions are now called
	gimp_[set|get]_*_context(). Added gimp_create_context() which is
	the only function to create contexts now.

	* app/gui/dialogs.[ch]
	* app/gui/gui.[ch]: pass "gimp" to all functions.

	* app/tools/tool_manager.[ch]
	* app/tools/tools.[ch]: pass "gimp" to lots of functions. Added
	the "global_tool_context" logic and the global/non-global paint
	options switching from the context_manager. Pass "gimp" to all
	tools' "register" functions.

	* app/tools/*: changed accordingly.

	* app/devices.c
	* app/disp_callbacks.c
	* app/file-open.[ch]
	* app/file-save.c
	* app/gdisplay.c
	* app/gimage.c
	* app/libgimp_glue.c
	* app/module_db.c
	* app/nav_window.c
	* app/plug_in.c
	* app/qmask.c
	* app/undo.c
	* app/base/base-config.c
	* app/core/gimpbrushpipe.c
	* app/core/gimpdrawable-offset.c
	* app/core/gimpgradient.c
	* app/core/gimpimage-duplicate.c
	* app/core/gimpimage-mask.c
	* app/core/gimpimage-new.c
	* app/core/gimpimage.c
	* app/core/gimppalette.c
	* app/core/gimptoolinfo.[ch]
	* app/core/gimpundo.c
	* app/gui/brush-select.c
	* app/gui/channels-commands.c
	* app/gui/color-area.c
	* app/gui/dialogs-constructors.c
	* app/gui/file-new-dialog.c
	* app/gui/file-open-dialog.c
	* app/gui/gradient-editor.c
	* app/gui/gradient-select.c
	* app/gui/info-window.c
	* app/gui/layers-commands.c
	* app/gui/menus.c
	* app/gui/palette-editor.c
	* app/gui/palette-import-dialog.c
	* app/gui/palette-select.c
	* app/gui/paths-dialog.c
	* app/gui/pattern-select.c
	* app/gui/preferences-dialog.c
	* app/gui/resize-dialog.c
	* app/gui/test-commands.c
	* app/gui/tool-options-dialog.c
	* app/gui/toolbox.c
	* app/gui/tools-commands.c
	* app/xcf/xcf-load.c
	* app/xcf/xcf-save.c
	* app/widgets/gimpchannellistview.c
	* app/widgets/gimpdnd.c
	* app/widgets/gimpdrawablelistview.[ch]
	* app/widgets/gimpimagedock.c
	* app/widgets/gimplayerlistview.c
	* app/pdb/brushes_cmds.c
	* app/pdb/drawable_cmds.c
	* app/pdb/gradient_select_cmds.c
	* app/pdb/gradients_cmds.c
	* app/pdb/palette_cmds.c
	* app/pdb/patterns_cmds.c
	* app/pdb/procedural_db.c
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb
	* tools/pdbgen/pdb/palette.pdb
	* tools/pdbgen/pdb/patterns.pdb: changed accordingly: remove usage
	of gimp_context_[get|set]_*(NULL), create contexts with
	gimp_create_context(). Get the user/current context with
	gimp_get_[user|current]_context(). Added/removed access to the
	global "the_gimp" variable in some places. Get the core's config
	variables from "core_config".
	
2001-07-06  Dave Neary  <dneary@eircom.net>

	* app/gimprc.c: Removed some C89 & gcc extention stuff which broke
	the build on some platforms.
	
2001-07-06  Dave Neary  <dneary@eircom.net>

	* po/POTFILES.in: Changed app/image_new.c to 
	app/core/gimpimage-new.c to get the build working.

2001-07-05  Michael Natterer  <mitch@gimp.org>

	* app/gimage.c: don't add the image to the image container,
	don't call undo_free().

	* app/core/gimp.[ch]: add new images to gimp->images, optionally
	attach the comment parasite.

	* app/core/gimpedit.c
	* app/core/gimpimage-duplicate.c
	* app/core/gimpimage-new.c
	* app/gui/file-open-dialog.c
	* app/gui/toolbox.c
	* tools/pdbgen/pdb/image.pdb
	* app/pdb/image_cmds.c
	* app/xcf/xcf-load.c: call gimp_create_image() and/or
	gimp_create_display(), don't attach a comment parasite.

	* app/core/gimpimage.c: call undo_free() in "destroy".

	* app/file-open.c
	* app/gui/palette-import-dialog.c
	* app/xcf/xcf-save.c: don't #include "gimage.h"

2001-07-05  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/image_new.[ch]: removed...

	* app/core/Makefile.am
	* app/core/core-types.h
	* app/core/gimpimage-new.[ch]: ...and (partly) added here.

	* app/core/gimp.[ch]: added gimp_create_image() which will be the
	_only_ place to get new images from soon.
	Added  a "create_display_func" function pointer...

	* app/gui/gui.[ch]: ...which gets initialized here.

	This way the core can create displays without depending on the
	interface.

	* app/app_procs.c
	* app/apptypes.h
	* app/core/gimpedit.c
	* app/gui/file-commands.c
	* app/gui/file-new-dialog.[ch]: changed accordingly.

2001-07-05  Michael Natterer  <mitch@gimp.org>

	* app/core/gimp.[ch]: renamed gimp_initialize() to gimp_restore()
	because it loads all kinds of data. Added gimp_shutdown() to save
	the data. Added the global parasite list.

	* app/apptypes.h: removed ParasiteList.

	* app/core/core-types.h: added GimpParasiteList.

	* app/gimpparasite.[ch]: removed the global parasite list.

	* app/parasitelist.[ch]: s/ParasiteList/GimpParasiteList/
	s/parasite_list_*/gimp_patasite_list_*/

	* app/core/gimpdatafactory.c: don't save the data in
	gimp_data_factory_data_free().

	* app/app_procs.c
	* app/gimprc.c
	* app/undo.c
	* app/core/gimpchannel.c
	* app/core/gimpdrawable.[ch]
	* app/core/gimpimage-duplicate.c
	* app/core/gimpimage.[ch]
	* app/core/gimplayer.c
	* app/pdb/brushes_cmds.c
	* app/pdb/parasite_cmds.c
	* app/widgets/gimpdatafactoryview.c
	* app/xcf/xcf-save.c
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/parasite.pdb: changed accordingly.

2001-07-04  Michael Natterer  <mitch@gimp.org>

	* app/core/Makefile.am
	* app/core/core-types.h
	* app/core/gimp.[ch]: added an "application object" called Gimp.

	Currently, it contains the image list, the clipboard, the data
	factories, the procedural hashtable and the tool info list.  It's
	the toplevel object of the core object system. Finally, creating a
	Gimp object will return a standalone gimp core engine instance
	with no other global states/variables involved.

	* app/app_procs.[ch]: allocate a "Gimp" instance called "the_gimp" :)
	Removed stuff which is now done by the "Gimp" object. Merged
	gimp_init() into app_init() because gimp_init() is taken now.

	* app/context_manager.[ch]: removed stuff done by "Gimp".

	* app/batch.[ch]
	* app/gimage.[ch]
	* app/xcf/xcf-load.[ch]
	* app/xcf/xcf.[ch]
	* app/core/gimpedit.[ch]
	* app/tools/tool_manager.[ch]: pass around an additional "Gimp"
	argument.

	* app/pdb/procedural_db.[ch]: pass a "Gimp" pointer as first
	parameter to all internal procedures and to all procedural_db_*
	functions.

	* app/core/gimpcontext.[ch]
	* app/core/gimpimage.[ch]: added a "Gimp" pointer to the structs.

	* app/devices.c
	* app/errors.c
	* app/file-open.c
	* app/file-save.c
	* app/gimphelp.c
	* app/gimpunit.c
	* app/image_new.c
	* app/main.c
	* app/nav_window.c
	* app/plug_in.c
	* app/base/base.c
	* app/core/gimpdatafactory.c
	* app/core/gimpimage-duplicate.c
	* app/core/gimpimage-mask.c
	* app/core/gimptoolinfo.[ch]
	* app/gui/brush-select.c
	* app/gui/convert-dialog.c
	* app/gui/dialogs-constructors.c
	* app/gui/edit-commands.c
	* app/gui/file-open-dialog.c
	* app/gui/file-save-dialog.c
	* app/gui/gradient-editor.c
	* app/gui/gradient-select.c
	* app/gui/gui.c
	* app/gui/image-commands.c
	* app/gui/info-window.c
	* app/gui/menus.c
	* app/gui/palette-editor.c
	* app/gui/palette-import-dialog.c
	* app/gui/palette-select.c
	* app/gui/paths-dialog.c
	* app/gui/pattern-select.c
	* app/gui/preferences-dialog.c
	* app/gui/test-commands.c
	* app/gui/toolbox.c
	* app/gui/tools-commands.c
	* app/tools/gimpbezierselecttool.c
	* app/tools/gimpbucketfilltool.c
	* app/tools/gimppainttool.h
	* app/tools/gimptexttool.c
	* app/tools/gimptransformtool.h
	* app/widgets/gimpbufferview.c
	* app/widgets/gimpcontainerview-utils.c
	* app/widgets/gimpcursor.c
	* app/widgets/gimpdnd.c
	* app/widgets/gimpimagedock.c: changed accordingly. Cleaned up
	lots of includes. Many files still access the global "the_gimp"
	variable exported by app_procs.h.

	* tools/pdbgen/app.pl
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/edit.pdb
	* tools/pdbgen/pdb/fileops.pdb
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb
	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/palette.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb
	* tools/pdbgen/pdb/procedural_db.pdb: changed accordingly. Don't
	use "the_gimp" here because all procedures get passed a "Gimp"
	pointer now.

	* app/pdb/*: regenerated.

2001-07-04  Dave Neary  <dneary@eircom.net>

	* po/POTFILESin: Changed to reflect some moved/removed files.

2001-07-03  Michael Natterer  <mitch@gimp.org>

	* configure.in: new directory app/xcf/

	* app/Makefile.am
	* app/global_edit.[ch]
	* app/xcf.[ch]: removed.

	* app/core/Makefile.am
	* app/core/gimpedit.[ch]: added here...

	* app/xcf/.cvsignore
	* app/xcf/Makefile.am
	* app/xcf/xcf-load.[ch]
	* app/xcf/xcf-private.h
	* app/xcf/xcf-read.[ch]
	* app/xcf/xcf-save.[ch]
	* app/xcf/xcf-seek.[ch]
	* app/xcf/xcf-write.[ch]
	* app/xcf/xcf.[ch]: ...and here (chopped up).

	* app/app_procs.c
	* app/disp_callbacks.c
	* app/floating_sel.c
	* app/gui/edit-commands.c
	* app/gui/toolbox.c
	* app/pdb/edit_cmds.c
	* app/widgets/gimpbufferview.c
	* tools/pdbgen/pdb/edit.pdb: changed accordingly.

2001-07-03  Sven Neumann  <sven@gimp.org>

	* plug-ins/common/xwd.c: applied patch from Peter Kirchgessner 
	<peter@kirchgessner.net> that fixes bug #56830.

	* app/global_edit.c: attach default comment to image created by
	gimp_edit_paste_as_new().

	Both changes merged from stable branch.

2001-07-02  Michael Natterer  <mitch@gimp.org>

	* app/global_edit.c: allow a NULL gimage argument for
	gimp_edit_paste_as_new() (don't set resolution and unit).

	* app/disp_callbacks.[ch]
	* app/interface.c: allow dropping of a GimpBuffer (pastes the
	buffer).

	* app/gui/toolbox.c: ditto (creates a new image).

2001-07-02  Michael Natterer  <mitch@gimp.org>

	* Makefile.am
	* configure.in
	* help/*: removed all help files. They will be distributed as a
	separate package in the future.

2001-07-02  Nick Lamb  <njl195@zepler.org.uk>

        * plug-ins/common/png.c: Change PNG defaults (no 1.0 gamma chunk)

2001-07-02  Sven Neumann  <sven@gimp.org>

	* gimptool-1.4.in
	* plug-ins/*/Makefile.am
	* plug-ins/common/mkgen.pl: merged fixes from stable branch
	
2001-07-02  Michael Natterer  <mitch@gimp.org>

	* app/gui/dialogs-commands.[ch]
	* app/gui/menus.c: added dialogs_toggle_auto_cmd_callback() which
	toggles GimpImageDock's "Auto" button.

	* app/gui/dialogs.c: ref/sink the global dialog factories.

	* app/widgets/gimpdialogfactory.[ch]: added some comments, some
	cleanups and additional checks. Factored out the "aux-info" stuff
	to separate functions.

	* app/widgets/gimpdockbook.c: set the state of the "Auto Follow
	Active Image" menu item.

	* app/widgets/gimpimagedock.[ch]: added a gboolean for
	"show_image_menu" so we don't need to fiddle around with the
	widgets to get this info. Added
	gimp_image_dock_set_auto_follow_active().

2001-07-01  Sven Neumann  <sven@gimp.org>

	* acconfig.h: add HAVE_FINITE and HAVE_ISFINITE 
	(fix from stable branch)

2001-06-29  Michael Natterer  <mitch@gimp.org>

	* app/appenums.h: removed GimpFillType.

	* app/gimprc.c: parse the session-info's new "aux-info" field.

	* app/global_edit.[ch]: removed the old "Paste Named" dialog and
	prefixed all functions with "gimp_".

	* app/core/core-types.h: added GimpFillType.

	* app/core/gimpbrush.[ch]: new signal "spacing_changed".

	* app/gui/Makefile.am
	* app/gui/tools-commands.[ch]: one more file cut out of commands.[ch].

	* app/gui/commands.[ch]: removed the tools stuff here.

	* app/gui/brush-select.[ch]
	* app/gui/dialogs-constructors.c: use the new GimpBrushFactoryView
	(see below).

	* app/gui/dialogs-commands.[ch]
	* app/gui/menus.[ch]:

	- Made it 64bit safe again by passing the dialog factory's
	  identifiers as GQuarks, not as guints created by GPOINTER_TO_UINT().
	- Added a "gchar *quark_string" field to GimpItemFactoryEntry
	  which gets transformed into a GQuark by menus_create_item().
	- Added SEPARATOR() and BRANCH() macros which make the *_entries[]
	  arrays more readable.
	- Added a menu item to show/hide GimpImageDock's image menu.
	- Removed file_last_opened_cmd_callback().

	* app/gui/edit-commands.c: the global_edit functions are "gimp_"
	prefixed now.

	* app/gui/file-commands.[ch]: added file_last_opened_cmd_callback()
	here.

	* app/widgets/Makefile.am
	* app/widgets/widgets-types.h
	* app/widgets/gimpbrushfactoryview.[ch]: new widget: a
	GimpDataFactory subclass with a "spacing" scale.

	* app/widgets/gimpcontainereditor.[ch]:

	- Connect to the GimpContainerView's "select_item",
	  "activate_item" and "context_item" signals here once instead of
	  in each subclass and dispatch them via new virtual functions.
	- Added a convenience function which makes DND to the buttons much
	  less painful for subclasses.

	* app/widgets/gimpbufferview.c
	* app/widgets/gimpdatafactoryview.[ch]: changed accordingly.

	* app/widgets/gimpdialogfactory.[ch]:

	- Added gimp_dialog_factory_dialog_raise() which can raise
	  toplevel dialogs _and_ dockables (and creates them if they are
	  not open yet).
	- Keep track of all created dialogs (not only toplevels).
	- Added an "aux_info" field to GimpSessionInfo which is a GList of
	  gchar* and is saved in sessionrc.
	- Remember if GimpImageDock's image menu is visible by using an
	  aux_info string.
	- The code did not become nicer with all those new constraints. I
	  have to add comments before I forget how it works.

	* app/widgets/gimpdockbook.c: set the state of the "Show Image Menu"
	menu item before popping up the item factory.

	* app/widgets/gimpimagedock.[ch]: added
	gimp_image_dock_set_show_image_meu().

	* plug-ins/gdyntext/gdyntext.c
	* plug-ins/perl/examples/fit-text
	* plug-ins/perl/examples/terral_text
	* plug-ins/perl/examples/tex-to-float: register all text rendering
	plug-ins under <Image>/Filters/Text

	* app/pdb/brush_select_cmds.c
	* app/pdb/drawable_cmds.c
	* app/pdb/edit_cmds.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/edit.pdb
	* tools/pdbgen/enums.pl
	* po/POTFILES.in: changed according to all the stuff above.

2001-06-27  Sven Neumann  <sven@gimp.org>

	* README.i18n: merged changes from stable branch.

2001-06-26  Sven Neumann  <sven@gimp.org>

	* gimptool.1.in
	* app/pdb/image_cmds.c
	* tools/pdbgen/pdb/image.pdb: ported changes from stable branch.

2001-06-26  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/color_transfer.[ch]: removed.

	* app/tools/Makefile.am
	* app/tools/gimpcolorbalancetool-transfer.[ch]: added.

	* app/tools/gimpcolorbalancetool.c: changed accordingly.

	* app/base/Makefile.am
	* app/base/tile-manager-crop.[ch]: formerly known as crop_buffer().

	* app/tools/gimptexttool.c: changed accordingly.

	* app/context_manager.[ch]: added the global clipboard and the
	named buffer list here.

	* app/app_procs.c: don't call color_transfer_init() and don't free
	the buffer stuff (done by the context manager now).

	* app/errorconsole.c: don't #include "gui/commands.h"

	* app/global_edit.[ch]: removed lots of stuff which is now done by
	gui/edit-commands.* or the new GimpBuffer object. The "paste
	named" dialog will go away and this file will be moved to core/
	soon.

	* app/image_new.c: no need to declare the global_buffer extern any
	more.

	* app/qmask.c: don't #include "global_edit.h"

	* app/core/Makefile.am
	* app/core/core-types.h
	* app/core/gimpbuffer.[ch]: new object (aka named buffer)

	* app/core/gimpcontext.[ch]: added a GimpBuffer attribute.

	* app/core/gimpimage.[ch]: one s/int/gboolean/.

	* app/core/gimppattern.c: hmm...

	* app/gui/commands.[ch]: split up in small files:

	* app/gui/Makefile.am
	* app/gui/edit-commands.[ch]
	* app/gui/file-commands.[ch]
	* app/gui/image-commands.[ch]
	* app/gui/select-commands.[ch]
	* app/gui/view-commands.[ch]: new files.

	* app/gui/dialogs-constructors.[ch]
	* app/gui/dialogs.c: added the named buffer list & grid.

	* app/gui/file-new-dialog.[ch]
	* app/gui/menus.c
	* app/gui/palette-editor.c
	* app/gui/test-commands.c: changed accordingly.

	* app/pdb/edit_cmds.c
	* tools/pdbgen/pdb/edit.pdb: changed for the global_edit stuff.

	* app/widgets/Makefile.am
	* app/widgets/gimpbufferpreview.[ch]
	* app/widgets/gimpbufferview.[ch]
	* app/widgets/gimpcontainereditor.[ch]: new widgets.

	* app/widgets/gimpcontainerview-utils.c
	* app/widgets/gimpdatafactoryview.[ch]
	* app/widgets/gimpdnd.[ch]
	* app/widgets/gimpdrawablepreview.c
	* app/widgets/gimplayerlistview.c
	* app/widgets/gimppreview.c
	* app/widgets/widgets-types.h: changed accordingly for the new
	GimpBuffer object and it's views, misc. cleanups.

	* pixmaps/Makefile.am
	* pixmaps/paste-as-new.xpm
	* pixmaps/paste-into.xpm
	* pixmaps/paste.xpm: new pixmaps (they all look the same... Tigert? ;-)

	* po/POTFILES.in: added the new files.

2001-06-25  Sven Neumann  <sven@gimp.org>

	* plug-ins/script-fu/scripts/burn-in-anim.scm: added Burn-In script
	written by Roland Berger <roland@fuchur.leute.server.de>.

2001-06-22  Sven Neumann  <sven@gimp.org>

	* libgimpmath/gimpmath.h: do not include math.h conditionally.
	
	* plug-ins/Lighting/lighting_ui.c
	* plug-ins/MapObject/mapobject_ui.c: ported fix for bug #50715 from
	stable branch.

2001-06-21  Sven Neumann  <sven@gimp.org>

	* plug-ins/gdyntext/ChangeLog
	* plug-ins/gdyntext/gdyntext.[ch]: ported changes from stable branch,
	updating GDynText to version 1.5.4.

2001-06-21  Sven Neumann  <sven@gimp.org>

	* plug-ins/Lighting/lighting_apply.c
	* plug-ins/common/papertile.c
	* plug-ins/common/vinvert.c
	* plug-ins/script-fu/scripts/textured-logo.scm: merged changes from
	stable branch that mark some leftover strings for translation.

2001-06-21  Sven Neumann  <sven@gimp.org>

	* plug-ins/common/ps.c: applied fix for #51403.
	* plug-ins/flame/flame.c: applied fix for #37761.
	* plug-ins/script-fu/script-fu-console.c: applied fix for #50522.

	All fixes taken from the stable branch.

	* app/gui/file-open-dialog: ported fix for #51722 from stable branch.

2001-06-20  Michael Natterer  <mitch@gimp.org>

	* app/gdisplay.c: same gdisplays_update_full() fix as in the
	stable branch. Removed lots of commented out code and comments
	about whether the code should be commented out or not.

	* app/core/gimpimage-mask.c: tried to fix it here first an ended
	up with a little cleanup.

2001-06-20  David Neary  <dneary@eircom.net>

	* configure.in
	* libgimp/gimpmath.h: Imported fix from bug #51822 into 1.3
	branch. Fix is courtesy of <bugzilla-gnome@thewrittenword.com>.
	
2001-06-18  Austin Donnelly  <austin@gimp.org>

	* plug-ins/common/newsprint.c: Fix from
	    <warner-gnome.bugzilla@lothar.com> for problem with GREYA
	    images: it was using the settings from the RGB colourspace
	    due to testing bpp != 1 rather than colour_bpp != 1
	    (colour_bpp has alpha taken out of it).  Fixes Bug#52981.
	    Sven committed the same fix to 1.2 CVS.  This also bumps the
	    version number to 0.60 to reflect this fixed bug.

2001-06-18  Michael Natterer  <mitch@gimp.org>

	* app/nav_window.[ch]: major cleanup. After being finished, I
	decided that it needs to be factored out to a widget (see below),
	so like 90% of this file will go away soon.

	* app/apptypes.h: added opaque NavigationDialog typedef.

	* app/gdisplay.[ch]: Added gdisplay_selection_visibility() which
	is called from gdisplays_selection_visibility(). Capitalized the
	SelectionControl enum values. Cleaned up the GDisplay struct and
	it's initialisation while i was on it.

	* app/gimage.c: gimage_size_changed_handler(): removed stuff which
	is now done by GimpImage itself.

	* app/scale.c
	* app/scroll.c: also update the navigation popup, not only the
	dialog.

	* app/selection.[ch]: major indentation & cleanup attack. Maybe
	found the "Selection vanishes" bug (the timeout id was assinged to
	a gint, not a _guint_).

	* app/undo.c: s/gimp_image_size_changed/gimp_viweable_size_changed/

	* app/core/gimpdrawable.c: invalidate the image's preview from our
	"invalidate_preview" implementation. This means that the image's
	preview is invalidated way too often currently, which cries for
	some general freeze/thaw mechanism on the GimpViewable level.
	(Note that previews are rendered in the idle loop, so this is not
	really a major performance impact, it's just ugly).

	* app/core/gimpimage.[ch]: removed the "size_changed" signal...

	* app/core/gimpviewable.[ch]: ...and added it here.

	* app/core/gimplayer.c: invalidate_preview(): always chain up,
	also if it's a floating selection.

	* app/gui/info-dialog.[ch]
	* app/gui/info-window.c: minor cleanups.

	* app/gui/preferences-dialog.c: no need to invalidate the image
	after we have invalidated all it's layers.

	* app/core/gimpimage-mask.c
	* app/gui/commands.c
	* app/tools/gimpeditselectiontool.c
	* app/tools/gimpinktool.c
	* app/tools/gimpmovetool.c
	* app/tools/gimppainttool.c: capitalized the SelectionCommand enum
	values.

	* app/widgets/Makefile.am
	* app/widgets/widgets-types.h
	* app/widgets/gimpnavigationpreview.[ch]: new widget.

	* app/widgets/gimppreview.[ch]: added a non-working
	non-dot-for-dot mode. Added xres/yres params to the
	gimp_preview_calc_size() helper function.

	Cache the "size" value which was passed to the simple function
	variants (gimp_preview_new() and gimp_preview_set_size()) so we
	can re-calculate the preview's extents on the underlying
	viewable's "size_changed" signal and on gimp_preview_set_viewable().

	* app/widgets/gimpdrawablepreview.c
	* app/widgets/gimpimagepreview.c: changed accordingly.

2001-06-18  Sven Neumann  <sven@gimp.org>

	* plug-ins/gfig/gfig.c
	* plug-ins/script-fu/scripts/land.scm: merged fixes from gimp-1-2.

2001-06-15  Michael Natterer  <mitch@gimp.org>

	* plug-ins/perl/Gimp/Lib.xs: forgot to s/id/drawable_id/ here.

2001-06-15  Austin Donnelly  <austin@gimp.org>

	* app/gdisplay.c: initialise gdisp->cursor_x and gdisp->cursor_y
	    to 0 in gdisplay_new() so that we don't get floating point
	    exceptions when attempting to translate to screen co-ords in
	    gdisplay_update_cursor().  Fixes critical Bug #56237.

2001-06-14  Michael Natterer  <mitch@gimp.org>

	* app/gdisplay.c: fixed a FIXME: set the sensitivity of the
	color tools' menu entries again.

	* libgimp/gimpcolorselector.h
	* libgimp/gimpdrawable.h
	* libgimp/gimpmenu.h: removed the usage of "id" from the public
	interface because it's a reserved keyword of Objective C.

	* libgimp/gimpdrawable.c
	* libgimp/gimptile.c

	* plug-ins/[lotsa plugins].c: changed accordingly.

2001-06-14  Sven Neumann  <sven@gimp.org>

	* app/tools/gimpmeasuretool.c: fixed typo, closes bug #56200.

2001-06-14  Sven Neumann  <sven@gimp.org>

	* app/disp_callbacks.c
	* app/gdisplay.c
	* app/gui/info-window.[ch]: 
	applied a patch from Ralf Engels <ralf-engels@gmx.de> that adds info
	about the cursor position to the Info window. Cleaned up the code a
	little while I was on it and renamed info_window_update_RGB() to
	info_window_update_extended().

2001-06-14  Sven Neumann  <sven@gimp.org>

	* app/core/gimpimage.c: fixed typo, closes bug #56193.

2001-06-12  Michael Natterer  <mitch@gimp.org>

	* libgimp/gimpdrawable.h: removed one more
	gimp_channel_ops_duplicate #define.

	* plug-ins/gap/gap_mov_dialog.c
	* plug-ins/gap/gap_mov_exec.c
	* plug-ins/gap/gap_pdb_calls.[ch]: removed a handmade PDB wrapper
	and use gimp_image_duplicate().

2001-06-12  Michael Natterer  <mitch@gimp.org>

	* plug-ins/script-fu/scripts/3d-outline.scm
	* plug-ins/script-fu/scripts/add-bevel.scm
	* plug-ins/script-fu/scripts/blend-anim.scm
	* plug-ins/script-fu/scripts/fuzzyborder.scm
	* plug-ins/script-fu/scripts/image-structure.scm
	* plug-ins/script-fu/scripts/old_photo.scm
	* plug-ins/script-fu/scripts/ripply-anim.scm
	* plug-ins/script-fu/scripts/round-corners.scm
	* plug-ins/script-fu/scripts/slide.scm
	* plug-ins/script-fu/scripts/spinning_globe.scm
	* plug-ins/script-fu/scripts/swirltile.scm
	* plug-ins/script-fu/scripts/waves-anim.scm
	* plug-ins/script-fu/scripts/weave.scm: follow API cleanup:

	s/gimp-channel-ops-duplicate/gimp-image-duplicate/
	s/gimp-channel-ops-offset/gimp-drawable-offset/

2001-06-08  Michael Natterer  <mitch@gimp.org>

	* configure.in: don't build devel-docs/pdb/Makefile.am

2001-06-07  Michael Natterer  <mitch@gimp.org>

	* configure.in: added zh_TW.Big5 to ALL_LINGUAS. Added the
	STRIP_BEGIN and STRIP_END macros from gtk+.

	* app/base/makefile.msc: unmodified copy of app/core/makefile.msc
	(just to make "make dist" work).

	* */Makefile.am: use @STRIP_BEGIN@ and @STRIP_END@ all over the
	place. The Makefiles are a bit uglier now but it makes compiling
	output much more readable.

2001-06-06  Adam D. Moss  <adam@gimp.org>

	* tools/pdbgen/pdb/image.pdb: gimp_image_list(),
	gimp_image_get_layers() and gimp_image_get_channels() via
	pdb were eventually crashing due to prepending to an
	uninitialised GList*...

2001-06-06  Dave Neary  <dneary@eircom.net>

	* plug-ins/gap/gap_lib.c
	* plug-ins/gap/gap_dbbrowser_utils.[ch]: Made a couple of small
	changes to remove warnings (including string.h, and moving header
	includes from .h file to .c file).
	
2001-06-05  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/base/Makefile.am
	* app/core/Makefile.am
	* app/gui/Makefile.am
	* app/paint-funcs/Makefile.am
	* app/pdb/Makefile.am
	* app/tools/Makefile.am
	* app/widgets/Makefile.am: no need to build .la objects for
	convenience libraries which are never linked into another dynamic
	library. Create simple .a files instead. Reduces compilation time
	of app/ by about 50%.

2001-06-05  Dave Neary  <dneary@eircom.net>

	* po/POTFILES.in: Changed one line to satisfy dependencies
	
2001-06-05  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/authors.h: removed.

	* app/gui/Makefile.am
	* app/gui/authors.h: added.

	* tools/authorsgen/authorsgen.pl: generate it in the new place.

	* app/gui/about-dialog.c
	* app/gui/commands.c
	* app/interface.c: don't #include "gimphelp.h"

2001-06-05  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/resize.[ch]: removed.

	* app/gui/Makefile.am
	* app/gui/resize-dialog.[ch]: added.

	* app/gui/commands.c
	* app/gui/layers-commands.c: changed accordingly.

2001-06-05  Michael Natterer  <mitch@gimp.org>

	* app/global_edit.c: some s/0/FALSE/

	* app/resize.[ch]: removed resize_scale_implement() and
	resize_check_layer_scaling(), cleanup.

	* app/core/gimpimage.[ch]: added gimp_image_check_scaling().

	* app/gui/commands.c: added image_scale_implement() as static
	function.

	* app/gui/tool-options-dialog.[ch]: add the tool options widgets
	to the dialog when they are first needed. Removed
	tool_options_dialog_add().

	* app/tools/tool_manager.c: don't call tool_options_dialog_add().

2001-06-03  Dave Neary  <dneary@eircom.net>

	* app/gimprc.[ch]: Made all the global options members of one
	struct, gimprc.

	* app/app_procs.c
	* app/colormaps.c
	* app/context_manager.c
	* app/devices.c
	* app/disp_callbacks.c
	* app/file-save.c
	* app/gdisplay.c
	* app/gdisplay.h
	* app/gdisplay_ops.c
	* app/gimphelp.c
	* app/image_new.c
	* app/interface.c
	* app/module_db.c
	* app/nav_window.c
	* app/plug_in.c
	* app/resize.c
	* app/scale.c
	* app/selection.c
	* app/undo.c
	* app/undo_history.c
	* app/user_install.c
	* app/xcf.c

	* app/core/gimpcontext.c
	* app/core/gimpimage.c
	* app/core/gimpundo.c

	* app/gui/brush-select.c
	* app/gui/commands.c
	* app/gui/file-new-dialog.c
	* app/gui/file-open-dialog.c
	* app/gui/file-save-dialog.c
	* app/gui/gui.c
	* app/gui/layer-select.c
	* app/gui/menus.c
	* app/gui/paths-dialog.c
	* app/gui/preferences-dialog.c
	* app/gui/session.c
	* app/gui/tips-dialog.c
	* app/gui/toolbox.c

	* app/tools/gimpbucketfilltool.c
	* app/tools/gimpbycolorselecttool.c
	* app/tools/gimpinktool.c
	* app/tools/gimpmagnifytool.c
	* app/tools/gimppainttool.c
	* app/tools/paint_options.c
	* app/tools/selection_options.c

	* app/widgets/gimpdrawablelistview.c

	* tools/pdbgen/pdb/gimprc.pdb
	* app/pdb/gimprc_cmds.c: Changed accordingly.
	
2001-06-01  Dave Neary  <dneary@eircom.net>

	* app/tools/gimpbycolorselecttool.c: added a call to
        by_color_select_close_callback() in _tool_destroy() to close 
        the dialog on exiting the tool.

2001-05-31  Dave Neary  <dneary@eircom.net>

	* app/core/gimpimage.[ch]
	* app/core/gimpimage-mask.c
	* app/tools/gimpbycolorselecttool.c
	* app/undo.c: Added a "mask_changed" signal, to allow
	gimpbycolorselect to update it's dialog properly, and take out a
	silly dependency in gimpimage.

	One outstanding issue is that now the dialog doesn't close
	automatically when the tool context changes. Working on it :)
	
2001-05-30  Michael Natterer  <mitch@gimp.org>

	* app/base/Makefile.am
	* app/core/Makefile.am
	* app/gui/Makefile.am
	* app/paint-funcs/Makefile.am: added makefile.msc to EXTRA_DIST.

	* app/core/gimpimage.c: don't try to create previews with width or
	height < 1.

	* app/gui/color-notebook.c: Major (??) dialog repacking. Don't
	show an action_area for the main color selection (it's now about
	half the size of the 1.2 one).

	* libgimp/gimpcolorselector.h: define some gui size constants
	here.

	* app/gui/color-select.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c: use the constants and removed the
	spacing around the main container.

	* libgimpwidgets/gimpcolorarea.[ch]: rendering in the idle loop
	fixes a race condition when accessing widget->window during widget
	resizing.

	* modules/Makefile.am: disabled the "GTK" color notebook page (we
	will put the GtkHSV widget of gtk+ 2.0 here).

2001-05-29  Simon Budig  <simon@gimp.org>

	* po/POTFILES.in: Added app/tools/gimpposterizetool.c
        which replaces posterize.c. Is it complete now?  :-)
	
2001-05-28  Dave Neary   <dneary@eircom.net>

	* po/POTFILES.in: Changed one filename to (finally) fix
        the build - sorry I missed this yesterday :)
	
2001-05-27  Dave Neary   <dneary@eircom.net>

	* po/POTFILES.in: Removed posterize.c to fix build
	
2001-05-25  Hans Breuer  <hans@breuer.org>

	* app/*/makefile.msc : almost completely autogenerated 
	all new makefiles (it simply was too much work to do
	this manually)

	* app/core/makefile.msc :
	* app/gui/makefile.msc :
	* app/paint-funcs/makefile.msc : new files
 
	* app/base/base.c : include <io.h> for unlink

	* libgimp*/makefile.msc :
	* libgimp*/*.def : adapted or regenerated

	* libgimp/gimpcolorselctor.h : include gmodule.h to avoid
	different declarations in different context.

	* libgimp/proceduraldb.c : string.h for memcmp

	* libgimpwidgets/libgimp-glue.c : include gimpbasetypes.h before
	gimpunits.h

	* plug-ins/common/animoptimize.c : added nops after
	labels. At least the msvc compiler doesn't compile it otherwise

	* plug-ins/twain/twain.c : added main() to allow to build 
	as console app

2001-05-25  Michael Natterer  <mitch@gimp.org>

	* app/base/pixel-processor.c: fixing a typo fixes ENABLE_MP.

	* app/core/gimpdrawable-histogram.c
	* app/core/gimpimage-colorhash.c
	* app/core/gimptoolinfo.c: fixed some #includes.

	* libgimpwidgets/gimpfileselection.[ch]
	* libgimpwidgets/gimpwidgetstypes.h: moved the opaque typedef to
	gimpwidgetstypes.h

	* po/POTFILES.in: reflect app/'s state again.

2001-05-25  Michael Natterer  <mitch@gimp.org>

	* configure.in: new directory devel-docs/libgimpbase/

2001-05-25  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/scan_convert.[ch]: removed.

	* app/core/Makefile.am
	* app/core/gimpscanconvert.[ch]: added. Changed all function names
	and use GimpVector2 instead of ScanConvertPoint.

	* app/base/base-types.h: removed ScanConvertPoint (didn't belong
	here anyway).

	* app/pdb/tools_cmds.c
	* app/tools/gimpfreeselecttool.[ch]
	* app/tools/gimpiscissorstool.c
	* tools/pdbgen/pdb/tools.pdb: changed accordingly.

2001-05-25  Michael Natterer  <mitch@gimp.org>

	* app/gimprc.[ch]: removed "num_processors".

	* app/base/base-config.[ch]: and added it here.

	* app/base/gimphistogram.c
	* app/base/pixel-processor.c
	* app/gui/preferences-dialog.c: changed accordingly.

2001-05-25  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpui.[ch]: removed.

	* app/tools/paint_options.[ch]: removed paint_mode_menu_new().

	* app/widgets/Makefile.am
	* app/widgets/gimpwidgets-constructors.[ch]
	* app/widgets/gimpwidgets-utils.[ch]: added here.

	* app/disp_callbacks.c
	* app/errors.c
	* app/gimphelp.c
	* app/interface.c
	* app/gui/brush-select.c
	* app/gui/channels-commands.c
	* app/gui/commands.c
	* app/gui/file-dialog-utils.c
	* app/gui/file-open-dialog.c
	* app/gui/file-save-dialog.c
	* app/gui/layers-commands.c
	* app/gui/tool-options-dialog.c
	* app/tools/gimpbrightnesscontrasttool.c
	* app/tools/gimpbycolorselecttool.c
	* app/tools/gimpclonetool.c
	* app/tools/gimpcolorbalancetool.c
	* app/tools/gimpcolorpickertool.c
	* app/tools/gimpcurvestool.c
	* app/tools/gimphistogramtool.c
	* app/tools/gimphuesaturationtool.c
	* app/tools/gimplevelstool.c
	* app/tools/gimpposterizetool.c
	* app/tools/gimpsmudgetool.c
	* app/tools/gimptexttool.c
	* app/tools/gimpthresholdtool.c
	* app/tools/gimptransformtool.c
	* app/tools/tool_manager.c
	* app/widgets/gimplayerlistview.c: changed accordingly.

2001-05-25  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/tool_options_dialog.[ch]: removed.
	* app/tools/tools.h: new file

	* app/gui/Makefile.am
	* app/gui/tool-options-dialog.[ch]: added.

	* app/tools/tools.c: renamed register_tools() to tools_init(), new
	function tools_exit().

	* app/app_procs.c
	* app/context_manager.c
	* app/tools/tool_manager.c
	* app/gui/dialogs-constructors.c
	* app/gui/gui.c: changed accordingly.

2001-05-25  Michael Natterer  <mitch@gimp.org>

	All tools are back :)

	* app/tools/Makefile.am
	* app/tools/brightness_contrast.[ch]
	* app/tools/color_balance.[ch]
	* app/tools/curves.[ch]
	* app/tools/histogram_tool.[ch]
	* app/tools/hue_saturation.[ch]
	* app/tools/levels.[ch]
	* app/tools/posterize.[ch]
	* app/tools/threshold.[ch]: removed...

	* app/tools/gimpbrightnesscontrasttool.[ch]
	* app/tools/gimpcolorbalancetool.[ch]
	* app/tools/gimpcurvestool.[ch]
	* app/tools/gimphistogramtool.[ch]
	* app/tools/gimphuesaturationtool.[ch]
	* app/tools/gimplevelstool.[ch]
	* app/tools/gimpposterizetool.[ch]
	* app/tools/gimpthresholdtool.[ch]: ...and ported to the new tool
	system. Yes, the toolbox looks strange right now.

	* app/tools/gimpimagemaptool.[ch]: base class for all image_map
	tools. Does nothing at all right now.

	* app/tools/gimpbucketfilltool.h: removed _new() function
	declaration.

	* app/tools/gimptool.c: removed obsolete stuff and STUB()s.

	* app/tools/tools.c: register the new tools.

	* app/menus.c: removed the #if 0 around the code which reorders
	the color tool menu entries.

	* app/app_procs.c
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/enums.pl
	* tools/pdbgen/pdb/color.pdb
	* app/pdb/color_cmds.c
	* po/POTFILES.in: changed accordingly.

2001-05-24  Michael Natterer  <mitch@gimp.org>

	* config.guess
	* config.sub: new versions from CVS (at least that's what my
	debian package says...)

	* app/Makefile.am
	* app/gimppreviewcache.[ch]: removed.

	* app/core/Makefile.am
	* app/core/gimppreviewcache.c: added.

	* app/core/gimpdrawable.c: reordered #includes

	* app/apptypes.h: make ImageMap a proper opaque typedef, not
	simply a gpointer.

	* app/image_map.[ch]: changed accordingly. cleanup.

	* app/tools/color_balance.h
	* app/tools/curves.h
	* app/tools/histogram_tool.h
	* app/tools/hue_saturation.h
	* app/tools/threshold.h: changed here too.

	* app/tools/gimptool.c: removed old by_color_select stuff.

	* libgimpbase/gimpbasetypes.h: /*< skip >*/ GIMP_UNIT_PERCENT as
	it's a UI convenience thing and no unit.

	* plug-ins/script-fu/script-fu-constants.c
	* tools/pdbgen/enums.pl: regenerated.

	* libgimpwidgets/gimpbutton.c: maybe this change makes GimpButton
	behave even more careful when changing GtkButton's private stuff.

2001-05-23  Michael Natterer  <mitch@gimp.org>

	* app/gimphistogram.[ch]
	* app/lut_funcs.[ch]: removed.

	* app/base/gimphistogram.[ch]
	* app/base/lut-funcs.[ch]
	* app/core/gimpdrawable-histogram.[ch]: added, cleanup.

	* app/Makefile.am
	* app/appenums.h
	* app/apptypes.h
	* app/base/Makefile.am
	* app/base/base-types.h
	* app/core/Makefile.am
	* app/core/gimpchannel.c
	* app/core/gimpdrawable-equalize.c
	* app/core/gimpdrawable-invert.c
	* app/pdb/color_cmds.c
	* app/widgets/gimphistogramview.c
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/enums.pl
	* tools/pdbgen/pdb/color.pdb: changed accordingly.

2001-05-22  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/resolution_calibrate.[ch]: removed

	* app/gui/Makefile.am
	* app/gui/resolution-calibrate-dialog.[ch]: added

	* app/user_install.c
	* app/gui/preferences-dialog.c
	* po/POTFILES.in: changed accordingly.

	* app/core/gimplayer.c: irrelevant doc reformating.

2001-05-22  Sven Neumann  <sven@gimp.org>

	* app/module_db.c: ported bugfix for #55050 from stable branch.

2001-05-22  Michael Natterer  <mitch@gimp.org>

	* libgimp/.cvsignore
	* libgimp/Makefile.am
	* libgimp/gimp.h
	* libgimp/gimpfeatures.h.in: removed gimpfeatures.h

	* libgimpbase/.cvsignore
	* libgimpbase/Makefile.am
	* libgimpbase/gimpbase.h
	* libgimpbase/gimpbasetypes.h
	* libgimpbase/gimpversion.h.in: and added it as gimpversion.h

	* configure.in: changed accordingly.

	* app/app_procs.c
	* app/main.c
	* app/gui/about-dialog.c
	* app/gui/splash.c
	* app/pdb/misc_cmds.c
	* tools/pdbgen/pdb/misc.pdb: fixed includes.

	* plug-ins/bmp/bmpread.c
	* plug-ins/bmp/bmpwrite.c
	* plug-ins/common/gif.c
	* plug-ins/common/gifload.c
	* plug-ins/common/jpeg.c
	* plug-ins/common/newsprint.c
	* plug-ins/common/ps.c
	* plug-ins/common/tiff.c
	* plug-ins/gdyntext/gdyntextcompat.h
	* plug-ins/gimpressionist/gimpressionist.c
	* plug-ins/perl/Gimp.xs
	* plug-ins/perl/Gimp/Lib.xs
	* plug-ins/pygimp/gimpmodule.c
	* tools/gimp-remote.c: removed all #ifdef GIMP_HAVE_BLAH
	conditionals as they are broken anyway since we changed all
	plug-ins with perl scripts shortly before 1.2. Also, refering to
	intermediate unstable releases is evil.

2001-05-21  Michael Natterer  <mitch@gimp.org>

	* app/app_procs.c
	* app/datafiles.c
	* app/devices.c
	* app/docindex.c
	* app/gdisplay_color.c
	* app/gdisplay_color_ui.c
	* app/gimphelp.c
	* app/main.c
	* app/module_db.c
	* app/plug_in.c
	* app/resize.c
	* app/resolution_calibrate.c
	* app/undo_history.c
	* app/user_install.c
	* app/core/gimpbrushpipe.c
	* app/core/gimpdata.c
	* app/core/gimpgradient.c
	* app/core/gimppalette.c
	* app/gui/about-dialog.c
	* app/gui/file-new-dialog.c
	* app/gui/gradient-editor.c
	* app/gui/layers-commands.c
	* app/gui/menus.c
	* app/gui/palette-editor.c
	* app/gui/session.c
	* app/gui/splash.c
	* app/gui/tips-dialog.c
	* app/pdb/image_cmds.c
	* app/pdb/text_tool_cmds.c
	* app/tools/curves.c
	* app/tools/gimptexttool.c
	* app/tools/levels.c
	* app/widgets/gimpdnd.c
	* app/widgets/gimppreview.c
	* libgimp/gimpcolordisplay.h
	* libgimpbase/gimpbase.h
	* libgimpwidgets/gimpcolorarea.c
	* libgimpwidgets/libgimp-glue.c
	* plug-ins/common/gih.c
	* plug-ins/common/psp.c
	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/text_tool.pdb: last checkin didn't get all
	#include "libgimp/i_dont_exist_any_more.h". This one should make
	it compile again without old crap hanging around in <prefix>/include.

2001-05-21  Michael Natterer  <mitch@gimp.org>

	* libgimp/gimp.def: removed removed symbols :)

	* libgimpbase/gimpbase.def
	* libgimpbase/makefile.mingw.in
	* libgimpbase/makefile.msc: added because they are in EXTRA_DIST.
	Will definitely not work before a friendly visit by Tor or Hans.

2001-05-21  Michael Natterer  <mitch@gimp.org>

	* Makefile.am
	* configure.in
	* gimptool-1.4.in: added new directory libgimpbase/

	* app/Makefile.am: link against the new lib.

	* app/appenums.h: removed the PDB enums which are in
	libgimpbase/gimpbasetypes.h now. They are all "Gimp" prefixed.

	* app/apptypes.h: #include "libgimpbase/gimpbasetypes.h"

	* app/[lots]
	* app/core/[of]
	* app/gui/[files]
	* app/tools/: changed includes and all PDB types.

	* app/pdb/*: regenerated.

	* libgimp/Makefile.am: don't build libgimpi.a uglyness any more.

	* libgimp/gimpenv.[ch]
	* libgimp/gimplimits.[hh]
	* libgimp/gimpparasite.[ch]
	* libgimp/gimpparasiteio.[ch]
	* libgimp/gimpprotocol.[ch]
	* libgimp/gimpsignal.[ch]
	* libgimp/gimpunit.h
	* libgimp/gimputils.[ch]
	* libgimp/gimpwire.[ch]: removed...

	* libgimpbase/*: ...and added here as new library.

	* libgimp/gimp.[ch]
	* libgimp/gimpdrawable.[ch]
	* libgimp/gimpenums.h
	* libgimp/gimpimage.[ch]
	* libgimp/gimptile.c
	* libgimp/gimptypes.h
	* libgimp/gimpunit.c: changed accordingly. Added the
	gimp_*_add_new_parasite to gimp.[ch], gimpdrawable.[ch] and
	gimpimage.[ch].

	* libgimpwidgets/gimppatheditor.c
	* libgimpwidgets/gimpquerybox.c
	* libgimpwidgets/gimpsizeentry.c
	* libgimpwidgets/gimpunitmenu.c
	* libgimpwidgets/gimpwidgets.c
	* libgimpwidgets/gimpwidgetstypes.h: changed includes accordingly.

	* plug-ins/*/Makefile.am
	* plug-ins/common/mkgen.pl: link against libgimpbase.

	* tools/pdbgen/Makefile.am: scan libgimpbase/gimpbasetypes.h, so
	the enums are known to pdbgen...

	* tools/pdbgen/enumcode.pl: ...but don't write them out to
	libgimp/gimpenums.h

	* tools/pdbgen/app.pl: include libgimp/gimpbase.h in all *_cmds.c
	files. Added GIMP_ to the type names ganerated in app/.

	* tools/pdbgen/enums.pl: regenerated.

	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/fileops.pdb
	* tools/pdbgen/pdb/procedural_db.pdb
	* tools/pdbgen/pdb/unit.pdb: changed includes.

Mon May 21 04:08:29 CEST 2001  Marc Lehmann <pcg@goof.com>

	* autogen.sh: allow for automake 1.4-p1 and similar version numbers.

2001-05-20  Michael Natterer  <mitch@gimp.org>

	* app/base/Makefile.am
	* app/base/base.[ch]: new files for base_init() and base_exit()
	which initialize/shutdown the paint_funcs and the tile_cache.

	* app/app_procs.c: removed the stuff here.

	* app/widgets/gimpchannellistitem.c: commented out unused code.

2001-05-20  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* plug-ins/script-fu/Makefile.am: put the regex and MMX sources to
	EXTRA_DIST so they get distributed unconditionally.

	* tools/pdbgen/pdb/layer.pdb: re-enabled the layer_mask procs but
	let them use accessors (which don't exist)...

	* app/pdb/pdb_glue.h: ... #define the accessors as macros here.

	Yes, this is ugly, but I simply don't fully understand pdbgen
	yoshcode.

	* app/pdb/internal_procs.c
	* app/pdb/layer_cmds.c
	* libgimp/gimplayer_pdb.[ch]: regenerated with the layer_mask
	accessors.

	* app/tools/Makefile.am: add the files which are not built to
	EXTRA_DIST.

	* pixmaps/Makefile.am
	* pixmaps/channel.xbm
	* pixmaps/eye.xbm
	* pixmaps/layer.xbm
	* pixmaps/linked.xbm
	* pixmaps/mask.xbm: removed.

	* plug-ins/Makefile.am: build XJT again because the layer_mask
	stuff is back. Perl also seems to build again.

	* plug-ins/common/aa.c: explicit casting fixes some warnings.

	* plug-ins/script-fu/interp_regex.c: #include "config.h".

2001-05-19  Sven Neumann  <sven@gimp.org>

	* app/main.c: s/USE_GCC_INTEL_MMX/HAVE_ASM_MMX/
	
	* app/path_curves.c: fixed some warnings and changed code so it
	does not try to draw unconfigured points.
	
	* app/base/temp-buf.[ch]: added a warning not to use the data field
	from the TempBuf struct directly.

2001-05-18  Michael Natterer  <mitch@gimp.org>

	* app/gui/menus.c: use the correct callback for opening L&C.

	* app/widgets/gimpdock.c: set the window title, the WM-name/class
	and the icon.

2001-05-16  Michael Natterer  <mitch@gimp.org>

	* app/general.[ch]: removed search_in_path() and the unused
	xstrsep().

	* app/plug_in.c: added plug_in_search_in_path(), don't include
	"general.h".

	* app/gimprc.c
	* app/image_render.c
	* app/gui/convert-dialog.c
	* app/gui/palette-editor.c
	* app/gui/paths-dialog.c
	* app/pdb/paths_cmds.c
	* app/tools/gimpairbrushtool.c
	* app/tools/gimpbezierselecttool.c
	* app/tools/gimpblendtool.c
	* app/tools/gimpbucketfilltool.c
	* app/tools/gimpclonetool.c
	* app/tools/gimpconvolvetool.c
	* app/tools/gimpdodgeburntool.c
	* app/tools/gimperasertool.c
	* app/tools/gimpfliptool.c
	* app/tools/gimppaintbrushtool.c
	* app/tools/gimppainttool.c
	* app/tools/gimppenciltool.c
	* app/tools/gimpperspectivetool.c
	* app/tools/gimprotatetool.c
	* app/tools/gimpscaletool.c
	* app/tools/gimpsheartool.c
	* app/tools/gimpsmudgetool.c
	* app/tools/gimptexttool.c
	* tools/pdbgen/pdb/paths.pdb: removed useless includes.

2001-05-15  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontextpreview.[ch]: removed (was not used).

	* app/apptypes.h: removed the Guide typedef.

	* app/core/core-types.h: added it here as GimpGuide (everything in
	core/ must be "Gimp"-prefixed).

	* app/gimage.[ch]: removed the global "next_guide_id" variable,
	don't destroy the guides in the "destroy" handler.

	* app/core/gimpimage.[ch]: destroy them in destroy().

	* app/xcf.c: use GimpImage accessors to add the guides, so we
	don't need "next_guide_id".

	* app/gdisplay.[ch]
	* app/undo.c
	* app/core/gimpimage-duplicate.c
	* app/tools/gimpcroptool.c
	* app/tools/gimpmeasuretool.c
	* app/tools/gimpmovetool.[ch]
	* app/pdb/guides_cmds.c
	* tools/pdbgen/pdb/guides.pdb: s/Guide/GimpGuide/, cleanup.

2001-05-15  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/fsdither.h: removed...

	* app/core/Makefile.am
	* app/core/gimpimage-convert-fsdither.h: ...and added here.

	* app/core/gimpimage-convert.c: changed accordingly.

2001-05-15  Michael Natterer  <mitch@gimp.org>

	* app/gimprc.c: register all parse functions in a hash table
	instead of a static array. This way, with some additional ugly
	hacking, we get the addresses of the variables in
	base/base-config.c registered. The whole config stuff has to be
	done properly at some point.

2001-05-15  Michael Natterer  <mitch@gimp.org>

	* configure.in: new directory app/base/

	* app/Makefile.am
	* app/boundary.[ch]
	* app/brush_scale.[ch]
	* app/gimpchecks.h
	* app/gimplut.[ch]
	* app/pixel_processor.[ch]
	* app/pixel_region.[ch]
	* app/pixel_surround.[ch]
	* app/temp_buf.[ch]
	* app/tile.[ch]
	* app/tile_cache.[ch]
	* app/tile_manager.[ch]
	* app/tile_manager_pvt.h
	* app/tile_pvt.h
	* app/tile_swap.[ch]: moved to base/

	* app/base/Makefile.am
	* app/base/base-types.h
	* app/base/*: new directory for the sub-object pixel maniplation
	and storage stuff. Does not include Gtk+ or anything outside
	base/. Did some cleanup in all files.

	* app/appenums.h
	* app/apptypes.h
	* app/core/gimpimage.h: removed types which are now in
	base/base-types.h.

	* app/base/base-config.[ch]
	* app/gimprc.[ch]: put the config variables for base/ to their own
	file so base/ doesn not have to include gimprc.h (does not yet
	work, i.e. the variables are un-configurable right now)

	* app/main.c: set a log handler for "Gimp-Base".

	* app/paint-funcs/Makefile.am
	* app/paint-funcs/paint-funcs.[ch]: removed the color hash which
	maps RGB to color indices because it's a totally standalone system
	which has nothing to do with the paint-funcs and introduced a
	GimpImage dependency.

	paint-funcs/ should be considered on the same sub-object
	(glib-only) level as base/, only in a different directory.

	* app/core/Makefile.am
	* app/core/gimpimage-colorhash.[ch]: put the color hash here.

	* app/gimage.c: don't invalidate the color hash here...

	* app/core/gimpimage.c: ... but in the colormap_changed() default
	inplementation. Initialize the hash in class_init().

	* tools/pdbgen/Makefile.am: scan app/base/base-types.h for enums.

	* tools/pdbgen/enums.pl: regenerated.

	* app/[lots]
	* app/core/[of]
	* app/gui/[files]
	* app/pdb/[all]
	* app/tools/[over]
	* app/widgets/[the]
	* tools/pdbgen/pdb/[place]: changed #includes accordingly. And use
	base_config->value instead of the stuff from gimprc.h.

2001-05-14  Michael Natterer  <mitch@gimp.org>

	* README.patch_xinput_airbrush
	* patch_xinput_airbrush: removed because GTK+-2.0 will manage the
	number of valuators dynamically.

	* app/Makefile.am: some more thinking about subdirectories.

	* app/boundary.c
	* app/pixel_processor.c
	* app/pixel_region.c: removed #include's, code cleanup.

	* libgimpwidgets/Makefile.am: install gimpbutton.h

	* devel-docs/libgimp/tmpl/gimpadaptivesupersample.sgml
	* devel-docs/libgimp/tmpl/gimpbilinear.sgml: removed ...

	* devel-docs/libgimpcolor/tmpl/gimpadaptivesupersample.sgml
	* devel-docs/libgimpcolor/tmpl/gimpbilinear.sgml: ... and added here.

	* devel-docs/libgimp/libgimp-decl.txt
	* devel-docs/libgimp/libgimp-sections.txt
	* devel-docs/libgimp/libgimp.hierarchy
	* devel-docs/libgimp/tmpl/gimpenums.sgml
	* devel-docs/libgimpcolor/libgimpcolor-decl.txt
	* devel-docs/libgimpcolor/libgimpcolor-docs.sgml
	* devel-docs/libgimpcolor/libgimpcolor-sections.txt
	* devel-docs/libgimpcolor/libgimpcolor.hierarchy
	* devel-docs/libgimpcolor/tmpl/gimpcolortypes.sgml: regenerated.

2001-05-14  Sven Neumann  <sven@gimp.org>

	* app/Makefile.am
	* libgimp/Makefile.am: don't reference header files which don't exist
	any longer

2001-05-14  Sven Neumann  <sven@gimp.org>

	* app/ops_buttons.[ch]: use GimpButton and connect to extended_clicked.
	
	* app/docindex.c
	* app/gui/paths-dialog.c: changed accordingly.

2001-05-14  Sven Neumann  <sven@gimp.org>

	* app/Makefile.am
	* app/pixmaps2.h: removed this file ...

	* app/tools/Makefile.am
	* app/tools/icons.h: ... and readded it here with some changes.

	* app/tools/*.c: include the new icons.h file

	* app/pdb/procedural_db.[ch]: declare name as const

2001-05-13  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/cursorutil.[ch]: removed. Stuff now lives in app_procs.[ch]
	and in widgets/gimpcursor.[ch]

	* app/appenv.h: added the "gimp_busy" boolean.

	* app/app_procs.[ch]: added the "busy" stuff here.

	* app/gui/gui.[ch]: "busy" stuff for the gui.

	* app/widgets/Makefile.am
	* app/widgets/gimpcursor.[ch]: exports only one function:
	gimp_cursor_new() which returns a GdkCursor which has to be
	destroyed.

	* app/apptypes.h
	* app/appenums.h: removed the cursor types.
	* app/widgets/widgets-types.h: added here.

	* app/tools/gimpeditselectiontool.[ch]: added
	gtkutil_compress_motion() here (will go to some utils file in
	widgets/).

	* app/tools/tools-types.h: #include "widgets/widgets-types.h"

	* app/dialog_handler.c
	* app/disp_callbacks.c
	* app/gdisplay.[ch]
	* app/nav_window.c
	* app/scroll.c
	* app/xcf.c
	* app/core/gimpimage-convert.c
	* app/core/gimpimage-duplicate.c
	* app/core/gimpimage.c
	* app/gui/file-open-dialog.c
	* app/tools/gimpblendtool.c
	* app/tools/gimpbucketfilltool.c
	* app/tools/gimpcroptool.c
	* app/tools/gimpfuzzyselecttool.c
	* app/tools/gimptransformtool.c
	* tools/pdbgen/pdb/image.pdb
	* app/pdb/image_cmds.c: use the new cursor and "busy" functions.

	* app/gdisplay.h
	* app/core/gimpbrush.c: added some ugly cross-includes.

	* app/context_manager.c
	* app/gdisplay_ops.c
	* app/gimprc.c
	* app/core/gimpdrawable-offset.c
	* app/gui/file-save-dialog.c
	* app/gui/gradient-editor.c
	* app/gui/preferences-dialog.c
	* app/tools/gimpbezierselecttool.c
	* app/tools/gimpbycolorselecttool.c
	* app/tools/gimpclonetool.c
	* app/tools/gimpcolorpickertool.c
	* app/tools/gimperasertool.c
	* app/tools/gimpfliptool.c
	* app/tools/gimpinktool.c
	* app/tools/gimpiscissorstool.c
	* app/tools/gimpmagnifytool.c
	* app/tools/gimpmeasuretool.c
	* app/tools/gimpmovetool.c
	* app/tools/gimppainttool.c
	* app/tools/gimprectselecttool.c
	* app/tools/gimprotatetool.c
	* app/tools/gimpselectiontool.c: removed inclusion of "cursorutil.h"

2001-05-13  Michael Natterer  <mitch@gimp.org>

	* app/appenums.h
	* app/core/core-types.h
	* app/tools/tools-types.h: moved some more types to core-types.h
	and tools-types.h.  Removed AUXILLARY_CHANNEL from the ChannelType
	enum.

	* app/gdisplay.[ch]: removed the "depth" and "color_type" fields
	from the struct. Cleaned up the header.

	* app/selection.c
	* app/gui/info-window.c: use g_visual->depth instead of
	gdisp->depth.

	* app/gimphelp.c: #include "core/core-types.h"

	* tools/pdbgen/Makefile.am: added app/core/core-types.h to the
	list of files to be scanned for enums.

	* libgimp/gimpenums.h
	* plug-ins/script-fu/script-fu-constants.c
	* tools/pdbgen/enums.pl
	* app/pdb/drawable_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/layer_cmds.c: regenerated.

2001-05-13  Michael Natterer  <mitch@gimp.org>

	* TODO.xml: some percentage updates.

	* autogen.sh: correctly parse latest autoconf's broken "--version"
	string.

	* app/widgets/Makefile.am
	* app/widgets/gimpcontainerview-utils.[ch]: new files which
	provide a set of built-in get_name_func()s for GimpContainerView
	and GimpContainerMenu.

	* app/widgets/gimpcontainermenu.c
	* app/widgets/gimpcontainerview.c: use them.

	* app/widgets/gimpimagedock.c
	* app/gui/dialogs-constructors.c: removed the get_name_func()s here.

2001-05-13  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h: removed some forgotten tools types.

	* app/tools/tools-types.h: and added them here.

	* app/interface.c
	* app/disp_callbacks.[ch]: ported dropping of drawables to the
	new DND system.

	* app/app_procs.c
	* app/core/gimpdatafactory.c
	* app/core/gimpimage-duplicate.c
	* app/core/gimptoolinfo.h
	* app/gui/gui.c
	* app/tools/tool_options.c
	* app/widgets/gimpchannellistview.c
	* app/widgets/gimplayerlistview.c: removed/fixed includes.

	* app/gui/brush-select.[ch]
	* app/gui/pattern-select.[ch]: removed the display of the current
	name (done by the grid view now).

	* app/gui/palette-select.c: fixed palette preview size.

	* app/gui/dialogs-constructors.c: added get_name() functions for
	brushes, patterns, images and palettes.

	* app/widgets/gimpcontainergridview.[ch]: added a label for the
	name of the active item.

	* app/widgets/gimpdnd.[ch]: removed the old drawable DND preview
	icon code.

	* tools/pdbgen/app.pl: braino: the $tool_eek hack has to be
	initialized to 0 at the beginning of each file, otherwise we end
	up including "tools/tools-types.h" everywhere.

	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/text_tool.pdb
	* tools/pdbgen/pdb/tools.pdb: add "tools/tools-types.h" where needed.

	* app/pdb/color_cmds.c
	* app/pdb/pattern_select_cmds.c
	* app/pdb/patterns_cmds.c
	* app/pdb/plug_in_cmds.c
	* app/pdb/procedural_db_cmds.c
	* app/pdb/selection_cmds.c
	* app/pdb/undo_cmds.c
	* app/pdb/unit_cmds.c: regenerated.

2001-05-12  Adam D. Moss  <adam@gimp.org>

	* plug-ins/common/animoptimize.c: Cunningly decrease
	the efficiency of the plugin.  Add semi-broken code
	to find or remove the statistical mode pixels across
	all frames (ie. the animation background).  Checked in
	mainly to avoid tree-drift until I have time to finish
	this.

2001-05-11  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/lc_dialog.[ch]: taken behind the curtain and shot.
	(famous words of Seth Burgess on #gimp)

	* app/app_procs.c
	* app/gdisplay.c
	* app/gimage.c
	* app/gui/commands.c
	* app/gui/gui.c
	* app/gui/menus.c
	* app/gui/preferences-dialog.c: don't #include it or call it's
	functions any more.

	* app/gui/dialogs-commands.[ch]: added a constructor for a dock
	which looks like the old L&C dialog (taken from test-commands.*)

	* app/gui/test-commands.[ch]: removed here.

	* app/gui/dialogs-constructors.[ch]: wrapped the old
	paths-dialog.* stuff in a dockable which can be created only
	once. Will go away as soon as the new path stuff is there.

	* app/gui/dialogs.c: added the paths dockable, removed lc_dialog.

	* app/gui/paths-dialog.c: some changes to make it work without the
	lc_dialog around it. Will probably crash randomly and refuse to
	update it's contents properly (scheduled for removal).

2001-05-11  Michael Natterer  <mitch@gimp.org>

	* app/gui/Makefile.am
	* app/gui/channels-dialog.[ch]
	* app/gui/layers-dialog.[ch]: at the end of their epoch, the
	dinosaurs were wiped out by a "cvs remove" impact from space.

	* app/lc_dialog.c: changed accordingly.

	* app/gui/layer-select.c: use the new preview system (mostly code
	removal).

	* app/gui/menus.c: reorder the dialog factory menu.

2001-05-10  David Neary  <dneary@eircom.net>

        * app/tools/gimpbycolorselecttool.[ch]
        * app/undo.c: Temporarily fixed an issue with undo when
        there's a bycolorselect mask on the image - since
        gimp_by_color_select_tool_initialize_by_image() should be
        a private function, this needs changing.

2001-05-10  Michael Natterer  <mitch@gimp.org>

	* app/widgets/gimpchannellistview.c: fixed button sensitivity.

	* app/widgets/gimpdialogfactory.c: write out newlines to
	.sessionrc at the right places.

	* app/widgets/gimpdock.c: s/gimp_dockable/gimp-dockable/ makes DND
	re-arranging of dialogs work again.

2001-05-10  David Neary  <dneary@eircom.net>

        * tools/gimp-remote.c: Got rid of some annoying 
        warnings about stuff like exit not having a prototype.
        Included string.h and stdlib.h.

2001-05-10  David Neary  <dneary@eircom.net>

	* app/tools/gimpbycolorselecttool.[ch]: Activate 
	"Select by color" tool.

	* app/tools/Makefile.am
	* app/tools/tools.c
	* app/tools/gimptool.[ch]
	* app/tools/selection_options.c
	* tools/pdbgen/pdb/tools.pdb: Changed accordingly
	
2001-05-10  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/asupsample.[ch]: removed.

	* app/core/Makefile.am
	* app/core/core-types.h
	* app/tools/Makefile.am
	* app/tools/tools-types.h: new files.

	* app/tools/gimptoolinfo.[ch]: removed.
	* app/core/gimptoolinfo.[ch]: added here.

	* libgimp/Makefile.am
	* libgimp/gimp.h
	* libgimp/gimpadaptivesupersample.[ch]
	* libgimp/gimpbilinear.[ch]: removed here...

	* libgimpcolor/Makefile.am
	* libgimpcolor/gimpcolortypes.h
	* libgimpcolor/gimpadaptivesupersample.[ch]
	* libgimpcolor/gimpbilinear.[ch]: ..and added here.

	* tools/pdbgen/app.pl
	* tools/pdbgen/pdb/paths.pdb

	* app/*.c: changed tons of #include's

2001-05-09  Michael Natterer  <mitch@gimp.org>

	* configure.in
	* app/Makefile.am: added new directory app/core/ for the core
	object system.

	* app/gimage_mask.[ch]
	* app/gimpbrush-header.h
	* app/gimpbrush.[ch]
	* app/gimpbrushgenerated.[ch]
	* app/gimpbrushpipe.[ch]
	* app/gimpchannel.[ch]
	* app/gimpcontainer.[ch]
	* app/gimpcontext.[ch]
	* app/gimpdata.[ch]
	* app/gimpdatafactory.[ch]
	* app/gimpdatalist.h
	* app/gimpdrawable-desaturate.[ch]
	* app/gimpdrawable-equalize.[ch]
	* app/gimpdrawable-invert.[ch]
	* app/gimpdrawable-offset.[ch]
	* app/gimpdrawable-preview.[ch]
	* app/gimpdrawable.[ch]
	* app/gimpgradient.[ch]
	* app/gimpimage-convert.[ch]
	* app/gimpimage-duplicate.[ch]
	* app/gimpimage-undo.[ch]
	* app/gimpimage.[ch]
	* app/gimplayer.[ch]
	* app/gimplayermask.[ch]
	* app/gimplist.[ch]
	* app/gimpmarshal.[ch]
	* app/gimpobject.[ch]
	* app/gimppalette-import.[ch]
	* app/gimppalette.[ch]
	* app/gimppattern-header.h
	* app/gimppattern.[ch]
	* app/gimpundo.[ch]
	* app/gimpundostack.[ch]
	* app/gimpviewable.[ch]: removed these files...

	* app/core/*: ...and added them here.

	* app/*.c
	* app/gui/*.c
	* app/pdb/*.c
	* app/tools/*.c
	* app/widgets/*.c
	* plug-ins/common/gbr.c
	* plug-ins/common/gih.c
	* plug-ins/common/pat.c
	* po/POTFILES.in
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/enums.pl
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/*.pdb: changed accordingly.

2001-05-08  Michael Natterer  <mitch@gimp.org>

	* app/appenums.h: removed GimpDropType.
	* app/widgets/widgets-types.h: added GimpDropType.

	* app/gui/channels-dialog.c
	* app/gui/layers-dialog.c: #include "widgets/widgets-types.h"

2001-05-08  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpdnd.[ch]: removed.

	* app/widgets/Makefile.am
	* app/widgets/gimpdnd.[ch]: and moved here.

	* app/devices.c
	* app/docindex.c
	* app/interface.c
	* app/gui/about-dialog.c
	* app/gui/channels-dialog.c
	* app/gui/color-area.c
	* app/gui/color-select.c
	* app/gui/colormap-dialog.c
	* app/gui/gradient-editor.c
	* app/gui/indicator-area.c
	* app/gui/layers-dialog.c
	* app/gui/palette-editor.c
	* app/gui/palette-select.c
	* app/gui/toolbox.c
	* app/tools/gimpblendtool.c
	* app/tools/tool_manager.c
	* app/tools/tool_options_dialog.c: changed #includes accordingly.

2001-05-08  Michael Natterer  <mitch@gimp.org>

	* app/appenums.h: added ChannelType.
	* app/gimpimage.h: removed ChannelType.
	* tools/pdbgen/enums.pl: regenerated.

	* app/apptypes.h: don't include libgimpwidgets/gimpwidgetstypes.h
	and widgets/widgets-types.h any more.

	* app/devices.c
	* app/gimpdnd.c
	* app/gimprc.c
	* app/lc_dialog.c
	* app/gui/[many].c: include widgets/widgets-types.h

	* app/tools/histogram_tool.h: include widgets/widgets-types.h here
	because of an ugly dependency from pdb/color_cmds.c

	* app/tools/tool_options_dialog.c

	* app/widgets/widgets-types.h: include
	libgimpwidgets/gimpwidgetstypes.h and apptypes.h so files in
	widgets/ only have to include this file.

	* app/widgets/*.c: include widgets-types.h instead of apptypes.h

	* app/gimpdrawable-preview.c
	* app/gui/gradient-editor.c: removed useless #includes.

2001-05-07  Michael Natterer  <mitch@gimp.org>

	* app/gimpimage.[hc]: new signal "floating_selection_changed",
	removed ancient declaration of _GimpImageRepaintArg.

	* app/floating_sel.c
	* app/undo.c: emit "floating_selection_changed" where approptiate.

	* app/gimage_mask.c: s/"Floated Layer"/"Floating Selection"/
	because we view this layer directly now (not some thing with an
	"L" icon).

	* app/gui/layers-commands.c: don't use confusing boolean variables
	which indicate that something is not true (reversed their logic).

	* app/widgets/Makefile.am
	* app/widgets/widgets-types.h
	* app/widgets/gimpchannellistitem.[ch]: new widget. Does nothing yet.

	* app/widgets/gimpchannellistview.c: set the button box
	insensitive when there is a floating selection.

	* app/widgets/gimpdrawablelistitem.c: made channel DND work again.
	Very ugly btw.

	* app/widgets/gimpdrawablelistview.c: connect to
	"floating_selection_changed". Fake a change of the active drawable
	so the button boxes get updated correctly.

	* app/widgets/gimplayerlistview.c: set the sensitivity of the
	buttons correctly.

	* app/widgets/gimplistitem.c: create GimpChannelListItems for
	channels.  Some very ugly code to work around broken
	GTK_STATE_INSENSITIVE propagation in list items.

2001-05-06  Michael Natterer  <mitch@gimp.org>

	* app/widgets/gimpchannellistview.c: enabled setting component
	activity. Connect an "extended_clicked" callback to the "To
	Selection" button for add/sub/intersect.

	* app/widgets/gimpcomponentlistitem.c: removed some commented out
	code.

	* app/widgets/gimpdrawablelistview.c: stuff.

	* app/widgets/gimplayerlistview.c: set "Raise" to insensitive if
	the active layer has no alpha.

	* libgimpwidgets/gimpbutton.c: fiddle around correctly with
	GtkButton's internals.

2001-05-06  Sven Neumann  <sven@gimp.org>

	* libgimpwidgets/Makefile.am
	* libgimpwidgets/gimpwidgets.h
	* libgimpwidgets/gimpwidgetstypes.h
	* libgimpwidgets/gimpoffsetarea.c
	* libgimpwidgets/gimpoffsetarea.h: new widget GimpOffsetArea cut 
	of the resize dialog, allows to interactively specify offsets when 
	resizing images or drawables.

	* libgimpwidgets/gimppixmap.c: removed empty destroy method.

	* app/resize.c: use new GimpOffsetArea.

2001-05-06  Michael Natterer  <mitch@gimp.org>

	* libgimpwidgets/Makefile.am
	* libgimpwidgets/gimpbutton.[ch]: new widget derived from
	GtkButton.  It adds an "extended_clicked" signal which is emitted
	instead of "clicked" if a modifier was pressed.

	* libgimpwidgets/gimpchainbutton.[ch]
	* libgimpwidgets/gimppixmap.[ch]: removed the opaque typedefs.

	* libgimpwidgets/gimpwidgets.h
	* libgimpwidgets/gimpwidgetstypes.h: and added them here. Added
	GimpButton.

	* app/widgets/gimpdrawablelistview.c: use GimpButtons for "Raise"
	and "Lower" and raise/lower to top/bottom on shift-click.

2001-05-06  Michael Natterer  <mitch@gimp.org>

	* app/gimpimage.[ch]: renamed "restructure" to "alpha_changed" and
	only emit it in flatten(), not in merge_layers().

	* app/gimage.c
	* app/gimplayer.c: changed accordingly.

	* app/widgets/gimpcontainerlistview.c: set both scrollbar policies
	to automatic.

2001-05-06  Michael Natterer  <mitch@gimp.org>

	* app/gimpimage.[ch]: renamed the "resize" signal to "size_changed".

	* app/gimage.c: changed accordingly.

	* app/undo.c: renamed the "shrink_wrap" to "size_changed", call
	gimp_image_size_changed() and let the handlers do the work.

	* app/widgets/gimplistitem.[ch]: added a virtual set_preview_size()
	method and a default implementation.

	* app/widgets/gimplayerlistitem.c: added an inplementation of
	set_preview_size() which set's the size of the mask preview.

	* app/widgets/gimpchannellistview.c: implement set_preview_size()
	and set the size of the component previews.

	* app/widgets/gimpcontainerlistview.c: call
	gimp_list_item_set_preview_size() instead of resizing the preview
	manually.

	* app/widgets/gimpcontainerview.c: emit "set_preview_size" even if
	the size has not changed so we can use it to re-calculate the
	preview size on image size change.

	* app/widgets/gimpdrawablelistview.c: connect to the image's
	"size_changed" signal and trigger preview size re-calculation in
	the callback.

2001-05-06  Michael Natterer  <mitch@gimp.org>

	* app/appenums.h: added GimpDropMode...
	* app/gimpdnd.h: ...removed from here.

	* app/gimpimage.[ch]:
	- New signal "mode_changed".
	- removed "const GimpImage*" from gimp_image_colormap_changed()
	  because a signal emission is never "const" for the object
	  which emits the signal.
	- Fixed gimp_image_[set|get]_component_[active|visible]():
	  ALPHA_CHANNEL maps to ALPHA_PIX only in RGB mode, use
	  ALPHA_G_PIX/ALPHA_I_PIX in GRAY/INDEXED mode.

	* app/gimpimage-convert.c
	* app/undo.c: call gimp_image_mode_changed().

	* app/gimpviewable.c: added an implementation of
	"invalidate_preview" which frees the preview temp_buf which may be
	attached to the viewable. Subclasses need to chain up now.

	* app/gimpdrawable.c
	* app/gimpimage.c: chain up in invalidate_preview().

	* app/widgets/gimpchannellistview.c: connect to the image's
	"mode_changed" signal and rebuild the channel list in the
	callback.

	* app/widgets/gimpcontainerview.h: indentation.

	* app/widgets/gimpdockbook.c: set the dockable's context to NULL
	in gimp_dockbook_remove()

	* app/widgets/gimpimagedock.c: forgot to actually set the dock's
	image in gimp_image_dock_new().

	* app/gui/dialogs-constructors.c: added a get_name_func() for tool
	views which returns the tool's "blurb". It's safe to assume now
	that a dockable's context will exist as long as the dockable
	exists unless it's explicitely set to NULL, so remove ugly hacks
	handling context destruction.

	* app/tools/gimptool.c: removed COMPAT_CRUFT and useless #include's.

2001-05-04  Michael Natterer  <mitch@gimp.org>

	* configure.in
	* devel-docs/Makefile.am
	* devel-docs/libgimpcolor/*
	* devel-docs/libgimpmath/*
	* devel-docs/libgimpwidgets/*: added new gtk-doc modules for
	libgimpcolor, libgimpmath and libgimpwidgets. Moved existing
	documentation from the old files to the new templates.

	* devel-docs/libgimp/*: regenerated all files and removed the
	stuff which is in the new modules now.

	* libgimpwidgets/gimpcolorarea.c
	* libgimpwidgets/gimpcolorbutton.[ch]: some documentation fixes.

	* po-libgimp/Makefile.in.in
	* po-plug-ins/Makefile.in.in
	* po-script-fu/Makefile.in.in: updated.

2001-05-03  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h: removed typedefs from the widgets/ subdir.

	* app/widgets/Makefile.am
	* app/widgets/widgets-types.h: new file.

	* app/widgets/gimpcontainermenu.[ch]
	* app/widgets/gimpcontainerview.[ch]: synced them again and added a
	"get_name_func" 

	* app/widgets/gimplistitem.[ch]
	* app/widgets/gimpmenuitem.[ch]: add a "get_name_func" and use it
	to get the item's name.

	* app/widgets/gimpcontainerlistview.c
	* app/widgets/gimpcontainermenuimpl.c: pass the get_name_func to
	the created items.

	* app/widgets/gimpchannellistview.c: gtk_widget_queue_resize() the
	component frame after changing the image.

	* app/widgets/gimpcomponentlistitem.c: set a custom
	get_name_func() so the components are named Red, Green, ... again.

	* app/widgets/gimpimagedock.c: set a custom get_name_func() which
	returns names like in the old L&C dialog's image menu.

	* tools/pdbgen/Makefile.am: don't scan apptypes.h for enums.

2001-05-03  Michael Natterer  <mitch@gimp.org>

	* app/app_procs.c: don't #include "gui/color-select.h"

	* app/disp_callbacks.[ch]: renamed gdisplay_drop_viewable() to
	gdisplay_drop_pattern().

	* app/gimpimage.[ch]: added new signals
	"component_visibility_changed" and "component_active_changed" and
	emit them in the resp. accessors.

	* app/interface.c: removed old GimpPreview test code.

	* app/widgets/Makefile.am
	* app/apptypes.h
	* app/widgets/gimpchannellistview.[ch]
	* app/widgets/gimpcomponentlistitem.[ch]: new (unfinished) widgets.

	* app/widgets/gimpdockbook.c: switch to the right-clicked notebook
	page before showing the menu.

	* app/widgets/gimpdrawablelistitem.[ch]: removed the protected
	functions which make the toggle buttons look nicer...

	* app/widgets/gimplistitem.[ch]: ...and added them here.

	* app/widgets/gimpdrawablelistview.[ch]: virtualized set_image()
	so subclasses can properly (dis)connect on image change.

	* app/widgets/gimpdrawablepreview.c
	* app/widgets/gimpimagepreview.[ch]: removed the calc_size()
	functions which calculate the preview's aspect ratio...

	* app/widgets/gimppreview.[ch]: ...and added then here as
	protected functions.

	* app/widgets/gimplayerlistitem.c: flush displays after changing
	the layer mask's "apply" or "show" state.

2001-05-01  Michael Natterer  <mitch@gimp.org>

	* app/gimpimage.h: removed prototype of function which doesn't
	exist.

	* app/widgets/gimppreview.[ch]: new signal "extended_clicked"
	which is emitted instead of "clicked" if the user pressed shift,
	control or mod1 on button_press.

	* app/widgets/gimplayerlistitem.c: use the "extended_clicked"
	signal to toggle the layer mask's "show" and "apply" states.

2001-05-01  Michael Natterer  <mitch@gimp.org>

	* app/gimpdnd.[ch]: Made file/url DND work like the other DND types.
	The drop callback gets passed a GList of filenames.
	Provide a default callback which calls file_open_with_display()
	for each filename.

	* app/docindex.c: changed accordingly.

	* app/gui/toolbox.c: same file DND changes and made dropping
	drawables work again with the new DND system.

	* app/widgets/gimpdrawablelistview.c: properly disconnect from the
	image in "destroy".

	* app/widgets/gimplayerlistitem.c: gtk_signal_connect_while_alive()
	to the layer's "mask_changed" signal.

2001-05-01  Michael Natterer  <mitch@gimp.org>

	* app/app_procs.c: removed more GUI initialisation code.

	* app/color_transfer.c: removed useless includes.

	* app/gui/brush-editor.[ch]
	* app/gui/dialogs-constructors.c:
	s/BrushEditGeneratedWindow/BrushEditor/, s/begw/brush_editor/, made
	the brush preview of the editor autoresizing.

	* app/gui/dialogs.h: removed "extern" declaration of non-existant
	variable.

	* app/gui/gui.[ch]: new function gui_post_init() which shows the
	tips dialog.

	* app/gui/tips-dialog.c: made signal handling nicer (clean up in a
	"destroy" handler).

	* app/gui/toolbox.[ch]: removed toolbox_raise(), removed the help
	system (de)initialisation code which is now in gui.c, cleanup.

2001-04-30  Dave Neary  <dneary@eircom.net>

	* app/tools/tool_options.c: Ensure that option widgets are set to
	defaults on first call to the _init() function. 
	
2001-04-29  Garry R. Osgood  <grosgood@rcn.com>
	* plug-ins/plugin-helper/plugin-helper.c
	extensions don't have parameters,
	but helper_run() was asking anyway -
	and segfaulting. Commented out
	line for now; everything still seems
	prototypical in Plug In Helper Land.
	
2001-04-29  Michael Natterer  <mitch@gimp.org>

	* app/gimplayer.[ch]: added a "linked_changed" signal and emit it
	in gimp_layer_set_linked().

	* app/gui/layers-dialog.c: use the accessor when setting "linked".

	* app/widgets/gimpdrawablelistitem.[ch]: made the hacks which make
	the buttons look nice inside list items available to subclasses.

	* app/widgets/gimplayerlistitem.[ch]: added a "linked" button.

2001-04-29  Michael Natterer  <mitch@gimp.org>

	* app/widgets/gimpcontainerview.[ch]: added virtual method
	context_item() which works like select_item() and activate_item()
	and a function to trigger the signal from subclasses (marked as
	"protected").

	* app/widgets/gimpcontainerlistview.c: invoke context_item() on
	right click.

	* app/widgets/gimpdrawablelistview.[ch]: implement context_item()
	and show a context menu. The functions to show the menu as well as
	functions to create a new drawable and to edit it's attriutes must
	be passed to the constructor now.

	* app/gui/channels-commands.[ch]
	* app/gui/layers-commands.[ch]: added functions which show the
	layers and channels context menus. No accelerators supported yet.
	Auto-destroy all dialogs when their drawable is removed from the
	image.

	* app/gui/dialogs-constructors.c: changed the calls to
	gimp_drawable_list_view_new() accordingly.

	* app/gui/menus.c
	* app/gui/test-commands.[ch]: removed some test dialogs.

2001-04-28  David Neary  <dneary@eircom.net>

	* app/tools/transform_options.[ch]: Separated the transform
	options stuff from the gimptransformtool files so that each of the
	transform tools to make is available to the other transform tools.

	* app/tools/gimptransformtool.c
	* app/tools/gimpscaletool.c
	* app/tools/gimpsheartool.c
	* app/tools/gimprotatetool.c
	* app/tools/gimpperspectivetool.c
	* app/tools/Makefile.am: Changed accordingly
	
2001-04-28  Michael Natterer  <mitch@gimp.org>

	* app/appenums.h: added RunModeType.
	* app/plug_in.h: removed RunModeType.
	* tools/pdbgen/Makefile.am: don't scan app/plug_in.h for enums.
	* tools/pdbgen/enums.pl: regenerated.

	* app/file-open.[ch]
	* app/file-save.[ch]
	* app/file-utils.[ch]: removed all GUI specific code.

	* app/gui/Makefile.am
	* app/gui/file-dialog-utils.[ch]
	* app/gui/file-open-dialog.[ch]
	* app/gui/file-save-dialog.[ch]: new files.
	Renamed file_open() to 	file_open_with_display().

	* app/app_procs.c
	* app/docindex.c
	* app/gimpdnd.c
	* app/gui/commands.c
	* app/gui/gui.c
	* app/gui/menus.c: changed accordingly.

2001-04-27  Michael Natterer  <mitch@gimp.org>

	* app/app_procs.[ch]: removed stuff which now lives in gui/gui.c,
	removed global variable "we_are_exiting", made app_init() static.

	* app/appenv.h: removed "we_are_exiting".

	* app/colormaps.c: don't #include "app_procs.h"

	* app/file-open.[ch]
	* app/file-save.[ch]: removed the *_pre_init() functions and
	renamed the *_post_init() functions to *_menu_init().

	* app/gui/gui.c: added more GUI init and shutdown code from
	app_procs.c

2001-04-26  Michael Natterer  <mitch@gimp.org>

	* app/widgets/gimpcontainermenuimpl.c: only work around option
	menu reference problems if the removed item was the active one.

	* app/widgets/gimpimagedock.c: don't try to avoid a recursive
	signal emission in gimp_image_dock_image_changed() but work around
	it. This makes the image menu work finally.

	* app/gui/dialogs-constructors.c: removed debugging output.

2001-04-25  Michael Natterer  <mitch@gimp.org>

	* app/gimpobject.c: free the object's name on destruction.

	* app/gimpparasite.c: gimp_personal_rc_file()'s return value has
	to be g_free()'d.

	* app/main.c: indentation.

	Ported memleak fixes from 1.2:

	* app/gimpbrush.c: don't leak all pixmaps.

	* app/gimpbrushpipe.c: free all the pipe's brushes here.

2001-04-24  David Neary  <dneary@eircom.net>

	* app/authors.h: Synced this file from the earlier commit.

	* app/pixmaps2.h
	* app/pdb/tools_cmds.c
	* app/tools/Makefile.am
	* app/tools/gimpperspectivetool.c
	* app/tools/gimpperspectivetool.h
	* app/tools/gimprotatetool.c
	* app/tools/gimprotatetool.h
	* app/tools/gimpsheartool.c
	* app/tools/gimpsheartool.h
	* app/tools/gimptool.c
	* app/tools/gimptool.h
	* app/tools/gimptransformtool.c
	* app/tools/tools.c
	* tools/pdbgen/pdb/tools.pdb:    Enabled the rest of the 
	transform tools and changed some of the options stuff in 
	transform_options_new(). There are one or two outstanding 
	(non-critical) runtime problems in that function.

2001-04-24  Michael Natterer  <mitch@gimp.org>

	* app/authors.h: regenerated.

	* app/gui/dialogs-constructors.c: call the drawable views's
	set_context() function once explicitly after creation.

	* app/gui/dialogs.c
	* app/widgets/gimpdialogfactory.[ch]: session management correctly
	remembers the dialogs' sizes again.

	* app/widgets/gimpcontainermenuimpl.c: set the options menu's
	history to "0" after removing a menu item (temp hack because
	GtkOptionMenu doesn't handle the removal of the currently active
	item correctly).

	* app/widgets/gimpimagedock.c: another try to get dock->context's
	signals handled correctly. Debugging output will disappear soon.

2001-04-23  David Neary  <dneary@eircom.net>

        * AUTHORS: Added my name here before being politely
        informed that the file is autogenerated. Ooops!

        * tools/authorsgen/contributors: Added my name to the
        list of contributors.

2001-04-23  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontext.[ch]: some minor fixes / cleanup.

	* app/gimpdata.c: forgot to gtk_object_class_add_signals() in
	class_init().

	* app/gui/dialogs-constructors.[ch]: added a tool_tab_func() so
	the notebook tab shows a tool preview, pass a GimpContext to all
	dialog constructors and added set_context() functions for all
	dockable based dialogs so they can be configured to use the
	context of the destination dock when dragging them around.

	* app/widgets/gimpcontainermenuimpl.c: removed debugging output.

	* app/widgets/gimpdialogfactory.[ch]: add a method to create
	dockables (which gets passed the dock the dockable will be added
	to) so the dockables can be created in the right context.

	* app/widgets/gimpdock.[ch]: added a GimpContext attribute, remove
	the dockbooks explicitely in destroy().

	* app/widgets/gimpdockable.[ch]: dockables now know about their
	set_context_func() and can thus be dragged between different
	contexts.

	* app/widgets/gimpdockbook.c: gimp_dockbook_add(): refuse to add
	dockables to dockbooks which are not part of a dock, set the
	dockable's context after adding it.

	* app/widgets/gimpimagedock.[ch]: image docks now keep a pointer
	to the global image list which is passed to them on construction
	so they don't need to know about the global "image_context"
	variable, added an "Auto" button like in L&C.

	* app/gui/dialogs-commands.c: changed accordingly.

2001-04-23  Sven Neumann  <sven@gimp.org>

	Merged Yosh's changes from stable branch:

	* acinclude.m4: updated libtool stuff

        * configure.in: more #undefs so jpeglib.h test works

        * plug-ins/common/bumpmap.c: speedup patch from Ernst Lippe
        <ernstl@planet.nl> (tile cache size optimization)

2001-04-23  Sven Neumann  <sven@gimp.org>

	Merged changes from stable branch:
	
        * plug-ins/perl/examples/terral_text: fixed typo.

        * plug-ins/perl/examples/image_tile
        * plug-ins/perl/examples/yinyang: 
        applied gimp-kirchgessner-010422-0.patch which fixes problems with 
        invalid number of parameters passed to some functions.

        * plug-ins/script-fu/interp_sliba.c: fixed problems with strbreakup 
        reported by Mike Kelly <mike@csuchico.edu> (bugs #52383 and #52385)

2001-04-22  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am: cleanup.

	* app/interface.c: #include "gimpui.h"

	* app/gui/dialogs-constructors.[ch]
	* app/gui/dialogs.c
	* app/gui/menus.c
	* app/gui/test-commands.[ch]: changes for the image menu below.

	* app/apptypes.h
	* app/widgets/Makefile.am
	* app/widgets/gimpcontainermenu.[ch]
	* app/widgets/gimpcontainermenuimpl.[ch]: new widgets. The actual
	implemtation lives in a separate file because
	gimpcontainermenu.c's code is identical to gimpcontainerview.c's
	except for the base class. This will become an interface with Gtk 2.0.

	* app/widgets/gimpimagedock.[ch]: a dock with an image menu. The
	pages still don't follow the context correctly.

	* app/widgets/gimpmenuitem.[ch]: a menu item with a preview.

	* app/widgets/gimpdialogfactory.[ch]: pass a dock constructor to
	the constructor and provide a method to create a new dock within
	this factory's context.

	* app/widgets/gimpdock.[ch]: removed the constructor because we
	create only image docks now. Put the vbox into a main_vbox (which
	also contains the image menu).

	* app/widgets/gimpdockbook.[ch]: create new docks with the dialog
	factory.

	* app/gimpcontainer.[ch]
	* app/gimpdata.[ch]
	* app/gimpdatafactory.[ch]
	* app/gimpdatalist.[ch]
	* app/gimplist.[ch]
	* app/gimpviewable.[ch]
	* app/widgets/gimpbrushpreview.[ch]
	* app/widgets/gimpcontainergridview.[ch]
	* app/widgets/gimpcontainerlistview.[ch]
	* app/widgets/gimpcontainerview.[ch]
	* app/widgets/gimpdatafactoryview.[ch]
	* app/widgets/gimpdockable.[ch]
	* app/widgets/gimpdrawablelistitem.[ch]
	* app/widgets/gimpdrawablelistview.[ch]
	* app/widgets/gimpdrawablepreview.[ch]
	* app/widgets/gimplayerlistitem.[ch]
	* app/widgets/gimplayerlistview.[ch]
	* app/widgets/gimplistitem.[ch]
	* app/widgets/gimppalettepreview.[ch]
	* app/widgets/gimppatternpreview.[ch]
	* app/widgets/gimppreview.[ch]: ass-sign some copyrights.

2001-04-21  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/lc_dialogP.h
	* app/paths_dialogP.h: removed stuff that will go away anyway (put
	the declarations to the public headers).

	* app/gimpui.[ch]: new function gimp_widget_get_callback_context()
	which may only be called from a *_cmd_callback() and returns the
	data we attached with weird methods.

	* app/gui/Makefile.am
	* app/gui/channels-commands.[ch]: callbacks independent from the
	channels dialog and the "new" and "edit channel" dialogs.

	* app/gui/channels-dialog.[ch]
	* app/gui/layers-commands.c
	* app/gui/layers-dialog.[ch]
	* app/lc_dialog.[ch]
	* app/gui/menus.c
	* app/gui/paths-dialog.[ch]
	* app/tools/gimpbezierselecttool.c
	* po/POTFILES.in: changed accordingly.

2001-04-20  Michael Natterer  <mitch@gimp.org>

	* app/gimpui.[ch]: new functions gimp_window_add_accel_group() and
	gimp_window_remove_accel_group() which do the ugly accel context
	hack described below.

	* app/interface.c
	* app/gui/layers-dialog.c: use the new functions.

	* app/disp_callbacks.c
	* app/gui/layers-commands.c: removed stuff which is now done
	automatically.

2001-04-20  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/layers_dialogP.h: removed.

	* app/gimpui.[ch]: new function gimp_menu_position().

	* app/disp_callbacks.c
	* app/interface.c
	* app/gui/layers-dialog.c: popup the image and layers menu with
	gtk_item_factory_popup_with_data() instead of gtk_menu_popup()
	and pass the GimpImage we're operating on as data.

	For accelerators, which are invoked without context, we catch key
	press events and attach the context to the GtkItemFactory.

	* app/gui/Makefile.am
	* app/gui/layers-commands.[ch]: common layer callbacks (instead of
	separate ones in commands.c and layers-dialog.c

	* app/gui/commands.[ch]
	* app/gui/layers-dialog.[ch]: removed the menu callbacks here.

	* app/gdisplay.h
	* app/lc_dialog.c
	* app/gui/channels-dialog.c
	* app/gui/layer-select.c
	* app/gui/menus.c
	* po/POTFILES.in: changed accordingly.

2001-04-20  Michael Natterer  <mitch@gimp.org>

	* app/main.c: set the message handler for all app log domains, not
	only for "Gimp".

	* app/gui/brush-select.c
	* app/gui/gradient-select.c
	* app/gui/palette-select.c: removed the "edit" callbacks.

	* app/gui/dialogs-constructors.[ch]: Added the callbacks
	here. Added layer and channel lists.

	* app/gui/dialogs.c: register the new lists.
	* app/gui/menus.c: their menu entries.

	* app/widgets/gimpdock.c: set a minimal width of 280 pixels.

2001-04-19  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/gimpclonetool.[ch]
	* app/tools/gimpconvolvetool.[ch]
	* app/tools/gimppainttool.c
	* app/tools/gimptool.h
	* app/tools/paint_options.c
	* app/tools/tool_manager.c
	* app/tools/tools.c: Applied a patch from Dave Neary
	<dneary@eircom.net> which brings clone and convolve back.

	That's all paint tools, Dudes!

2001-04-19  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/brush_header.h
	* app/pattern_header.h
	* app/desaturate.[ch]
	* app/equalize.[ch]
	* app/invert.[ch]: removed.

	* app/gimpbrush-header.h
	* app/gimppattern-header.h
	* app/gimpdrawable-desaturate.[ch]
	* app/gimpdrawable-equalize.[ch]
	* app/gimpdrawable-invert.[ch]: new files.

	* app/gui/commands.c: put some stuff from desaturate, equalize and
	invert here. While it's ok to check the drawable type in the
	callback, this is the wrong place for PDB wrappers.

	* app/gimpbrush.c
	* app/gimpbrushpipe.c
	* app/gimplayer.c
	* app/gimppattern.c
	* app/pdb/color_cmds.c
	* plug-ins/common/gbr.c
	* plug-ins/common/gih.c
	* plug-ins/common/pat.c
	* po/POTFILES.in
	* tools/pdbgen/pdb/color.pdb: changed accordingly.

2001-04-18  Michael Natterer  <mitch@gimp.org>

	* app/gimpdrawable-offset.[ch]: renamed ChannelOffsetType to
	GimpOffsetType.

	* app/pdb/channel_ops_cmds.c
	* libgimp/gimpchannelops_pdb.[ch]
	* tools/pdbgen/pdb/channel_ops.pdb: removed.

	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/image.pdb: put the "offset" and "duplicate"
	functions where they belong.

	* app/gui/offset-dialog.c
	* app/pdb/Makefile.am
	* app/pdb/drawable_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/internal_procs.c
	* libgimp/Makefile.am
	* libgimp/gimp_pdb.h
	* libgimp/gimpdrawable_pdb.[ch]
	* libgimp/gimpenums.h
	* libgimp/gimpimage.h
	* libgimp/gimpimage_pdb.[ch]
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/enumcode.pl
	* tools/pdbgen/enums.pl
	* tools/pdbgen/groups.pl
	* plug-ins/common/guillotine.c
	* plug-ins/print/print.c
	* plug-ins/script-fu/script-fu-constants.c: changed accordingly.

2001-04-18  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/channel_ops.[ch]: removed

	* app/gimpdrawable-offset.[ch]
	* app/gimpimage-duplicate.[ch]: new files without GUI.

	* app/gui/Makefile.am
	* app/gui/offset-dialog.[ch]: new files.

	* app/gui/commands.c
	* app/pdb/channel_ops_cmds.c
	* po/POTFILES.in
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/enums.pl
	* tools/pdbgen/pdb/channel_ops.pdb: changed accordingly.

2001-04-18  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/convert.[ch]: removed.
	* app/gimpimage-convert.[ch]: new files: the convert functionality
	without GUI (now called gimp_image_convert()).

	* app/gui/Makefile.am
	* app/gui/convert-dialog.[ch]: new files.

	* app/gui/commands.c
	* app/pdb/convert_cmds.c
	* po/POTFILES.in
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/enums.pl: changed accordingly.

2001-04-18  Michael Natterer  <mitch@gimp.org>

	* app/devices.[ch]
	* app/gui/about-dialog.[ch]
	* app/gui/preferences-dialog.[ch]
	* app/gui/tips-dialog.[ch]: return a GtkWidget from the constructor.

	* app/gui/dialogs.c
	* app/gui/dialogs-constructors.[ch]: register them with the dialog
	factory.

	* app/gui/commands.[ch]
	* app/gui/menus.c: removed their old callbacks.

	* app/gui/brush-select.c
	* app/gui/gradient-select.c
	* app/gui/palette-editor.[ch]: no need to show or raise the shell
	(that's done by the dialog factory now).

	* app/widgets/gimpdialogfactory.c: actually do what the
	"singleton" and "session_managed" flags say.

2001-04-18  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am: commented the sections of the file list.
	* app/gui/Makefile.am: cleanup.

	* app/unittest/*: removed.

2001-04-17  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gui/Makefile.am
	* app/about_dialog.[ch]
	* app/brush_edit.[ch]
	* app/brush_select.[ch]
	* app/channels_dialog.[ch]
	* app/color_area.[ch]
	* app/color_notebook.[ch]
	* app/color_select.[ch]
	* app/colormap_dialog.[ch]
	* app/commands.[ch]
	* app/file_new_dialog.[ch]
	* app/gradient_editor.[ch]
	* app/gradient_select.[ch]
	* app/indicator_area.[ch]
	* app/info_dialog.[ch]
	* app/info_window.[ch]
	* app/layer_select.[ch]
	* app/layers_dialog.[ch]
	* app/menus.[ch]
	* app/palette.[ch]
	* app/palette_import.[ch]
	* app/palette_select.[ch]
	* app/paths_dialog.[ch]
	* app/pattern_select.[ch]
	* app/preferences_dialog.[ch]
	* app/session.[ch]
	* app/test_commands.[ch]
	* app/tips_dialog.[ch]
	* app/toolbox.[ch]: moved to gui/ (s/_/-/ and some more useful
	filenames on the way).

	* app/app_procs.c
	* app/context_manager.c
	* app/convert.c
	* app/disp_callbacks.c
	* app/errorconsole.c
	* app/file-open.c
	* app/file-save.c
	* app/file-utils.c
	* app/gdisplay.c
	* app/gimage.c
	* app/gimprc.c
	* app/image_new.c
	* app/interface.c
	* app/nav_window.c
	* app/path.c
	* app/plug_in.c
	* app/gui/dialogs-constructors.c
	* app/pdb/brush_select_cmds.c
	* app/pdb/convert_cmds.c
	* app/pdb/gradient_select_cmds.c
	* app/pdb/pattern_select_cmds.c
	* app/tools/gimpcolorpickertool.c
	* app/tools/gimpcroptool.c
	* app/tools/gimpmagnifytool.c
	* app/tools/gimpmeasuretool.c
	* app/tools/gimpscaletool.c
	* app/tools/gimptransformtool.c
	* app/widgets/gimpcolorpanel.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* po/POTFILES.in: changed accordingly.

2001-04-17  Michael Natterer  <mitch@gimp.org>

	* app/session.[ch]
	* app/gimprc.c: removed the old dialog session management code...

	* app/widgets/gimpdialogfactory.[ch]: ...and manage all dialogs here.

	* app/gui/dialogs-constructors.[ch]: dialog factory compliant
	constructors for all session managed toplevel dialogs.

	* app/brush_select.[ch]
	* app/devices.[ch]
	* app/docindex.[ch]
	* app/errorconsole.[ch]
	* app/gradient_select.[ch]
	* app/info_dialog.c
	* app/lc_dialog.[ch]
	* app/palette.[ch]
	* app/pattern_select.[ch]
	* app/toolbox.[ch]
	* app/tools/tool_options_dialog.[ch]: all dialog constructors have
	to return the dialog now (even the legacy ones that will go away).
	Removed the session management code as this is now done for the
	dialogs, not by them.

	* app/app_procs.c
	* app/color_select.c
	* app/commands.[ch]
	* app/indicator_area.c
	* app/menus.c
	* app/palette_select.c
	* app/preferences_dialog.c
	* app/gui/dialogs.c
	* app/gui/dialogs-commands.[ch]
	* app/gui/gui.c
	* app/tools/gimptool.c
	* app/widgets/gimpdock.c: changed accordingly.

2001-04-16  Michael Natterer  <mitch@gimp.org>

	First attempt to get the docks session managed:

	* app/gimprc.c: new gimprc type "new-session-info" which will soon
	replace the original one.

	* app/menus.c
	* app/gui/dialogs.c: s/_/-/g in all dialog identifier strings.

	* app/session.[ch]: call the dialog factory's session functions.

	* app/test_commands.c: use the dialog factory to create the tabs.

	* app/gui/dialogs-commands.c
	* app/gui/dialogs-constructors.[ch]: the constructors return widgets,
	not dockables now.

	* app/widgets/gimpdialogfactory.[ch]: maintain a list of dialog
	factories in the class struct. Added ugly code to do the GimpDock
	session management.

	* app/gui/gui.c
	* app/widgets/gimpdock.c: changed accordingly.

2001-04-15  Michael Natterer  <mitch@gimp.org>

	* app/gui/Makefile.am: new files:

	* app/gui/gui.[ch]: the new place for the UI init and shutdown code.
	* app/gui/splash.[ch]: a separate file for the splash.

	* app/app_procs.c: removed lots of stuff. Still much UI code left.

2001-04-15  Michael Natterer  <mitch@gimp.org>

	* app/menus.[ch]: changed all menus_get_*() functions to return
	the GtkItemFactory, not separate widget, and accel_group
	pointers. Disabled automatic tearoff item creation for all
	factories axcept the toolbox and image factory.

	* app/channels_dialog.c
	* app/file-open.c
	* app/file-save.c
	* app/interface.c
	* app/layers_dialog.c
	* app/paths_dialog.c
	* app/toolbox.c: changed accordingly.

2001-04-15  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/paletteP.h: removed

	* app/palette.[ch]
	* app/palette_select.c: changed accordingly.

	* app/Makefile.am
	* app/gui/Makefile.am: some more preparation for file moving.

2001-04-15  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am: grouped the files together which will go to gui/.

	* app/widgets/gimpdialogfactory.[ch]: maintain a list of open
	GimpDocks for session management.

	* app/widgets/gimpdock.c: register open docks with the dialog
	factory.

	* app/widgets/gimpdockable.[ch]
	* app/widgets/gimpdockbook.c: pass a pointer to the GimpDockbook
	to the GimpDockable's "get_tab" function because the function is
	called before the dockable is added to the dockbook.

	* app/test_commands.c
	* app/gui/dialogs-constructors.[ch]
	* app/gui/dialogs.c: changed accordingly.

2001-04-14  Michael Natterer  <mitch@gimp.org>

	* app/menus.c: added some more dialog types.

	* app/gui/Makefile.am
	* app/gui/gimpdialogfactory.[ch]: removed again...

	* app/widgets/Makefile.am
	* app/widgets/gimpdialogfactory.[ch]: ...and added where it belongs.

	* app/gui/dialogs.c
	* app/widgets/gimpdock.c: changed #include's

	* app/gui/dialogs-commands.c: dialogs can be removed via the menu
	now.

	* app/widgets/gimpdockbook.c: ref the dockbook while the item
	factory is active because an item factory callback may destroy it
	(we need to add the hijacked GtkNotebook menu back to the
	notebook).

2001-04-14  Michael Natterer  <mitch@gimp.org>

	* configure.in
	* app/Makefile.am
	* app/gui/Makefile.am: new directory which will contain all gui code
	except widgets (I was tired off adding new files to app/).

	* app/apptypes.h
	* app/gui/gimpdialogfactory.[ch]: factory which produces dialogs
	from string descriptions. Should maybe go to widgets/.

	* app/gui/dialogs-commands.[ch]: callbacks for the new menu
	factory below.

	* app/gui/dialogs-constructors.[ch]: dialog constructors which are
	registered with the dialog factory.

	* app/gui/dialogs.[ch]: register the dialogs with the factory.

	* app/app_procs.c: call dialogs_register().

	* app/menus.[ch]: a new item factory for creating dialogs.

	* app/test_commands.c
	* app/widgets/gimpdock.[ch]: added a dialog factory pointer to the
	GimpDock struct.

	* app/widgets/gimpdockbook.[ch]: badly (badly!) fiddle around with
	GtkNotebook's menu to get it integrated in the GtkItemFactory
	which produces new dialogs.

2001-04-13  Michael Natterer  <mitch@gimp.org>

	* app/pdb/procedural_db.[ch]: removed the ID system from the pdb/
	subdir...

	* app/gimpimage.[ch]: ...and temporarily added it back to GimpImage.

	The ID stuff is not only used by the PDB but is a more general
	type of service which is needed for the PDB, DND and some parts of
	the GUI. Finally, a GimpFactory class with subclasses for data
	objects, images etc. will maintain the ID spaces.

	* app/colormap_dialog.c
	* app/file-open.c
	* app/file-save.c
	* app/gdisplay.c
	* app/gimpdnd.c
	* app/gimpdrawable.c
	* app/info_window.c
	* app/lc_dialog.c
	* app/nav_window.c
	* app/palette_import.c
	* app/paths_dialog.c
	* app/plug_in.c
	* app/xcf.c
	* app/tools/gimptexttool.c
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/image.pdb: use GimpImage's ID functions.

	* app/pdb/channel_cmds.c
	* app/pdb/channel_ops_cmds.c
	* app/pdb/convert_cmds.c
	* app/pdb/display_cmds.c
	* app/pdb/drawable_cmds.c
	* app/pdb/fileops_cmds.c
	* app/pdb/guides_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/layer_cmds.c
	* app/pdb/parasite_cmds.c
	* app/pdb/paths_cmds.c
	* app/pdb/selection_cmds.c
	* app/pdb/text_tool_cmds.c
	* app/pdb/tools_cmds.c
	* app/pdb/undo_cmds.c: regenerated.

2001-04-13  Michael Natterer  <mitch@gimp.org>

	* app/gimpdnd.c: added a DND type for GimpImage.

	* app/tools/tools.c: don't register bezier select twice.

	* app/widgets/gimpdockbook.[ch]: hacked the popup menu a bit.

2001-04-11  Stanislav Brabec  <utx@penguin.cz> 

        On request of Martin Weber <martweb@gmx.net>: 
        * plug-ins/bmp/bmpread.c:
        GIMP couldn't read bmp files with a bad chunk. This kind of files
        can be found in OS/2 1.x. 

2001-04-11  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/gimpsmudgetool.[ch]
	* app/tools/gimptool.[ch]
	* app/tools/paint_options.c
	* app/tools/tool_manager.c
	* app/tools/tools.c
	* app/pdb/tools_cmds.c
	* tools/pdbgen/pdb/tools.pdb: applied a (slightly modified) patch
	from Dave Neary <dave.neary@palamon.ie> which reactivates the
	smudge tool.

2001-04-11  Michael Natterer  <mitch@gimp.org>

	* app/test_commands.c: fixed the dockable names.

	* app/tools/gimpbezierselecttool.c: applied patch from Dave Neary
	which fixes some minor stuff that was forgotten to port.

	* app/widgets/gimpdockbook.c: set the tooltip of the notebook tab
	also if it is a plain label.

2001-04-11  Simon Budig  <simon@gimp.org>

	* app/tools/gimppathtool.[ch]
	* app/tools/path_tool.[ch]

	Some tweaks to make gcc and mitch more happy.

2001-04-11  Simon Budig  <simon@gimp.org>

	* app/path_curves.[ch]
	* app/tools/gimpdrawtool.c
	* app/tools/gimppathtool.[ch]
	* app/tools/path_tool.[ch]
	* app/tools/path_toolP.h

	At least now it looks as if it could do something sometimes...

2001-04-11  Michael Natterer  <mitch@gimp.org>

	* configure.in
	* app/widgets/*: new directory containing all widgets. Some of them
	will go to libgimpwidgets.

	* app/color_panel.[ch]
	* app/gimpbrushpreview.[ch]
	* app/gimpconstrainedhwrapbox.[ch]
	* app/gimpcontainergridview.[ch]
	* app/gimpcontainerlistview.[ch]
	* app/gimpcontainerview.[ch]
	* app/gimpdatafactoryview.[ch]
	* app/gimpdock.[ch]
	* app/gimpdockable.[ch]
	* app/gimpdockbook.[ch]
	* app/gimpdrawablelistitem.[ch]
	* app/gimpdrawablelistview.[ch]
	* app/gimpdrawablepreview.[ch]
	* app/gimpgradientpreview.[ch]
	* app/gimpimagepreview.[ch]
	* app/gimplayerlistitem.[ch]
	* app/gimplayerlistview.{ch]
	* app/gimplistitem.[ch]
	* app/gimppalettepreview.[ch]
	* app/gimppatternpreview.[ch]
	* app/gimppreview.[ch]
	* app/gimptoolinfopreview.[ch]
	* app/gtkhwrapbox.[ch]
	* app/gtkvwrapbox.[ch]
	* app/gtkwrapbox.[ch]
	* app/histogramwidget.[ch]: removed from here.

	* app/Makefile.am
	* app/appenums.h
	* app/brush_select.c
	* app/channels_dialog.c
	* app/devices.c
	* app/gimpdnd.c
	* app/gimpdrawable-preview.c
	* app/gimphistogram.h
	* app/gradient_editor.c
	* app/gradient_select.c
	* app/indicator_area.c
	* app/info_window.c
	* app/palette.c
	* app/palette_select.c
	* app/pattern_select.c
	* app/qmask.c
	* app/test_commands.c
	* app/toolbox.c
	* app/pdb/color_cmds.c
	* app/tools/paint_options.c
	* app/tools/tool_options_dialog.c
	* tools/pdbgen/pdb/color.pdb: changed accordingly.

2001-04-10  Michael Natterer  <mitch@gimp.org>

	* app/gimpdock.c: started to add some more separator event handling.

	* app/gimppalettepreview.c: we don't want a popup if n_colors == 0.

	* app/test_commands.c: cleanup.

2001-04-10  Sven Neumann  <sven@gimp.org>

        * app/tools/posterize.c
        * plug-ins/common/fractaltrace.c
        * plug-ins/common/illusion.c
        * plug-ins/flame/flame.c
        * plug-ins/gfig/gfig.c
        * plug-ins/gimpressionist/general.c
        * plug-ins/imagemap/imap_cmd_guides.c
        * plug-ins/mosaic/mosaic.c
        * plug-ins/winsnap/winsnap.c: merged i18n fixes from stable branch

2001-04-10  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h
	* app/gimpdockbook.[ch]: new object (the notebook separated out
	of gimpdock.[ch]).

	* app/gimpdnd.h: new DND type "DIALOG".

	* app/gimpdock.[ch]
	* app/gimpdockable.[ch]: DND mostly works now.

	* app/menus.c
	* app/test_commands.[ch]: updated.

2001-04-08  Sven Neumann  <sven@gimp.org>

        * plug-ins/bmp/bmp.c
        * plug-ins/common/jpeg.c
        * plug-ins/common/mpeg.c
        * plug-ins/common/png.c
        * plug-ins/common/tiff.c
        * plug-ins/common/xpm.c
        * plug-ins/twain/twain.c
        * plug-ins/winsnap/winsnap.c: ported I18N initialization fixes from
	stable branch

2001-04-07  Michael Natterer  <mitch@gimp.org>

	* app/paint_funcs.c
	* app/paint_funcs.h
	* app/paint_funcs_simd.S: removed the old files.

	* tools/pdbgen/Makefile.am
	* app/app_procs.c
	* app/channel_ops.c
	* app/channels_dialog.c
	* app/desaturate.c
	* app/disp_callbacks.c
	* app/floating_sel.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimpchannel.c
	* app/gimpdrawable-preview.c
	* app/gimpdrawable.c
	* app/gimpimage.c
	* app/gimplayer.c
	* app/gimplayermask.c
	* app/global_edit.c
	* app/image_map.c
	* app/image_new.c
	* app/layers_dialog.c
	* app/temp_buf.c
	* app/toolbox.c
	* app/undo.c
	* app/undo_history.c
	* app/paint-funcs/paint-funcs.c
	* app/tools/gimpairbrushtool.c
	* app/tools/gimpblendtool.c
	* app/tools/gimpbucketfilltool.c
	* app/tools/gimpdodgeburntool.c
	* app/tools/gimperasertool.c
	* app/tools/gimpfliptool.c
	* app/tools/gimpinktool.c
	* app/tools/gimpiscissorstool.c
	* app/tools/gimppaintbrushtool.c
	* app/tools/gimppainttool.c
	* app/tools/gimppenciltool.c
	* app/tools/gimptexttool.c
	* app/tools/gimptransformtool.c: changed accordingly.

2001-04-07  Simon Budig  <simon@gimp.org>

	* app/Makefile.am
	* app/apptypes.h
	* app/path_bezier.[ch]
	* app/path_curves.[ch]
	* app/pixmaps2.h
	* app/tools/Makefile.am
	* app/tools/gimpdrawtool.[ch]
	* app/tools/path_tool.[ch]
	* app/tools/path_toolP.h
	* app/tools/tools.c

	new files:
	* app/tools/gimppathtool.c
	* app/tools/gimppathtool.h

	Reactivated (at least partially) the old new path tool. It
	will undergo major restructuring. Especially the path stuff 
	will become proper objects. This definitely is work in progress
	and totally unuseable now.

2001-04-07  Michael Natterer  <mitch@gimp.org>

	* configure.in
	* app/Makefile.am
	* app/paint-funcs/.cvsignore
	* app/paint-funcs/Makefile.am: made the paint-funcs directory compile
	so Prof can continue hacking it. The old stuff still needs to be
	removed.

	* app/apptypes.h
	* app/gimpdock.[ch]
	* app/gimpdockable.[ch]: new widgets (not used yet).

	* app/menus.c
	* app/test_commands.[ch]: untested testing code for the new widgets.

2001-04-07  Daniel Egger  <egger@suse.de>

	* app/paint-funcs/paint-funcs-gray.[ch]
	* app/paint-funcs/paint-funcs-graya.[ch]
	* app/paint-funcs/paint-funcs-indexed.[ch]
	* app/paint-funcs/paint-funcs-indexeda.[ch]
	* app/paint-funcs/paint-funcs-rgb.[ch]
	* app/paint-funcs/paint-funcs-rgba.[ch]: Added new files seperated
	and specialised from paint_funcs.c. Not used so far.

2001-04-07  Michael Natterer  <mitch@gimp.org>

	* app/tools/gimpairbrushtool.c
	* app/tools/gimpdodgeburntool.[ch]
	* app/tools/gimperasertool.c
	* app/tools/gimppaintbrushtool.[ch]
	* app/tools/gimppenciltool.c
	* app/pdb/tools_cmds.c
	* tools/pdbgen/pdb/tools.pdb: general cleanup of all paint tools we
	have so far: reordered/renamed functions to make them look the same,
	minor fixes in all files.

2001-04-06  Stanislav Brabec  <utx@penguin.cz> 

        On request of Martin Weber <martweb@gmx.net>:
        * plugins/common/tga.c: Fixed bug #52728 - problem in loading
        compressed and uncompressed 15 bit tga, compressed 16 bit tga
        files and removed a false warning for 32 bit tga files.

2001-04-02  Sven Neumann  <sven@gimp.org>

	* app/Makefile.am
	* app/detect_mmx.S
	* app/arch/i386/mmx/detect_mmx.S
	* app/arch/i386/mmx/paint_funcs_mmx.S
	* app/arch/i386/mmx/paint_funcs_mmx.S.m4: split MMX detection out
	of paint_funcs_mmx.S and replaced it with a working version (the 
	old one used to execute an illegal instruction on non-MMX systems).

2001-04-01  Simon Budig  <simon@gimp.org>

	* nearly all files:
	
	Changed all GUI-Stuff back to Motif (see www.openmotif.org).
	Finally we have a professional toolkit here. When you need some
	reasons, why GTK+ sucks: See
	      http://unix.oreilly.com/news/motif_0400.html

2001-04-01  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/gimpairbrushtool.[ch]: back again.

	* app/tools/gimptool.[ch]
	* app/tools/paint_options.c
	* app/tools/tool_manager.c
	* app/tools/tools.c: changed accordingly.

2001-03-31  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h
	* app/tools/tool_options_dialog.c: pass the ToolOptions to the
	ToolOptionsResetFunc instead of a useless (void).

	* app/tools/paint_options.[ch]
	* app/tools/selection_options.[ch]: pass ToolOptions pointers here too.

	* app/tools/gimpbezierselecttool.c
	* app/tools/gimpblendtool.c
	* app/tools/gimpbucketfilltool.c
	* app/tools/gimpcolorpickertool.c
	* app/tools/gimpcroptool.c
	* app/tools/gimpdodgeburntool.c
	* app/tools/gimpellipseselecttool.c
	* app/tools/gimperasertool.c
	* app/tools/gimpfliptool.c
	* app/tools/gimpfreeselecttool.c
	* app/tools/gimpfuzzyselecttool.c
	* app/tools/gimpinktool.c
	* app/tools/gimpiscissorstool.c
	* app/tools/gimpmagnifytool.c
	* app/tools/gimpmeasuretool.c
	* app/tools/gimppaintbrushtool.c
	* app/tools/gimppenciltool.c
	* app/tools/gimprectselecttool.c
	* app/tools/gimptexttool.c
	* app/tools/gimptransformtool.c: changed accordingly. Removed many
	"reset" callbacks which just redirected the call to
	paint_options_reset() or selection_options_reset().

2001-03-31  Michael Natterer  <mitch@gimp.org>

	* app/undo.c: made undo_pop_paint() work again.

	* app/tools/gimppainttool.[ch]: store the tool ID and the tool
	type in the PaintUndo struct.

	* app/tools/gimppenciltool.c: removed unused variable.

	* app/tools/gimptool.c: removed and reordered STUB()s and cruft.

2001-03-31  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/gimpfliptool.[ch]: applied a patch from Dave Neary
	which re-activates this tool. Enabled the tool options too.

	* app/tools/gimpbezierselecttool.c
	* app/tools/gimpbucketfilltool.c
	* app/tools/gimpiscissorstool.c
	* app/tools/gimptexttool.c: trivial fixes.

	* app/tools/gimptool.c: removed cruft.

	* app/tools/gimptransformtool.[ch]: a special case for the flip
	tool, cleanup.

	* app/tools/tools.c: register the flip tool.

2001-03-31  Michael Natterer  <mitch@gimp.org>

	* app/tools/bezier_select.[ch]
	* app/tools/bezier_selectP.h
	* app/tools/transform_core.[ch]
	* app/tools/transform_tool.[ch]: removed.

	* app/tools/Makefile.am
	* po/POTFILES.in: changed accordingly.

	* app/tools/gimpbezierselecttool.c: indentation fixes.

	* app/tools/gimpdodgeburntool.[ch]: made cursor toggling work
	again, cleanup.

	* app/tools/gimpscaletool.[ch]
	* app/tools/gimptool.c: minor cleanups like removing STUB()s.

	* app/tools/tool_manager.c: applied patch from Dave Neary which
	returns useful PDB strings for the paint tools again.

2001-03-31  Michael Natterer  <mitch@gimp.org>

	* app/undo.c: re-enabled transform undo. Fixes the transform tool
	crashes.

	* app/tools/gimptool.[ch]: put tool->ID back because the undo
	system uses it. Also, a unique tool serial number will be not too
	bad to have once we have module tools.

	* app/tools/gimptransformtool.[ch]: changed accordingly.

2001-03-31  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/pixel_surround.[ch]: lowlevel stuff taken out of the transform
	tool.

	* app/tools/gimpscaletool.[ch]: minor cleanups, declare
	gimp_scale_tool_register() publically.

	* app/tools/gimptransformtool.[ch]: removed the PixelSurround stuff,
	hardcode tr_tool->interactive to TRUE, removed the no_draw() function,
	register the tool options, misc. other fixes and bad hacks that need
	to go away.

	(All this non-interactive stuff needs to be done outside the tool
	system. A "non-interactive tool" is just pure nonsense)

	* app/tools/gimptool.h: spacing.

	* app/tools/tool_manager.c: tool_manager_register_tool_options():
	return after warning, don't simply continue and crash.

	* app/tools/tools.c: register the bezier select tool.

2001-03-30  Michael Natterer  <mitch@gimp.org>

	* app/devices.c
	* app/disp_callbacks.c
	* app/gimprc.c
	* app/scroll.c
	* app/tools/gimppainttool.[ch]
	* modules/colorsel_water.c: removed the GTK_HAVE_SIX_VALUATORS stuff
	in preparation of gtk 2.0 migration.

2001-03-30  Michael Natterer  <mitch@gimp.org>

	* app/fileops.[ch]
	* app/fileopsP.h: removed...

	* app/file-open.[ch]
	* app/file-save.[ch]
	* app/file-utils.[ch]: ...and split up into more hackable chunks.
	(didn't change any logic, just moved the functions around)

	* app/Makefile.am
	* app/app_procs.c
	* app/commands.c
	* app/docindex.c
	* app/gimpdnd.c
	* app/gimprc.c
	* app/menus.c
	* app/pdb/fileops_cmds.c
	* po/POTFILES.in
	* tools/pdbgen/pdb/fileops.pdb: changed accordingly (mostly changing
	#include's).

2001-03-30  Michael Natterer  <mitch@gimp.org>

	* app/app_procs.[ch]: some random cleanups in pre-historic code.

	* app/fileops.c: useless cleanup (will be split into file-open.[ch]
	and file-save.[ch] soon).

	* app/gimppattern.c: implement GimpData's "duplicate" method.

	* app/global_edit.c: cleanup in preparation for making a view on a
	GimpContainer of cut buffers out of it.

	* app/gradient_editor.c: don't let the name entry expand vertically.

	* app/menus.c: typos.

2001-03-25 Seth Burgess <sjburges@gimp.org>

        * app/tools/gimpbezierselecttool.[ch]: added new files from
	Dave Neary <dneary@eircom.net> to give back bezier curves.  This
	might be entirely replaced at some future point.
	
	* app/Makefile.am
	* app/apptypes.h
	* app/path.[ch]
	* app/path_bezier.[ch]
	* app/paths_dialog.c
	* app/paths_dialogP.h
	* app/tools/Makefile.am
	* app/tools/gimpiscissorstool.c
	* app/tools/gimptool.c: applied patches to let bezier work again.

2001-03-25 Seth Burgess <sjburges@gimp.org>
	
	* app/tools/paint_options.c : applied 1-line patch by Dave Neary
	<dneary@eircom.net> that takes away the warning on startup of 
	dodgeburn.

2001-03-25 18:16:50  Adam D. Moss <adam@gimp.org>

	* app/convert.c: Define accessor function/macro for histogram
	reads and writes.  This slows us down a little because we avoid
	some of the dirty tricks we used when we knew that the histogram
	was a straight 3d array, so I've recovered some of the speed loss
	by implementing a 5d accessor function with good locality of
	reference.  This change is the first step towards quantizing in a
	more interesting colourspace than frumpy old RGB.

2001-03-24  Nathan Summers <rock@gimp.org>

	* app/tools/gimpscaletool.[ch]: Made the scale tool work again.
	Doesn't draw on the screen correctly, but works if you set the
	size in the dialog box.  Fixing the path tool should solve the
	problem.  Don't you love wierd dependancies?
	
	* app/tools/gimptool.c: stubbed some more path tool functions.
	
	* app/tools/gimptransformtool.[ch]: fixed some serious problems.
	I can't believe Gimp linked before!

	* app/tools/Makefile.am
	* app/tools/tools.c 
	* tools/pdbgen/pdb/tools.pdb: changed accordingly

2001-03-23  Seth Burgess <sjburges@gimp.org>

	* po-plug-ins/ro.po
	* po-script-fu/ro.po
	* po-libgimp/ro.po
	* plug-ins/perl/po/ro.po
	* plug-ins/perl/po/tr.po : added empty translation files so it would 
	compile again.  Translators, please add these when you add a new 
	language, even if they're blank!

2001-03-23  Seth Burgess <sjburges@gimp.org>
	
	* app/tools/Makefile.am
	* app/tools/gimpdodgeburntool.[ch]: dodgeburn works again.  Non-GUI
	disabled, some dialog bugs (gtk complains profusely) hanging around 
	still.

	* app/tools/gimptool.[ch]
	* app/tools/gimppainttool.c
	* app/tools/paint_options.c
	* app/tools/tools.c: changed accordingly.
 

2001-03-23  Marius Andreiana  <mandreiana@yahoo.com>

	* configure.in: Added ro (Romanian) to ALL_LINGUAS

2001-03-22  Stanislav Brabec  <utx@penguin.cz>  

        * app/tools/gimpbucketfilltool.c: Bucket fill threshold=0 must
        be allowed.

2001-03-18  Sven Neumann  <sven@gimp.org>

	* tools/pdbgen/app.pl: guard inclusion of <process.h> by G_OS_WIN32
	* tools/pdbgen/lib.pl: add include <string.h> if the generated code
	used memcpy().
	
	* tools/pdbgen/pdb/fileops.pdb: include process.h for G_OS_WIN32.

	* libgimp/gimpbrushes_pdb.c
	* libgimp/gimpdrawable_pdb.c
	* libgimp/gimpgradients_pdb.c
	* libgimp/gimpgradientselect_pdb.c
	* libgimp/gimpimage_pdb.c
	* libgimp/gimppaths_pdb.c
	* libgimp/gimppatterns_pdb.c
	* libgimp/gimpproceduraldb_pdb.c
	* tools/pdbgen/pdb/fileops.pdb: regenerated

2001-03-16  Hans Breuer  <hans@breuer.org>

	* plug-ins/common/gqbist.c : #define PATH_MAX as _MAX_PATH
	if it isn't defined

	* plug-ins/common/gz.c : #include <io.h> for win32 _get_osfhandle ()

	* plug-ins/gflare/gflare.c : #include <gtk/gtk.h> before using
	G_OS_WIN32

	* plug-ins/twain/twain.c : provide a main () entry point to allow
	to build as console application as well

2001-03-16  Hans Breuer  <hans@breuer.org>

	* app/makefile.msc
	* app/tools/makefile.msc : adapted to current state of file 
	renaming/restructuring. Probably will break again soon ...

	* app/context_manager.c : needs register_tools () prototype

	* app/gimplist.c
	* app/gimppalette-import.c : #include <string.h> for memcpy, strcmp 
	and friends

	* app/pdb/fileops_cmds.c : #include <process.h>	/* for _getpid() */
	(Yes I know that this is not the right place to change it, but hacking 
	pdbgen.pl to get platform specific headers is out of my scope)

	* app/test_commands.c : explicit casts to (GimpSetDrawableFunc) make
	it compile even with strict checks turned on.

	* app/undo.c (undo_pop_paint) : return a value even if the function 
	does nothing at the moment (makes it compile)

	* libgimp/gimp.def : updated

	* libgimp/gimpcolorselector.h : include <gmodule.h> to make 
	gimp_color_selector_(un)register prototypes conform to their
	implementation

	* libgimp/gimpfeatures.h : reflect 1.3 version

	* libgimpmath/gimpmatrix.c
	* libgimpwidgets/gimpdialog.c : more <string.h> inclusion

	* libgimp/makefile.msc : moved gimpadativesupersample.c to 
	libgimpcolor, which makes it reusable from the core, too.

	* libgimp/gimp.def : updated

	* libgimp/gimpproceduraledb.c : #include <string.h>

	* libgimpcolor/gimpcolor.def
	* libgimpcolor/makefile.msc : added gimpadaptivesupersample

	* libgimpmath/gimpmatrix.c : #include <string.h> for memcmp
	* libgimpwidgets/gimpdialog.c - " - for strcmp


2001-03-15 14:51:59Z  Marc Lehmann <pcg@goof.com>

	* gimptool-1.4.in: Fix --libs-noui so that plug-ins link against
        the new library names.
        * configure.in: Added the libtool-limitation-workaround to GIMP_LIBS*
        env vars so that gimp-perl works again.

2001-03-15  Sven Neumann  <sven@gimp.org>

	* plug-ins/common/screenshot.c: applied patch from 
        Tom Holroyd <tomh@po.crl.go.jp> which fixes wrong array size.

2001-03-14  Nathan Summers <rock@gimp.org>

	* tools/gimptransformtool.[ch]: merged in all the old transform
        tool code.

        * tools/gimptool.h: added dummy GtkTypes for all the transform tools.

2001-03-13  Fatih Demir <kabalak@gtranslator.org>

	* configure.in: Added "tr" into ALL_LINGUAS..

2001-03-12  Simon Budig  <simon@gimp.org>

	* pixmaps/wilber.xpm: Fixed one pixel.

2001-03-12  Michael Natterer  <mitch@gimp.org>

	* app/gimplayerlistview.c: added some help_data and tooltips.

	* app/tools/Makefile.am
	* app/tools/gimperasertool.[ch]: one more.

	* app/tools/gimppaintbrushtool.[ch]
	* app/tools/gimppenciltool.[ch]: made all paint tools look the same.

	* app/tools/gimppainttool.c
	* app/tools/gimptool.[ch]
	* app/tools/paint_options.c
	* app/tools/tools.c: changed accordingly.

	* pixmaps/anchor.xpm: made it a bit smaller.

	* pixmaps/refresh.xpm: replaced with the "Recurrence" icon from
	evolution.

2001-03-12  Michael Natterer  <mitch@gimp.org>

	* pixmaps/Makefile.am
	* pixmaps/edit.xpm: new pixmap. "Someone" needs to go over the
	pixmaps one day ;)

	* app/gimpdatafactoryview.c
	* app/gimpdrawablelistview.c: use the new icon.

	* app/floating_sel.c: stupid: the new gimp_layer_get_opacity()
	accessor speaks in normalized [0.0..1.0] values, so the
	floating selection was invisible after blindly using it.

	* app/gimpimage.c: more stupid: a totally useless sanity clamping
	made the composite preview ugly. Fixed.

	* app/tools/tool_manager.c: why the heck did this never crash before:
	don't dereference a NULL GDisplay pointer.

2001-03-11  Seth Burgess      <sjburges@gimp.org>

	* app/tools/Makefile.am
	* app/tools/gimppenciltool.[ch]: no. 16 for your 
	pixelling pleasure.

	* app/tools/gimptool.[ch]
	* app/tools/paint_options.c
	* app/tools/tools.c: changed accordingly.
	
2001-03-11  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/gimpiscissorstool.[ch]: no. 15 is alive.

	* app/tools/gimptool.[ch]
	* app/tools/selection_options.c
	* app/tools/tools.c: changed accordingly.

2001-03-11  Michael Natterer  <mitch@gimp.org>

	* app/gimplayerlistview.c: minor cleanups.

	* app/tools/Makefile.am
	* app/tools/gimpblendtool.[ch]: back again.

	* app/tools/gimptool.[ch]
	* app/tools/paint_options.c
	* app/tools/tools.c: changed accordingly.

2001-03-11  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h
	* app/gimplayerlistview.[ch]: new subclass of GimpDrawableListView
	(the upcoming replacement of the layers dialog). Connects to the
	new GimpLayer signals using the layer container as signal proxy
	(see below).

	* app/gimpcontainerview.[ch]: made "set_container" a virtual
	function.  This is needed by the GimpLayerListView to
	connect/disconnect signals. Subclasses implementing this method
	MUST obey the following order of instructions:

	1. disconnect from signals related to GimpContainerView->container
	2. chain up (!!!)
	3. connect to signals related to GimpContainerView->container

	And yes, I will add DocBook files for all those new objects :)

	* app/gimppreview.[ch]: made "border_color" a GimpRGB instead of
	guchar[3]. Added gimp_preview_set_border_color().

	* app/gimpcontainergridview.c
	* app/gimplayerlistitem.c: use gimp_preview_set_border_color().

	* app/gimpcontainerlistview.c
	* app/gimpdrawablelistview.c: cleanup.

	* app/gimpdrawablelistitem.c: we can safely asume that our parent
	widget is a GimpDrawableListView and use it's "reorder_drawable"
	function pointer (after checking that it's there).

	* app/gimplistitem.c: connect the correct DND type when changing
	the container of a list item with "reorderable" enabled.

	* app/gimplayer.[ch]: added accessors and "*_changed" signals for
	layer->mode, layer->opacity and layer->preserve_trans.

	* app/disp_callbacks.c: fixed a FIXME: use the correct bucket fill
	tool context again.

	* app/tools/paint_options.[ch]: paint_mode_menu_new(): added a
	boolean which toggles the "Behind" item on/off to the same
	constructor can be used for all paint mode menus.

	* app/tools/gimptoolinfo.c: rect. select is the standard tool again.

	* app/brush_select.c
	* app/floating_sel.c
	* app/gimpimage.c
	* app/layers_dialog.c
	* app/pdb/layer_cmds.c
	* app/tools/gimpeditselectiontool.c
	* tools/pdbgen/pdb/layer.pdb: use the new layer accessors and the
	paint_mode_menu constructor.

	* app/commands.c
	* app/gdisplay.c
	* app/menus.c
	* app/undo.c
	* app/tools/gimppainttool.c
	* app/tools/gimptool.c
	* app/tools/paint_options.c
	* app/tools/tool_manager.c: put the #warning's back inside
	#ifdef __GNUC__

2001-03-10  Daniel Egger  <egger@suse.de>

	* plug-ins/common/sobel.c: Applied patch from
	Austin Donnelly to fix rendering of the topmost
	scanline.

2001-03-10  Garry R. Osgood <grosgood@rcn.com>
	
	* app/Makefile.am
	Inclusion of David's MMX code into Makefile now 
	depends on prior definition of HAVE_ASM_MMX.
	* app/pdb/procedural_db.c
	Line 276 cast of va_args to type GimpRGB seems
	very problematical on SGI, as the va_args macro
	expands to Extreme Ugliness and 
	(GimpRGB)(Extreme Ugliness) does not compile.
	RH Linux seems indifferent and accepts either.
	* app/commands.c
	* app/gdisplay.c
	* app/menus.c
 	* app/plug_in_cmds.c
	* app/undo.c
	* app/tools/gimppainttool.c
 	* app/tools/gimptool.c
	* app/tools/paint_options.c
	* app/tools/tool_manager.c
	s|#<remark about extreme buggedness>| 
	/* #<remark about extreme buggedness> */|
	Not all compilers are at peace with non-standard 
	pre-compiler directives. SGI MIPs compilers are 
	among the latter species.	
	
2001-03-11  Tor Lillqvist  <tml@iki.fi>

	* plug-ins/common/winclipboard.c: Enhance to also be able to paste
	BI_BITFIELDS images, 16- or 32-bit. Global indentation and spacing
	fix (use cvs diff -bu2 to see the real differences).

2001-03-09  Nathan Summers <rock@gimp.org>

	* app/tools/gimptransformtool.[ch]: it compiles, but probably isn't 
	useful

	* app/tools/Makefile.am: changed accordingly

2001-03-09  Zach Beane  <xach@mint.net>

	* TODO.xml: Added "Open into layer" entry.

2001-03-09  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/rect_selectP.h: removed.

	* app/tools/gimpfreeselecttool.[ch]
	* app/tools/gimpfuzzyselecttool.[ch]: reactivated.

	* app/tools/gimptool.[ch]: removed STUB()s and old crap.

	* app/tools/tools.c: register the new tools.

	* app/disp_callbacks.c
	* app/tools/selection_options.c: changed accordingly.

	* app/apptypes.h
	* app/tools/gimprectselecttool.c: cleanup.

2001-03-09  Nathan Summers <rock@gimp.org>

	* app/tools/gimptransformtool.[ch]: More work on the transform tool.
	Still does not compile, but it's much closer.

	* app/tools/Makefile.am
	* app/apptypes.h
	* app/undo.c: changed accordingly

2001-03-08  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/gimpellipseselecttool.[ch]
	* app/tools/gimprectselecttool.[ch]: new objects based on a (heavily
	modified) patch by Dave Neary <dneary@eircom.net>.

	* app/tools/gimpfuzzyselecttool.c
	* app/tools/gimptool.[ch]
	* app/tools/selection_options.c
	* app/tools/tools.c: changed accordingly.

2001-03-08  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h
	* app/channel_ops.c
	* app/commands.c
	* app/convert.[ch]
	* app/fileops.c
	* app/floating_sel.c
	* app/gimage.h
	* app/gimage_mask.[ch]
	* app/gimpchannel.c
	* app/global_edit.h
	* app/image_map.c
	* app/layer_select.[ch]
	* app/layers_dialogP.h
	* app/lc_dialog.c
	* app/resize.c
	* app/toolbox.c
	* app/undo.h
	* app/undo_history.c
	* app/xcf.c
	* app/tools/gimpbycolorselecttool.h
	* app/tools/gimpcroptool.[ch]
	* app/tools/gimpfuzzyselecttool.c
	* app/tools/gimppainttool.c
	* app/tools/transform_core.h: removed the GImage typedef, cleanup.

2001-03-08  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/[almost *]: lots of files renamed to gimp*tool.[ch]

	* app/commands.c
	* app/context_manager.c
	* app/disp_callbacks.c
	* app/gdisplay.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimpdnd.c
	* app/gimprc.c
	* app/global_edit.c
	* app/info_window.c
	* app/scale.c
	* app/scroll.c
	* app/undo.c
	* app/pdb/text_tool_cmds.c
	* app/pdb/tools_cmds.c
	* po/POTFILES.in
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/enums.pl
	* tools/pdbgen/pdb/text_tool.pdb
	* tools/pdbgen/pdb/tools.pdb: changed accordingly.

2001-03-06  Simon Budig  <simon@gimp.org>
	
	* app/mit.[ch]: Increased Mitch's age by one. Hopefully
	this won't break everything.

2001-03-06  Michael Natterer  <mitch@gimp.org>

	* app/gimage.[ch]: removed the layer mask functions.

	* app/gimpchannel.[ch]: added a boolean "dummy" parameter to
	gimp_channel_copy() so it has the same signature as
	gimp_layer_copy() and can be used by the GimpDrawableListView to
	generically duplicate drawables.

	* app/gimpcontainerview.c: call "select_item" with a NULL item
	before changing the underlying GimpContainer so subclasses have
	a chance to update (e.g. set button sensitivity).

	* app/gimpdnd.c: folded all the GtkType comparing code into a
	utility function (much more readable now).

	* app/gimpdrawablelistview.[ch]: activated the "raise", "lower",
	"duplicate" and "delete" buttons. I'm not really happy with all
	those function pointers passed to the constructor (and the dummy
	parameters I've added to some GimpChannel functions) -- OTOH the
	generic view maybe worth the "gboolean dummy" cruft hanging around
	in the channel class.

	* app/gimplayer.[ch]: removed the "apply_mask", "edit_mask" and
	"show_mask" booleans ...

	* app/gimplayermask.[ch]: .. and added them here together with
	proper accessors and "*_changed" signals.

	This also makes the layer mask undo code much clearer as we don't
	have to store the booleans separately.

	* app/gimplayerlistitem.c: badly hacked to acheive the correct
	indicator being drawn around the active drawable. This needs
	a new GimpPreview function for setting the border color.

	* app/gimplistitem.c: smaller horizontal spacing.

	* app/gimppreview.[ch]: added the "border_width" parameter also to
	gimp_preview_set_size() so we can modify all previews the same way
	after creation.

	* app/layers_dialog.c: no need to push an undo group around
	the "duplicate layer" code. Was this an artefact or did I miss
	something here ???

	* app/channel_ops.c
	* app/channels_dialog.c
	* app/gimage_mask.c
	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpdrawablelistitem.c
	* app/gimpimage.[ch]
	* app/qmask.c
	* app/test_commands.c
	* app/undo.c
	* app/xcf.c
	* app/pdb/channel_cmds.c
	* tools/pdbgen/pdb/channel.pdb
	* app/pdb/selection_cmds.c
	* tools/pdbgen/pdb/selection.pdb: changed accordingly.

	* app/pdb/internal_procs.c
	* app/pdb/layer_cmds.c
	* libgimp/gimplayer_pdb.[ch]
	* tools/pdbgen/pdb/layer.pdb: commented out the layer mask accessors
	from the perl code, so the functions temporarily disappeared all
	over the place.

	* plug-ins/Makefile.am: don't build XJT until the layer mask stuff
	is back.

	* pixmaps/eye.xpm: cropped it to it's minimal size.

2001-03-05  Sven Neumann  <sven@gimp.org>

	* app/Makefile.am
	* app/apptypes.h
	* app/gimpimage-undo.[ch]
	* app/gimpundo.[ch]
	* app/gimpundostack.[ch]: added new GimpUndo and GimpUndoStack objects 
	which will be used for the upcoming new undo system. Actually my 
	current plan for the undo system is to keep it pretty much as it is...
	
	* app/gimpimage.[ch]: added new GimpUndoStacks but temporarily kept
	old GSLists around, so I don't break everything now.

2001-03-04  Michael Natterer  <mitch@gimp.org>

	* app/gimpbrushpreview.c
	* app/gimpgradientpreview.c
	* app/gimppalettepreview.c
	* app/gimppatternpreview.c
	* app/gimptoolinfopreview.c: removed all dnd code ...

	* app/gimppreview.c: ... and put it where is belongs.

	* app/gimpcontext.c: use g_type_is_a() instead of comparing the
	types directly.

	* app/gimpdnd.[ch]: same g_type_is_a() fix here. New function
	gimp_dnd_viewable_source_unset().

	* app/gimpdrawablelistitem.c: gtk_signal_connect_while_alive() to
	GimpDrawable's "visibility_changed" fixes a crash here.

	* app/gimplayerlistitem.c: check more strictly if DND reordering
	of layers is allowed.

	* app/gimplistitem.c: more DND reordering checking.
	Start drawing the drop indicator at x = name_label->allocation.x
	(looks better IMHO).

2001-03-04  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h
	* app/gimplayerlistitem.[ch]: new widget derived from
	GimpDrawableListItem (additionally displays the layer mask),

	* app/gimplistitem.[ch]: added the preview_size to the struct so
	subclasses can create previews at arbitrary times. Removed the
	"preview_size" parameter from "set_viewable".

	* app/gimpimage.[ch]: removed the layer mask functions because
	they belong to GimpLayer.

	* app/gimplayer.[ch]: folded the layer mask code from GimpImage
	into GimpLayer's layer mask functions. Added a "mask_changed"
	signal which is emitted when a mask is added/removed. Added
	"push_undo" parameters to the functions so we can use them from
	the undo system.

	* app/undo.c: instead of badly poking the GimpLayer struct, use
	the accessors with push_undo = FALSE.

	* app/gimage_mask.c
	* app/gimpdrawablelistitem.c
	* app/layers_dialog.c
	* app/xcf.c
	* app/pdb/image_cmds.c
	* tools/pdbgen/pdb/image.pdb: changed accordingly.

2001-03-04  Michael Natterer  <mitch@gimp.org>

	* app/gimpdrawable.[ch]: new function gimp_drawable_set_visible().
	Renamed gimp_drawable_visible() to gimp_drawable_get_visible().
	Added a "visibility_changed" signal.

	* app/gimplistitem.[ch]: new virtual function "set_viewable"
	which allows subclasses to connect to the viewable's signals.

	* app/gimpdrawablelistitem.[ch]: added an eye button. Implement
	"set_viewable" to connect to the "visibility_changed" signal.

	* app/gimpchannel.[ch]: removed unused function
	gimp_channel_toggle_visibility().

	* app/channels_dialog.c
	* app/floating_sel.c
	* app/gimage_mask.c
	* app/gimpimage.c
	* app/gimplayer.c
	* app/layers_dialog.c
	* app/xcf.c
	* app/pdb/channel_cmds.c
	* app/pdb/layer_cmds.c
	* app/pdb/pdb_glue.h
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/layer.pdb: removed direct access of
	drawable->visible and use the functions instead. Also makes PDB
	code generation nicer.

	* pixmaps/eye.xpm: cropped it a bit.

2001-03-04  Zbigniew Chyla  <cyba@gnome.pl>

	* app/commands.c (image_scale_callback),
	libgimpwidgets/gimpchainbutton.c (gimp_chain_button_destroy),
	libgimpwidgets/gimpcolorbutton.c (gimp_color_button_destroy):
	libgimpwidgets/gimppixmap.c (gimp_color_button_destroy):
	Move variable assignments out of assertions to allow compilation
	with "G_DISABLE_ASSERT" defined.

2001-03-04  Sven Neumann  <sven@gimp.org>

	* app/preferences_dialog.c (prefs_save_callback): applied a patch
	from David Odin <David.Odin@bigfoot.com> that fixes a typo in the code.

2001-03-04  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h
	* app/gimpdrawablelistitem.[ch]
	* app/gimplistitem.[ch]: new widgets capable of reordering
	themselves using DND.

	* app/gimpcontainerlistview.c: removed stuff which is now done
	by the GimpListItem.

	* app/gimpdnd.[ch]: new function gimp_dnd_get_drag_data(widget)
	which returns a GimpViewable using the widget's drag callback.

	* app/gimpdrawablelistview.c: implement GimpContainerView's
	"insert_item" method and enable reordering for the created
	GimpListItem.

2001-03-03  Michael Natterer  <mitch@gimp.org>

	* app/appenums.h: renamed ZoomType to GimpZoomZype and added it
	here.

	* app/commands.c
	* app/disp_callbacks.c
	* app/nav_window.c
	* app/scale.[ch]: changed accordingly.

	* app/tools/Makefile.am
	* app/tools/magnify.[ch]: back as object.

	* app/tools/tool.c: removed the old ToolInfo entry.

	* app/tools/tools.c: register it.

2001-03-02  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/gimpselectiontool.[ch]: new files ported by
	Dave Neary <dneary@eircom.net>. Changed them a bit to inherit
	from GimpDrawTool and added implementations of "modifier_key"
	and "oper_update" because they are shared by 4 of the old
	selection tools.

2001-03-01  Daniel Egger  <egger@suse.de>

	* app/fileops.c: Applied patch from Dave Neary to fix
	bug 37633 "File->Revert doesn't resize canvas".

2001-03-01  Stanislav Brabec  <utx@penguin.cz>

        * plugins/common/despeckle.c: Fixed black_level range.
        Valid range should be -1..255, not 0..256, because comaparison
        is > and <=. Bug became visible after last Martin Weber's fix.
        There must be for both black and white levels one extra value
        to cover all numbers 0..255.

2001-03-01  Michael Natterer  <mitch@gimp.org>

	* app/tools/crop.[ch]: we need to override GimpDrawTool's "draw"
	method to actually see something.

	* app/channels_dialog.c
	* app/layers_dialog.c: fixed the crash introduced by the migration
	of gimage->layers and gimage->channels to GimpContainer.

2001-02-20  Nathan Summers  <rock@gimp.org>

	* app/tools/gimptransformtool.c
	* app/tools/gimptransformtool.h: Started work on the TransformCore.  
	Very incomplete.  Needs a friendly visit from genmarshal.pl.  Not yet 
	included in the build.  Move along now, folks, there's nothing more to
	see.

2001-02-28  Nathan Summers  <rock@gimp.org>

	* app/tools/crop.c
	* app/tools/crop.h: Fixed a couple instances where the crop tool was
	incorrectly inheriting from GimpTool instead of GimpDrawTool.  The crop 
	tool still does not work completely correctly on my machine.  It does
	not show the lines and sometimes it includes garbage.

2001-02-28  Sven Neumann  <sven@gimp.org>

	Please, do not change the files in app/pdb directly, they are
	autogenerated. And, please, whatever you change, type make in
	the toplevel srcdir, since pdbgen might decide it has to change 
	some more files because of your changes.
	
	* app/pdb/layer_cmds.c
	* app/pdb/tools_cmds.c
	* app/tools/crop.c
	* libgimp/gimpenums.h
	* plug-ins/script-fu/script-fu-constants.c
	* tools/pdbgen/enums.pl
	* tools/pdbgen/pdb/tools.pdb: made everything compile again

2001-02-27  Jay Cox  <jaycox@gimp.org>

	* app/appenums.h
	* app/gimplayer.c
	* app/layers_dialog.c: When adding a layer mask allow the option
	of using the current selection (or it's inverse) to initialise
	the mask.

2001-02-28  Michael Natterer  <mitch@gimp.org>

	* app/gdisplay.c
	* app/gimage.c. #include "tools/tool.h"

	* app/tools/edit_selection.[ch]: the arrow_key function is not
	a method of edit_selection but of any tool that needs it.

	* app/tools/gimppaintbrushtool.c: removed variables.

	* app/tools/move.c: use the arrow_key function.

	* app/tools/tool_manager.h: removed the include of "tool.h"

2001-02-28  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/edit_selection.[ch]: back as real tool which gets
	temporarily pushed to the tool_manager's new tool stack.

	* app/tools/move.c
	* app/tools/text_tool.c: call the edit_selection stuff again.

	* app/tools/tool.c: added a STUB().

	* app/tools/tool_manager.[ch]: implemented tool_manager_push_tool()
	and tool_manager_pop_tool().

2001-02-28  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/bucket_fill.[ch]: one more...

	* app/tools/fuzzy_select.c: everything commented out except the
	find_region stuff.

	* app/tools/gimpcolorpickertool.c: cosmetic.

	* app/tools/paint_options.c: #include "bucket_fill.h"

	* app/tools/tool.[ch]: removed STUB()'s.

	* app/tools/tools.c: register it.

2001-02-28  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/ink.[ch]: back as object.

	* app/tools/paint_options.c: #include "ink.h"

	* app/tools/tool.h: removed the type #define.

	* app/tools/tools.c: register it.

2001-02-28  Michael Natterer  <mitch@gimp.org>

	* app/context_manager.[ch]: made the global_paint_options public.

	* app/tools/gimptoolinfo.[ch]: added a "tool_context" boolean to
	the constructor and create a private context for the tool
	initialized with global_paint_options' values.

	* app/tools/tool_manager.[ch]: changed tool_manager_register_tool()
	accordingly.

	* app/tools/gimpcolorpickertool.c
	* app/tools/measure.c
	* app/tools/move.c
	* app/tools/text_tool.c: changed accordingly.

	* app/tools/paint_options.[ch]: added the fade out and gradient
	options here so they can be used by all paint tools.

	* app/tools/gimppaintbrushtool.c: removed them here. Changed
	the non_gui stuff: removed the non_gui_paint_func and handle
	the non_gui stuff in the normal paint method. Allocate a
	non_gui_paintbrush instead of the old non_gui_paint_core.

	The non_gui stuff will change totally and will be handled
	by GimpPaintTool only.

	* app/tools/tool.c: removed the STUB()'s again.

2001-02-27  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am: build the measure tool again.

	* app/tools/gimpcolorpickertool.c: correct prototypes for some
	functions so we don't get warnings about incompatible assignments
	in "class_init", chain up in "control".

	* app/tools/gimpdrawtool.c: added an implementation of "control"
	which can be called from subclasses so we don't need to call
	GimpDrawTool's methods directly from there.

	* app/tools/gimppaintbrushtool.[ch]: create it's tool options so it
	doesn't crash. Commented out the non_gui stuff. We need a different
	interface for this.

	* app/tools/gimppainttool.[ch]: some cleanups: call the draw tool's
	"control" function, fixed "cursor_update", fixed indentation.

	* app/tools/measure.[ch]: made it work again (properly subclass
	GimpDrawTool).

	* app/tools/tool.c: re-added the non_gui paintbrush STUB()'s

	* app/tools/tools.c: don't allocate the non_gui stuff.
	GimpPaintTool is an abstract superclass, so we cannot create
	an instance of it. Moreover, the current non_gui stuff assumes
	that there is something like a "paint_core" and changes it's
	virtual function pointers, breaking the object system totally.

2001-02-27  Sven Neumann  <sven@gimp.org>

	* plug-ins/common/header.c: applied patch from Chuck Mason 
	<chuckjr@unbounded.com> that fixes wrong output of header plug-in.

2001-02-27  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h
	* app/Makefile.am
	* app/gimpdrawablelistview.[ch]: new widget. The upcoming replacement
	for the layers and channels dialogs.

	* app/test_commands.[ch]: put the test dialogs here...

	* app/commands.[ch]: ... and made this one clean again.

	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpcontainerview.[ch]: some signal handling fine tuning.

	* app/gimpimage.[ch]: emits "active_layer_changed" and
	"active_channel_changed" signals now. The semantics of
	gimage->active_layer and gimage->active_channel have changed a bit.
	We now have either an active layer _or_ and active channel (there
	is no active layer any more if a channel is active).

	* app/channel_ops.c
	* app/floating_sel.c
	* app/gdisplay.c
	* app/layers_dialog.c
	* app/menus.c: changed accordingly.

	* app/tools/gimpcolorpickertool.c: actually assign the draw_class
	vraiable in the class_init function.

	* app/tools/gimpdrawtool.[ch]
	* app/tools/tool.c: removed the _new() functions because these
	objects are abstract superclasses. Did some cleanup.
	Nathan, please configure you editor to _not_ produce any tabs
	in the source code.

	* app/tools/gimppaintbrushtool.[ch]: "blurb" and "help" are tagged
	with _(), not N_(). Put the register function to the header.

	* po/POTFILES.in: made it compile again.

2001-02-26  Nathan Summers <rock@gimp.org>

	* app/tools/gimpdrawtool.c
        * app/tools/gimpdrawtool.h
        * app/tools/gimppainttool.c
        * app/tools/gimppainttool.h
        * app/tools/gimppainttool_kernels.h: Created GimpDrawTool and
        GimpPaintTool, real classes that replace the old DrawCore and
        PaintCore

        * app/Makefile.am
        * app/apptypes.h
        * app/context_manager.c
        * app/gdisplay.c
        * app/gimage_mask.c
        * app/gimpbrush.c
        * app/gimpbrush.h
        * app/gimpbrushgenerated.c
        * app/gimpbrushpipe.c
        * app/gimpcontext.c
        * app/info_window.c
        * app/path_transform.h
        * app/undo.c
        * app/pdb/tools_cmds.c
        * app/tools/Makefile.am
        * app/tools/bezier_selectP.h
        * app/tools/gimptoolinfo.c
        * app/tools/measure.c
        * app/tools/measure.h
        * app/tools/move.c
        * app/tools/paint_options.c
        * app/tools/tool.c
        * app/tools/tool.h
        * app/tools/tools.c
        * app/tools/transform_core.h
        * tools/pdbgen/Makefile.am: changed accordingly

        * libgimp/Makefile.am: fixed glitch in build

        * app/tools/gimpcolorpickertool.c
        * app/tools/gimpcolorpickertool.h
        * app/tools/gimppaintbrushtool.c
        * app/tools/gimppaintbrushtool.h:new names

        * app/draw_core.c
        * app/draw_core.h
        * app/tools/color_picker.c
        * app/tools/color_picker.h
        * app/tools/paint_core.c
        * app/tools/paint_core.h
        * app/tools/paint_core_kernels.h
        * app/tools/paintbrush.c
        * app/tools/paintbrush.h: removed

2001-02-25  Michael Natterer  <mitch@gimp.org>

	* app/channel_ops.c
	* app/channels_dialog.c
	* app/commands.c
	* app/floating_sel.c
	* app/gdisplay.c
	* app/gimpimage.[ch]
	* app/layer_select.c
	* app/layers_dialog.c
	* app/undo.c
	* app/xcf.c
	* app/tools/move.c: remove direct access of gimage->active_layer and
	gimage->active_channel. Reading access is of course harmless, but
	gimp_image_set_active_blah() will trigger a signal emission soon.

	It will probably be neccessary to change the functions to accept
	NULL layers and channels to acheive exactly what weird places like
	floating_sel.c did before by setting it directly.

	* gimptool-1.4.in
	* libgimp/Makefile.am
	* libgimpcolor/Makefile.am
	* libgimpmath/Makefile.am
	* libgimpwidgets/Makefile.am
	* plug-ins/libgck/gck/Makefile.am: made linking against stable
	GIMP installed in the same prefix work again by renaming all our
	libraries explicitly to libgimp<foo>-1.3.* (not as part of the
	libtool release but as part of the library name). Removed the
	libtool release to avoid double versioning. This has to be
	hardcoded in the libraries' Makefile.am ...

	* app/Makefile.am
	* plug-ins/FractalExplorer/Makefile.am
	* plug-ins/Lighting/Makefile.am
	* plug-ins/MapObject/Makefile.am
	* plug-ins/bmp/Makefile.am
	* plug-ins/common/Makefile.am
	* plug-ins/common/mkgen.pl
	* plug-ins/dbbrowser/Makefile.am
	* plug-ins/faxg3/Makefile.am
	* plug-ins/fits/Makefile.am
	* plug-ins/flame/Makefile.am
	* plug-ins/fp/Makefile.am
	* plug-ins/gap/Makefile.am
	* plug-ins/gdyntext/Makefile.am
	* plug-ins/gfig/Makefile.am
	* plug-ins/gflare/Makefile.am
	* plug-ins/gfli/Makefile.am
	* plug-ins/gimpressionist/Makefile.am
	* plug-ins/helpbrowser/Makefile.am
	* plug-ins/ifscompose/Makefile.am
	* plug-ins/imagemap/Makefile.am
	* plug-ins/maze/Makefile.am
	* plug-ins/mosaic/Makefile.am
	* plug-ins/pagecurl/Makefile.am
	* plug-ins/plugin-helper/Makefile.am
	* plug-ins/print/Makefile.am
	* plug-ins/rcm/Makefile.am
	* plug-ins/script-fu/Makefile.am
	* plug-ins/sel2path/Makefile.am
	* plug-ins/sgi/Makefile.am
	* plug-ins/webbrowser/Makefile.am
	* plug-ins/xjt/Makefile.am: ... while all other Makefiles can simply
	link against "libgimp<foo>-$(LT_RELEASE).la"

2001-02-24  Michael Natterer  <mitch@gimp.org>

	* app/pixmaps2.h: commented out "text_width" and "text_height"

	* app/tools/Makefile.am
	* app/tools/text_tool.[ch]: "It was really dead, Jim!"

	* app/tools/tool.c: removed STUBs

	* app/tools/tools.c: register it.

2001-02-24  Michael Natterer  <mitch@gimp.org>

	* TODO.xml: updated.

	* app/appenums.h
	* app/apptypes.h: prefixed the cursor stuff with "Gimp", added
	the new stock tool cursor enum. Removed the old ToolType enum.

	* app/cursorutil.[ch]
	* app/gdisplay.[ch]: removed the old ToolType enum and prefixed
	the functions with "gimp_". Also stripped all "toggle cursor"
	stuff from the cursor code, so the new API is easier and not
	depending on the tool system.

	All existing tool cursors can be used via the new stock tool
	cursor enum, so no tool has to fiddle around with bitmap cursors.
	There will be an cursorutil function for registering stock tool
	cursor types on the fly.

	* app/disp_callbacks.c
	* app/scroll.[ch]: moved the display scrollbar callbacks from
	scroll.[ch] to disp_callbacks.c. Removed some crap from scroll.h

	* app/tools/tool.[ch]: removed the BitmapCursor pointers from the
	tool class struct and add cursor and toggle cursor IDs to the
	GimpTool struct. Work in progress.

	* app/dialog_handler.c
	* app/tools/bezier_select.c
	* app/tools/blend.c
	* app/tools/bucket_fill.c
	* app/tools/by_color_select.c
	* app/tools/clone.c
	* app/tools/color_picker.c
	* app/tools/convolve.c
	* app/tools/crop.c
	* app/tools/dodgeburn.c
	* app/tools/edit_selection.c
	* app/tools/ellipse_select.c
	* app/tools/flip_tool.c
	* app/tools/free_select.c
	* app/tools/fuzzy_select.c
	* app/tools/ink.c
	* app/tools/iscissors.c
	* app/tools/magnify.c
	* app/tools/measure.c
	* app/tools/move.c
	* app/tools/paint_core.[ch]
	* app/tools/perspective_tool.c
	* app/tools/rect_select.c
	* app/tools/rotate_tool.c
	* app/tools/scale_tool.c
	* app/tools/shear_tool.c
	* app/tools/text_tool.c
	* app/tools/transform_core.[ch]: changed accordingly. Did this
	"blind" for most tools because they don't compile. The changes are
	minimal, so there should be no conflicts.

2001-02-24  Michael Natterer  <mitch@gimp.org>

	* app/commands.[ch]: added cmd_callbacks for the toolbox and
	the preferences dialog.

	* app/context_manager.c: cleanup.

	* app/gimppreview.[ch]: made gimp_preview_render() public.

	* app/gimptoolinfopreview.c
	* app/tools/gimptoolinfo.c: the tool previews look nice now but
	are still ugly implemented (it renders tons of temp_bufs on each
	state change).

	* app/indicator_area.[ch]: pass a context to the constructor.

	* app/menus.c: don't call the toolbox and the prefs dialog
	directly but dispatch via commands.[ch]

	* app/preferences_dialog.[ch]
	* app/toolbox.[ch]: renamed the constructor / raise function, cleanup.

	* app/tools/color_picker.c: tried to get the shortcut working again.

	* app/tools/paint_options.c: the brush dialog's paint options
	are shown/hidden from the context manager now.

2001-02-23  Michael Natterer  <mitch@gimp.org>

	* app/app_procs.c: removed crap from ancient times when tools
	used to be an enum.

	* app/brush_select.[ch]: cleaned up the gui and made global paint
	mode toggling much simpler by expanding vertically instead of
	reparenting.

	* app/context_manager.c: removed hack by using a tool manager
	accessor function.

	* app/gimpcontext.c: use the new standard tool info object. Tools
	also _behave_ like all other data types now (can e.g. be
	refreshed).

	* app/tools/tool.[ch]

	* app/tools/gimptoolinfo.[ch]: added an "identifier" which is an
	untranslated string with a meaningful prefix and name, e.g.
	"gimp:color_picker_tool". Renamed "tool_name" and "tool_desc"
	to "blurb" and "help", changed the constructor accordingly.
	Added gimp_tool_info_get_standard() to make the context work
	with tool refresh.

	* app/tools/tool_manager.[ch]
	* app/tools/tools.c: removed the global list of tool class
	structures because the tool info list is in place.
	Added tool_manager_register_tool_options() which calls
	tool_options_dialog_add() and registers the options in the
	global_tool_info_list.

	* app/tools/Makefile.am
	* app/tools/paint_options.[ch]
	* app/tools/selection_options.[ch]
	* app/tools/tool_options.[ch]
	* app/tools/tool_options_dialog.[ch]: build them all again. This
	is mostly the old tool options system with minor modifications to
	work with the new stuff. The tool options auto-update with the user
	context now, so there are no update functions any more.

	* app/gimpdnd.c
	* app/toolbox.c
	* app/tools/color_picker.c
	* app/tools/measure.c
	* app/tools/move.c: changed accordingly.

2001-02-23  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h
	* app/gimptoolinfopreview.[ch]: new widget.

	* app/gimppreview.c
	* app/tools/gimptoolinfo.c
	* app/gimpdnd.c: changed for the tool info preview. Still buggy
	and looks a bit funny at the moment :-)

	* app/commands.[ch]
	* app/menus.c: small new feature: shift-X toggles the whole context.

2001-02-23  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/pixmaps.h
	* app/wilber.h: removed some data files from app/

	* pixmaps/Makefile.am
	* pixmaps/default.xpm
	* pixmaps/swap.xpm
	* pixmaps/wilber3.xpm: added them here.

	* app/pixmaps2.h: added the "dialog_bits" stuff here.

	* app/tips_dialog.c
	* app/toolbox.c: use the new XPMs and remove hacks which created
	the GdkPixmaps and GtkPreviews manually.

2001-02-22  Simon Budig  <simon@gimp.org>

	* app/interface.c
	* app/gdisplay.h
	* app/gdisplay.c: Icons now update every 7.5 seconds in the
	idle loop. Also the aspect ratio is correct now. Mitch promised
	to hack a preferences option to disable this stuff...  :-)

Thu Feb 22 18:23:10 GMT 2001  Adam D. Moss  <adam@gimp.org>

	* tools/pdbgen/pdb/channel.pdb: Save a bunch of slow-witted
	old people like myself from having to upgrade PERL for the sake
	of sugar.  Baby.

2001-02-21  Michael Natterer  <mitch@gimp.org>

	* configure.in: forgot one s/gimptool/gimptool-1.4/

	* app/appenums.h: removed "UPDATE_CURSOR" from the ToolAction enum.

	* app/context_manager.c: removed the toolbox toggle button updating
	code here...

	* app/toolbox.c: ...and handle it in the toolbox itself.

	* app/devices.c: removed some obsolete old tool suff.

	* app/tools/Makefile.am
	* app/tools/move.[ch]: reactivated. Disabled the edit_selection
	stuff for now. We need a way to temporary push tools to some stack
	of the tool manager.

	* app/tools/tool.[ch]: removed lot of stuff that is obsolete or
	handled by the GimpToolInfo object now.

	* app/tools/tool_manager.[ch]: stripped all tool options stuff
	because they will be able to follow tool changes themselves.
	Renamed some functions to be consistent.

	* app/tools/tools.c: register the move tool again.

	* app/cursorutil.c
	* app/disp_callbacks.c
	* app/gimage_mask.c
	* app/global_edit.c
	* app/tools/color_picker.c
	* app/tools/measure.[ch]
	* app/tools/tool_options.c: changed accordingly.

2001-02-21  Simon Budig   <simon@gimp.org>

	* app/disp_callbacks.c
	* app/gdisplay.c
	* app/gdisplay.h
	* app/interface.c: Moved the Icon preview stuff to the idle-loop.

2001-02-21  Simon Budig   <simon@gimp.org>
	
	* app/interface.c: Fixed stupid bug with the icon preview when
	creating the second preview. Please note that it still crashes
	on the second image, but this is hopefully not my fault...  :-)

2001-02-21  Michael Natterer  <mitch@gimp.org>

	Made the tool system work again and integrated it back with the
	GimpContext. It's a hack between old, new and freshly hacked
	stuff. There are still lots of warnings but at least we can switch
	tools again.

	* app/tools/Makefile.am
	* app/tools/gimptoolinfo.[ch]: resurrected as real object.
	The GimpToolInfo objects are derived from GimpData, which gives
	us the tool icon stuff for free. Also, we need a list of _objects_
	which is allocated all the time. All tools are required to have
	a "register" function which registers themselves with the list
	of GimpToolInfo objects which is maintained by the tool manager.

	* app/tools/tool.[ch]: made a real GtkObject with properly named
	functions out of it. The former "active_tool_control" is of
	course not the default implementation of the tool's "control"
	method but a hack _around_ it, so it went to the tool manager.

	* app/tools/color_picker.[ch]
	* app/tools/measure.[ch]: ditto. Added "register" functions and
	"destroy" implementations so the tools go away after use.

	* app/tools/tool_manager.[ch]: badly hacked at the moment to keep
	both the list of class structures _and_ the tool info list.

	* app/tools/tools.c: call the tools' register functions.

	* app/gimpcontext.[ch]: store a pointer to a GimpToolInfo object
	as "active_tool" in the context, so we're independent of tools
	being allocated or not. It's treated just like a brush or pattern
	now.

	* app/gimpdnd.[ch]: made tool DND work like all other DND types.

	* app/devices.[ch]: also here: the tool is just a normal data object
	now, resulting in removal of lots of code.

	* app/commands.c
	* app/context_manager.c: updated the tool select and context stuff
	to work again.

	* app/toolbox.c: removed the old pixmap buttons and put GimpPreviews
	inside the tool buttons. Still needs an own preview type to
	look nice.

	* app/disp_callbacks.c
	* app/about_dialog.c
	* app/app_procs.c
	* app/appenums.h
	* app/apptypes.h
	* app/gimage.c
	* app/gimppalette.c
	* app/gimppreview.c
	* app/gimprc.c
	* app/info_window.c
	* app/menus.c
	* app/palette_select.h
	* app/scale.c
	* app/scroll.c: lots of changes to make it work again.

2001-02-21  Daniel Egger  <egger@suse.de>

	* app/gimpchecks.h: New file containing the check types.
	
	* app/image_render.h: ... definitions taken from here.
	* app/temp_buf.c:
	* app/temp_buf.h: New function temp_buf_new_check to create
	a new checked temp_buf.

2001-02-20  Simon Budig  <simon@gimp.org>
	
	* app/gdisplay.[ch]
	* app/disp_callbacks.c
	* app/interface.c: Added preliminary support for Preview icons.

	This is not finished: We need a better way to get previews with
	a specific depth and probably a rendered Checkerboard for the
	alpha channel. Also the update function is now bound to a click
	in the top left menu-button and should go in some idle-stuff.
	Please test this on various window managers and give some
	feedback. The last point is the aspect ratio of the generated
	previews...

2001-02-20  Nick Lamb  <njl195@zepler.org.uk>

	* libgimpwidgets/gimpwidgets.c: include string.h

2001-02-20  Michael Natterer  <mitch@gimp.org>

	* app/gimpdnd.[ch]: removed all brush, pattern, gradient and palette
	DND functions because there are generic GimpViewable DND functions
	now.

	* app/disp_callbacks.[ch]
	* app/interface.c: changed accordingly.

2001-02-19  Michael Natterer  <mitch@gimp.org>

	* app/commands.[ch]
	* app/menus.c: first version of the new layers and channels dialogs.

	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c: allow creation with a NULL container.

	* app/gimpdnd.[ch]: added generic DND functions for all drawable
	types (not just setting the DND icon). Started to remove code
	duplication.

	* app/gimpdrawablepreview.c: with some magic calculations and ugly
	assumptions the drawable previews now look exactly like in the old
	L&C dialog.

	* app/gimpimagepreview.c: no need to say "return" at the end of a
	void function.

	* app/gimppreview.[ch]: added the "is_popup" boolean also to the
	default constructor. Call gimp_preview_set_viewable() before
	calculating the preview size.

2001-02-19  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimppalette-import.[ch]: new files. The import functions
	stripped from all UI crap.

	* app/palette_import.c: removed from here.

2001-02-19  Sven Neumann  <sven@gimp.org>

	* app/gimpimage.[ch]: converted gimage->layers and gimage->channels
	to GimpLists.
	
	* app/channel_ops.c
	* app/channels_dialog.c
	* app/commands.c
	* app/convert.c
	* app/floating_sel.c
	* app/gdisplay.c
	* app/gimpdrawable.c
	* app/layers_dialog.c
	* app/resize.c
	* app/undo.c
	* app/xcf.c
	* app/pdb/display_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/layer_cmds.c
	* app/tools/crop.c
	* app/tools/edit_selection.c
	* tools/pdbgen/pdb/display.pdb
	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/layer.pdb: changed accordingly

2001-02-19  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainer.[ch] (gimp_container_insert): new function.

2001-02-19  Michael Natterer  <mitch@gimp.org>

	* app/context_manager.c
	* app/gimpdatafactory.c
	* app/gimpdatalist.[ch]
	* app/gimplist.[ch]
	* app/module_db.c: return a GimpContainer from all container
	subclass constructors.

	* app/gimppalettepreview.c
	* app/palette.c: changed the preview a bit. Still ugly.

2001-02-19  Michael Natterer  <mitch@gimp.org>

	* gimp.m4
	* gimptool.in: removed.

	* gimp-1.4.m4
	* gimptool-1.4.in: added modified versions. gimp-1.4.m4 is untested.
	The m4 macro is now called AM_PATH_GIMP_1_4()

	* .cvsignore
	* Makefile.am
	* configure.in: changed accordingly.

	* libgimp/Makefile.am
	* libgimpcolor/Makefile.am
	* libgimpmath/Makefile.am
	* libgimpwidgets/Makefile.am: install the header files in
	$includedir/gimp-MAJOR.MINOR/<libname>

	* app/brush_edit.c: increased toplevel container border size to 4.

	* app/gimpdatafactoryview.c: don't generate multiple "copy"s when
	duplicating data objects.

	* app/gradient_editor.c: cleaned up the GUI.

	* app/lc_dialog.c: removed the "Close" button.

2001-02-18  Michael Natterer  <mitch@gimp.org>

	* app/gimpdnd.[ch]: added DND source functions which work by
	GtkType.

	* app/commands.c
	* app/brush_select.c
	* app/gradient_select.[ch]
	* app/pattern_select.c: removed the DND code here because it's all
	done by the GimpContainerView now.

	* app/gimpbrushpreview.c
	* app/gimpgradientpreview.c
	* app/gimppalettepreview.c
	* app/gimppatternpreview.c: use the DND by-type connect functions.

	* app/gimpbrushgenerated.c: implemented "duplicate", cleanup.

	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpcontainerview.[ch]: added a "activate_item" signal
	method which is emitted by the subclasses to indicate double click.

	* app/gimpdatafactoryview.c: connect to "activate_item" and show
	the editor.

	* app/convert.c
	* app/gimppalette.[ch]
	* app/palette.c
	* app/paletteP.h
	* app/palette_import.c
	* app/palette_select.[ch]: major cleanup: Behaves like the other
	datatypes now: DND, context stuff, GimpContainerListViews in
	the dialogs etc. Mostly just removal of code.

	* app/gradient_editor.c: fixed signal blocking/unblocking.

	* plug-ins/script-fu/scripts/Makefile.am: install the "Test Sphere"
	script again.

2001-02-17  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainer.[ch]
	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpcontainerview.[ch]
	* app/gimplist.c
	* app/gimpmarshal.[ch]: the GimpContainer has a new virtual "reorder"
	method which is much more eficient then the current remove/add
	braindeadness when renaming data objects.
	Changed the views to connect to "reorder" and call the
	GimpContainerView's new "reorder_item" method which then does
	the right thing in the view subclasses.

	* app/gimpdatafactory.c
	* app/gimpdatafactoryview.c
	* app/gimpdatalist.[ch]: removed the data list loading and saving
	stuff from GimpDataList because that's the job of the
	GimpDataFactory.

	* app/brush_edit.[ch]
	* app/brush_select.c: cleanup.

	* app/gradient_editor.[ch]: changed it to work like the brush
	editor: return a GradientEditor pointer in the constructor
	and statically store this pointer in the gradient selection file.
	Removed the global "g_editor" variable and added tons of
	GradientEditor* variables to function calls so they know their
	context without the global variable.

	* app/gradient_select.c: changed accordingly.

2001-02-17  Seth Burgess <sjburges@gimp.org>
	
	* app/tools/Makefile.am 
        * app/tools/measure.[ch]: added back in, changing as needed for basic 
	operation.  Probably pretty buggy still.

	* app/tools/tools.c: changed one of the tool initializations to be
	the measure tool.  Now only measure tools are availble (though it
	would appear both are visually).  I don't think the toolbox selection 
	stuff is operational yet.

	* app/tools/color_picker.[ch]: minor cleanup

2001-02-16  Stanislav Brabec  <utx@penguin.cz>

        On request of Martin Weber <martweb@gmx.net>.
        * plugins/common/despeckle.c: Fixed comparison *sort_ptr > black_level.
        Only adopting white_level had a visual effect. This fix causes
        that also adopting blck_level works also.

2001-02-14  Michael Natterer  <mitch@gimp.org>

	* HACKING: added a note about apptype.h and about not including
	headers in headers.

	* app/apptypes.h: added GimpTool and BitmapCursor.

	* app/cursorutil.h
	* app/devices.h
	* app/draw_core.h
	* app/tools/color_picker.h
	* app/tools/tool.h
	* app/tools/tool_options.h
	* app/gimpcontext.h: removed includes of "tools/tool.h"

	* app/gimprc.[ch]: indentadion cleanup, added
	"module_db_load_inhibit".

	* app/module_db.c: removed the above variable here.

	* app/gimpdata.[ch]: added a vitrual "duplicate" method.

	* app/gimpbrush.[ch]
	* app/gimpbrushgenerated.[ch]
	* app/gimpbrushpipe.[ch]
	* app/gimpgradient.[ch]
	* app/gimppalette.[ch]
	* app/gimppattern.[ch]: all "load", "new" and "get_standard"
	functions return a GimpData pointer now.

	* app/gimpdatafactory.[ch]: made some stuff const.

	* app/gimpdatafactoryview.c: activate the "duplicate" button and
	set the initial button sensitivity correctly.

	* app/brush_select.c
	* app/gradient_select.c
	* app/pattern_select.c: use the new GimpDataFactoryView.

	* libgimp/Makefile.am: grouped the file to sort out what _may_
	go to subdirs or separate libs.

	* libgimp/gimpenv.[ch]: added many "const".

	* app/app_procs.c
	* app/brush_edit.c
	* app/gimpcontext.c
	* app/gimpdnd.c
	* app/gradient_editor.c
	* app/palette.c
	* app/palette_import.c
	* app/user_install.c: many related changes.

	* libgimpmath/gimpmathtypes.h
	* libgimpmath/gimpvector.[ch]: minor cleanups.

	* plug-ins/script-fu/script-fu.c: gimp_data_directory() is const now.

2001-02-13 Nathan Summers <rock@gimp.org>

	* configure.in
	* plug-ins/plugin-helper/*: prototype for an extension that allows
	gmodules as plugins.  Known bug: crashes on gmodules with a static
	"query" function
        
	* app/tools/tool.c 
	* app/tools/tool.h: created new GimpTool object.  Did away with
	ToolInfo.  Most tools still need to be ported over to the new api.

        * app/tools/tools.c: now contains the initialization function to
	register the tools with the Gimp

        * app/tools/tools.h: renamed to tool.h

	* app/Makefile.am 
	* app/app_procs.c
        * app/apptypes.h 
	* app/commands.c 
	* app/context_manager.c
        * app/cursorutil.c 
	* app/devices.c 
	* app/devices.h
        * app/disp_callbacks.c 
	* app/draw_core.c 
	* app/draw_core.h
        * app/gdisplay.c 
	* app/gimage.c 
	* app/gimage_mask.c
        * app/gimpcontext.c 
	* app/gimpcontext.h 
        * app/global_edit.c 
	* app/info_window.c 
	* app/interface.c
        * app/libgimp_glue.c 
	* app/menus.c 
	* app/paint_core.h
        * app/paint_options.h 
	* app/scale.c 
	* app/scroll.c 
	* app/toolbox.c
	* app/undo.c 
	* app/tools/Makefile.am
        * app/tools/color_picker.c 
	* app/tools/color_picker.h
        * app/tools/paint_core.c 
	* app/tools/tool_options.c
        * app/tools/tool_options.h 
	* app/tools/tool_options_dialog.c
	* libgimp/gimp.c 
	* plug-ins/Makefile.am: changed acordingly

        * plug-ins/script-fu/script-fu-scripts.c: fixed typo in comment.
	Pathetic, huh?

2001-02-14  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* po/POTFILES.in
	* app/brushes.[ch]
	* app/gradients.[ch]
	* app/palettes.[ch]
	* app/patterns.[ch]: removed.

	* app/gimpdatafactory.[ch]: completely manage the data lists,
	including loading with different callbacks per extension.

	* app/gimpdatafactoryview.[ch]: enabled "new", "edit", "delete"
	and "refresh".

	* app/context_manager.c: initisalize the data factories.

	* app/gimpcontext.c: fixed some bad bugs introduced yesterday.

	* app/gradient_editor.[ch]: removed the public "create" function
	and create the editor implicitly on "set_gradient"

	* app/app_procs.c
	* app/apptypes.h
	* app/brush_edit.h
	* app/brush_select.c
	* app/commands.c
	* app/convert.c
	* app/devices.c
	* app/gimpbrushpipe.c
	* app/gimpcontainerview.h
	* app/gimpgradient.c
	* app/gimppattern.c
	* app/gradient_select.c
	* app/palette.c
	* app/pattern_select.c
	* app/pdb/brush_select_cmds.c
	* app/pdb/brushes_cmds.c
	* app/pdb/convert_cmds.c
	* app/pdb/gradient_select_cmds.c
	* app/pdb/gradients_cmds.c
	* app/pdb/palette_cmds.c
	* app/pdb/pattern_select_cmds.c
	* app/pdb/patterns_cmds.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb
	* tools/pdbgen/pdb/palette.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb: um, much stuff, mostly "changed
	accordingly" ;-)

2001-02-13  Michael Natterer  <mitch@gimp.org>

	* gimprc.in
	* user_install
	* user_install.bat
	* app/gimprc.[ch]
	* app/preferences_dialog.c: removed the "brush_vbr_path" variable,
	because all data types will be editable and saveable soon.

	* app/Makefile.am
	* app/apptypes.h
	* app/gimpdatafactory.[ch]: new object which holds a data list and
	knows how to create, edit, duplicate etc. the items in it. Will
	completely replace the brushes.[ch], patterns.[ch], ... files soon.

	* po/POTFILES.in
	* app/gimpdatacontainerview.[ch]: removed.
	* app/gimpdatafactoryview.[ch]: added.

	A view on the GimpDataFactory with a GUI for creating, editing,
	deleting etc. items (mostly unimplemented).

	* app/context_manager.[ch]: replaced the global data lists by global
	data factories.

	* app/brush_select.c
	* app/brushes.[ch]
	* app/commands.c
	* app/convert.c
	* app/devices.c
	* app/gimpbrush.[ch]
	* app/gimpbrushgenerated.c
	* app/gimpcontext.c
	* app/gimpdata.[ch]
	* app/gimpdatalist.[ch]
	* app/gimpdnd.c
	* app/gimpgradient.[ch]
	* app/gimppalette.[ch]
	* app/gimppattern.[ch]
	* app/gradient_editor.c
	* app/gradient_select.c
	* app/gradients.[ch]
	* app/indicator_area.c
	* app/palette.c
	* app/palette_import.c
	* app/palette_select.c
	* app/palettes.[ch]
	* app/pattern_select.c
	* app/patterns.[ch]
	* app/pdb/brush_select_cmds.c
	* app/pdb/brushes_cmds.c
	* app/pdb/convert_cmds.c
	* app/pdb/gradient_select_cmds.c
	* app/pdb/gradients_cmds.c
	* app/pdb/pattern_select_cmds.c
	* app/pdb/patterns_cmds.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb: changed accordingly.

2001-02-13  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* po/POTFILES.in
	* app/gimpdatacontainerview.[ch]: new widget which will replace the
	current brush, pattern, ... selections. To really use it, there
	needs to be a GimpDataFactory object (coming soon...)

	* app/commands.[ch]
	* app/menus.c: added test data container views.

	* app/paint_funcs_simd.S: #include the implementation with "", not <>

2001-02-13  Seth Burgess  <sjburges@gimp.org>

	* plug-ins/perl/Gimp/Lib.xs : made perl compilable again.  Didn't
	change to turn back on by default.
	
2001-02-13  Sven Neumann  <sven@gimp.org>

	* Makefile.am
	* configure.in
	* cursors/Makefile.am
	* docs/Makefile.am
	* pixmaps/Makefile.am: added Makefiles to cursors, docs and pixmaps
	directories

2001-02-13  Sven Neumann  <sven@gimp.org>

	* Makefile.am
	* pixmaps/refresh.xpm: new icon

2001-02-13  Michael Natterer  <mitch@gimp.org>

	* app/gradient_editor.[ch]
	* app/gradient_select.[ch]: use GimpContainerListView instead of
	cooking an own list.

	* app/gimpgradient.[ch]: removed the GdkPixmap from the gradient.

	* app/gimpcontainerlistview.c: connect the viewable's "name_changed"
	signal to the label.

	* app/gimpmarshal.[ch]
	* app/gimppreview.[ch]: new virtual function "get_size",

	* app/gimpgradientpreview.c: implement "get_size" and return a 3:1
	aspect ratio.

	* app/gradients.c
	* app/palette_select.[ch]
	* app/palettes.c: removed the dialog freeze/thaw functions.

	* app/brush_select.c
	* app/pattern_select.c
	* app/plug_in.c: stuff.

2001-02-12  Michael Natterer  <mitch@gimp.org>

	* app/brush_select.[ch]
	* app/pattern_select.[ch]: removed almost all code by using
	the GimpContainerGridView.

	* app/brushes.c
	* app/patterns.c: brush|pattern_select_freeze|thaw_all() don't
	exist any more.

	* app/devices.c: made it work again.

	* app/gimpgradientpreview.c: the gradient popup is 128 x 32 again.

	* app/plug_in.c: follow the brush and pattern dialog function
	renaming.

	* app/gimppalette.[ch]
	* app/gimppalettepreview.c: added a "Columns" attribute and show
	the popups accordingly.

	The palette file format has changed again. It now can have an
	optional "Columns: <n>" line after the palette's name.

	* data/palettes/Bgold.gpl
	* data/palettes/Borders.gpl
	* data/palettes/Cascade.gpl
	* data/palettes/China.gpl
	* data/palettes/Coldfire.gpl
	* data/palettes/Dark_pastels.gpl
	* data/palettes/Ega.gpl
	* data/palettes/Gold.gpl
	* data/palettes/Grayblue.gpl
	* data/palettes/Hilite.gpl
	* data/palettes/Kahki.gpl
	* data/palettes/Named_Colors.gpl
	* data/palettes/News3.gpl
	* data/palettes/Op2.gpl
	* data/palettes/Plasma.gpl
	* data/palettes/Visibone.gpl
	* data/palettes/Visibone_2.gpl
	* data/palettes/Web.gpl: added the "Columns" parameter where it
	makes sense and removed those ugly black colors which were hanging
	around as first color of many palettes.

2001-02-12  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am: took gimpcontextpreview.[ch] out of the build
	but still left the sources there as reference.

	* app/app_procs.c: initialize the render stuff before creating the
	toolbox (needed for the previews).

	* app/devices.c
	* app/indicator_area.c: use GimpPreviews instead of
	GimpContextPreviews.

	* app/context_manager.[ch]: create the global data lists here
	because they now must exist before any context is created.

	* app/brushes.[ch]
	* app/gradients.[ch]
	* app/palettes.[ch]
	* app/patterns.[ch]: removed them here.

	* app/gimpcontainer.[ch]: added a "freeze_count" and emit the
	"freeze" and "thaw" signals accordingly.

	* app/gimpcontext.[ch]: greatly simplified the way how the
	contexts connect to the data lists (simply keep them connected all
	the time). Also removed all those ugly explicit update functions
	because "thaw" callbacks do this job now.

	* app/gimpdata.c: a GimpData object now becomes dirty on
	"name_changed"; "dirty" now triggers "invalidate_preview" because
	the context does not dispatch these signals any more soon.

	* app/brush_select.c
	* app/convert.c
	* app/gimpdnd.c
	* app/gradient_editor.c
	* app/gradient_select.c
	* app/pattern_select.c
	* app/gradient_editor.c
	* app/gradient_select.c
	* app/gradients.[ch]
	* app/pdb/brush_select_cmds.c
	* app/pdb/brushes_cmds.c
	* app/pdb/convert_cmds.c
	* app/pdb/gradient_select_cmds.c
	* app/pdb/gradients_cmds.c
	* app/pdb/pattern_select_cmds.c
	* app/pdb/patterns_cmds.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb: changed accordingly.

2001-02-11  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h: added the datafile loader_func typedefs.

	* app/datafiles.h: removed from here.

	* app/gimpcontainer.[ch]: emit "freeze" and "thaw" signals to get
	rid of those blah_select_[freeze|thaw]_all() stuff.

	* app/gimpdatalist.[ch]: new function gimp_data_list_load() which
	takes a va_list of GimpDataObjectLoaderFuncs and file extensions
	and is almost a replacement for the four files below.

	* app/brushes.c
	* app/gradients.c
	* app/palettes.c
	* app/patterns.c: very simple now. It may be worth thinking about
	making all GimpData subclasses managed by a descriptive array in
	the context_manager.

2001-02-11  Michael Natterer  <mitch@gimp.org>

	Made a GimpContainer out of the palette list:

	* app/Makefile.am
	* app/palettes.[ch]: new files for the global palette list.

	* app/gimpgradientpreview.[ch]
	* app/gimppalettepreview.[ch]: new widgets.

	* app/gimppalette.[ch]: derive it from GimpData to get all the
	preview etc. stuff.

	* app/datafiles.[ch]: new function datafiles_check_extension(),
	added a "loader_data" parameter to datafiles_read_directories()
	and pass it to the loader function.

	* app/gimpcontext.[ch]: added the palette (not really used yet
	except by the test dialogs).

	* app/gimpdatalist.[ch]: new function gimp_data_list_save_and_clear()
	which does everything needed for patterns_free(), brushes_free() ...

	* app/gimpdnd.c: added palette DND.

	* app/app_procs.c
	* app/brushes.c
	* app/color_notebook.h
	* app/commands.c
	* app/convert.c
	* app/gimpbrush.h
	* app/gimpbrushpipe.h
	* app/gimpgradient.c
	* app/gimppattern.h
	* app/gimppreview.c
	* app/gradients.c
	* app/module_db.c
	* app/palette.[ch]
	* app/paletteP.h
	* app/palette_import.c
	* app/palette_select.[ch]
	* app/patterns.c
	* app/plug_in.c
	* app/pdb/convert_cmds.c
	* app/pdb/palette_cmds.c
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/palette.pdb: lotsa stuff: changed due to the above
	API changes, #define the file extensions in the GimpData subclasses'
	header files instead of hardcoding them in several places, ...

	* data/palettes/*: The same file format change as for the gradient
	files:

	- Save the palette name in a parsable form (as part of the file
	  format, not in a comment.
	- Removed unserscores from the palette names.
	- Added an extension (Gimp PaLettes are ".gpl" files now ;-)

2001-02-11  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h
	* app/gimpdata.[ch]: new abstract base class for everything
	(except images) which has a filename and can become dirty and must
	be saved.

	* app/gimpbrush.[ch]
	* app/gimpgradient.[ch]
	* app/gimppattern.[ch]: all derived from GimpData now.

	* app/gimpbrushgenerated.[ch]
	* app/brush_select.c
	* app/brushes.c
	* app/gimpbrushpipe.c
	* app/gradient_editor.c
	* app/gradients.c
	* app/patterns.c: removed lots of code duplication due to common
	file save magic.

	The gradient file format has changed: it now contains the
	gradient's name (no more ugly underscores). The files have the
	extension ".ggr".

	* app/gimpgradient.[ch]: save new gradients, load new and old
	gradients.

	* data/gradients/*: removed all old gradients and added the new
	ones.

2001-02-10  David Monniaux  <monniaux@genievre.ens.fr>

	MMX code for paint_funcs. Very partial so far.
	* acconfig.h
	* configure.in: detection of MMX-able assembler and compiler
	* app/Makefile.am
	* app/main.c: detects MMX and acts accordingly
	* app/paint_funcs.c
	* app/paint_funcs_simd.S: #include's appropriate file
	* app/arch/i386/mmx/paint_funcs_mmx.S
	* app/arch/i386/mmx/paint_funcs_mmx.S.m4

2001-02-10  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gradient.[ch]: renamed...

	* app/gradient_editor.[ch]: ...to this

	* app/gradient_select.c: changed #include

	* po/POTFILES.in: renamed the file here too

2001-02-10  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gradientP.h
	* app/gradient_header.h: removed.

	* app/gimpgradient.[ch]: new object -- bye bye "gradient_t"

	* app/gradients.[ch]: new files for managing the gradient list.

	* app/gradient.[ch]: contains only the gradient editor now (which
	still badly pokes around in the GimpGradient structure).

	* app/app_procs.c
	* app/apptypes.h
	* app/devices.c
	* app/gimpcontainerlistview.c
	* app/gimpcontext.[ch]
	* app/gimpcontextpreview.[ch]
	* app/gimpdnd.[ch]
	* app/gradient_select.[ch]
	* app/indicator_area.c
	* app/palette_import.c
	* app/pdb/gradient_select_cmds.c
	* app/pdb/gradients_cmds.c
	* app/tools/airbrush.c
	* app/tools/blend.c
	* app/tools/paint_core.c
	* app/tools/paintbrush.c
	* app/tools/pencil.c
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb: changed accordingly, some
	changes to the preview and view stuff.

	* app/gimppreview.[ch]: removed the "context" attribute again
	because it was overkill (a simple gtk_signal_connect_object does
	the same as doing the autoconnection magic inside the GimpPreview
	object).

	* app/commands.[ch]
	* app/menus.c: example views on the gradient container.

2001-02-09  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainergridview.[ch]
	* app/gimpcontainerlistview.[ch]
	* app/gimpcontainerview.[ch]: follow the GimpPreview API change
	and take only "size" instead of "width" and "height" in the
	constructor.

	* app/gimpdnd.[ch]: first attempt to hack GtkType based DND which
	speaks in terms of GimpViewable instead of Brush, Pattern, ...
	Added functions to remove DND callbacks (used by the multi-views).

	* app/gimppreview.[ch]: new function gimp_preview_set_size_full().

	* app/commands.c: updated the example dialogs to be DND aware.

	* app/gimpimage.c: fixed preview size calculation by ensuring a
	minimal width/height of 1 pixel.
	Reported by Dave Neary <dneary@eircom.net>

2001-02-09  Michael Natterer  <mitch@gimp.org>

	* app/gimppreview.[ch]: moved the constructor-parameter-overkill
	to the new function gimp_preview_new_full() and made the
	gimp_preview_new() interface simple.

	* app/gimpbrushpreview.c
	* app/gimppatternpreview.c: added DND support.

	* app/gimpdnd.c: use the new preview system.

	* app/gimpconstrainedhwrapbox.c: implement "size_allocate". Ok,
	this is silly -- I will write an own widget which does the
	"scrollable grid of whatever" stuff in one place...

	* app/commands.c
	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpimagepreview.c: follow the GimpPreview constructor change.

2001-02-09  Michael Natterer  <mitch@gimp.org>

	* app/commands.c: changed the test dialogs a bit.

	* app/gimpconstrainedhwrapbox.[ch]: should be called
	GimpHackedWrapBoxForContainerView now ;-)

	* app/gimpcontainergridview.[ch]
	* app/gimpcontainerlistview.[ch]: fixed the minimal size setting
	by getting the magic values from the relevan gtk widgets.
	Scroll to the active item if it not visible.

2001-02-08  Michael Natterer  <mitch@gimp.org>

	* app/gimppreview.[ch]: added an (unused) "context" argument
	and a "set_viewable" function.

	* app/gimpconstrainedhwrapbox.c: even more evil than before.

	* app/gimpbrushpreview.c
	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpcontainerview.c
	* app/gimpimagepreview.c
	* app/gimppatternpreview.c: fixed lots of forgotten signal handlers

	* app/commands.[ch]
	* app/menus.c: added "Multi View" dialogs.

2001-02-08  Michael Natterer  <mitch@gimp.org>

	* app/gimppreview.[ch]: added a "border" attribute. The border can
	have any color (which has no sane API yet...). Added "width" and
	"height" attributes and provide a "set_size" function.

	* app/gimpbrushpreview.c
	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpimagepreview.c
	* app/gimppatternpreview.c: changed accordingly, enabled
	highlighting of the selected item in the grid views.

2001-02-07  Michael Natterer  <mitch@gimp.org>

	* app/gimppreview.[ch]: allocate less temp_bufs by removing the
	"create_preview" virtual function and adding a "render" one.

	Implementations have to call the new public function
	gimp_preview_render_and_flush() to render their temp_bufs.
	This way, e.g. the GimpPatternPreview can render the preview
	directly from the pattern's mask.

	* app/gimpdrawablepreview.c
	* app/gimpimagepreview.c
	* app/gimppatternpreview.c: changed accordingly.

	* app/gimpbrushpreview.[ch]: same as above and added BrushPipe
	popup animation.

2001-02-07  Michael Natterer  <mitch@gimp.org>

	* app/gimppreview.[ch]
	* app/gimpbrushpreview.c
	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpimagepreview.c
	* app/gimppatternpreview.c: added an "is_popup" parameter to the
	preview constructor so the subclasses can decide if to do special
	stuff like pipe animation.

2001-02-07  Daniel Egger  <egger@suse.de>

	* configure.in: Changed link order in gtkxmhtml check
	to fix bug #12653.

2001-02-07  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontext.[ch]: added "set_by_type", "get_by_type" and
	"changed_by_type" methods which take a GtkType and decide from
	that if to manipulate the Brush, Pattern etc.

	* app/gimpcontainerview.[ch]
	* app/gimpcontainergridview.[ch]
	* app/gimpcontainerlistview.[ch]: added a GimpContext to the views
	which is used to manage the active item.

	* app/commands.c: pass the user_context to the test views.

	* app/gimpbrushpreview.c
	* app/gimppatternpreview.c
	* app/gimppreview.[ch]: added a virtual "needs_popup" method which
	returns a boolean indicating if the viewable is already fully
	visible.

	* app/gimage.[ch]: removed gimage_foreach() and some other
	functions which can easily be done by gimp_container_foreach().
	Removed gimage_delete().

	* app/fileops.c
	* app/gdisplay.c
	* app/lc_dialog.c
	* app/nav_window.c
	* app/palette_import.c
	* app/preferences_dialog.c
	* app/xcf.c
	* app/pdb/image_cmds.c
	* tools/pdbgen/pdb/image.pdb: changed accordingly. Switched from
	"disp_count" refcounting to real GtkObject refcounting for
	GimpImages.

2001-02-07  Michael Natterer  <mitch@gimp.org>

	* app/gimpbrush.[ch]
	* app/gimpbrushpreview.c: moved the scale and pipe indicator
	rendering code from GimpBrush to GimpBrushPreview.
	Removed the "dirty" signal from GimpBrush and use
	"invalidate_preview" of the GimpViewable class.

	* app/brush_edit.c
	* app/brush_select.c
	* app/gimpbrushgenerated.c
	* app/gimpcontext.c
	* app/gimpcontextpreview.c
	* app/tools/paint_core.c: changed accordingly.

2001-02-07  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpimagepreview.[ch]: new object with own implementations
	of "create_preview" and "create_popup".

	* app/gimpdrawablepreview.c: stuff... still unused.

	* app/gimppreview.c: fixed idle rendering crashes, don't
	forget popups on GDK_2BUTTON_PRESS.

	* app/app_procs.c: gimpbrushlist.h doesn't exist any more.

	* app/gimpobject.h: removed the GimpObject typedef because it
	is in apptypes.h

2001-02-07  Hans Breuer <Hans@Breuer.org>

	* */makefile.msc : Gimp 1.3 for win32 (msc) builds and runs at 
	this short moment, it's a fast moving target nowadays :-)

	* app/app_procs.c
	* app/gimpbrush.c
	* app/gimpbrushpipe.c
	* app/gimppattern.c : make sure G_OS_WIN32 is defined (by glib.h 
	inclusion) before actually using it

	* app/plug_in.h 
	* app/datafiles.h : <time.h> for time_t

	* app/tile_swap.c : include <stdio.h> for SEEK_SET

	* app/gimpcontainer.c : use G_GNUC_FUNCTION instead of 
	__FUNCTION__ to allow compiling without gcc

	* app/dialog_handler.h : don't use conditional prototypes
	for gmodule exported function but include <gmodule.h> and
	use G_MODULE_EXPORT in prototype, too.

	* app/gimpobject.h : added typedef for GimpObject

	* libgimp/gimp.def : more exported symbols

	* libgimp/gimpcolorselector.h : #include <gmodule.h> for
	G_MODULE_EXPORT,  sane prototypes.

	* libgimp/gimpui.def : symbol export update, splitted to
	gimpwidgets.def

	* libgimpcolor/gimpcolor.def
	* libgimpmath/gimpmath.def
	* libgimpwidgets/gimpwidgets.def : updated

	* libgimpwidgets/libgimp-glue.c : new file which supports
	real dynamic linking on win32, against exported symbols from
	the application or libgimp. This allows to resolve the
	double dependency for currently 11 functions

2001-02-07  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpdrawable-preview.[ch]: new files formerly known as
	gimpdrawablepreview.[ch].

	This a new naming scheme for methods of objects which live outside
	their object's file. The old name implied a derived object (and
	is in fact now taken by a GimpPreview subclass, see below).

	Further candidates for renaming are e.g. gimpdrawable-invert.[ch],
	gimpimage-convert.[ch] etc.  Finaly, the main objects (image,
	drawable) will go to their own directories together with their
	subclasses.

	* app/apptypes.h: added typedefs for the new objects:

	* app/gimpbrushpreview.[ch]
	* app/gimppatternpreview.[ch]: new subclasses of GimpPreview.

	* app/gimpdrawablepreview.[ch]: contains a subclass of GimpPreview
	now.

	* app/gimpviewable.[ch]: renamed the virtual functions to
	"get_preview" and "get_new_preview" to avoid confusion with the
	new GimpPreview subclasses.

	* app/gimppreview.[ch]: virtualized "create_preview" and
	"create_popup".

	* app/gimpmarshal.[ch]: new marsaller for GimpPreview.

	* app/channels_dialog.c
	* app/fileops.c
	* app/gimpbrush.c
	* app/gimpdnd.c
	* app/gimpdrawable.c
	* app/gimpimage.c
	* app/gimppattern.c
	* app/layer_select.c
	* app/layers_dialog.c
	* app/lc_dialog.c
	* app/nav_window.c
	* app/palette_import.c
	* app/undo_history.c
	* app/pdb/drawable_cmds.c
	* app/pdb/image_cmds.c
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/image.pdb: changed accordingly.

2001-02-06  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainergridview.[ch]
	* app/gimpcontainerlistview.[ch]: added "min_items_x" and
	"min_items_y" parameters to the constructors.

	* app/gimppreview.[ch]: added event handling for "click" and
	"popup", show a dummy popup for testing.

	* app/commands.c: changed accordingly.

	* app/menus.c: added a separator and removed N_() from the test stuff.

2001-02-06  Simon Budig  <simon@gimp.org>

        * libgimpwidgets/gimpdialog.c

	fixed the documentation.

2001-02-06  Simon Budig  <simon@gimp.org>

	* libgimpwidgets/gimpdialog.c
	* app/tools/tool_options_dialog.c

	Implemented a way to connect the delete-event of a gimpdialog
	without adding an extra button. If you pass "_delete_event_"
	as button text (untranslated) the button will not be created.
	
	Removed the tool-options "Close" button. Lots of other Close-Buttons
	wait for their removal.

2001-02-06  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpconstrainedhwrapbox.[ch]: A bad hack on top of another
	hack: The GtkHWrapBox "size_request" method _always_ wants a
	maximal requisition height, which it of course gets from a
	container like the scrolled window, yielding in wrong vscrollbar
	calculation.

	* app/gimpbrush.c: create a nice preview with scale and pipe
	indicators.

	* app/gimpcontainergridview.[ch]: use the GimpConstrainedHWrapBox.

	* app/commands.c
	* app/gimpcontainerlistview.c
	* app/gimppreview.c: cleanup, fixed a crash in the preview idle
	rendering function.

2001-02-06  Sven Neumann  <sven@gimp.org>

	* data/brushes/hsparks.gih
	* data/brushes/vine.gih: seems we had forgotten to convert these
	to the new format.

2001-02-05  Jay Cox  <jaycox@gimp.org>

	* app/gimphistogram.c: Applied patches by Roel Schroeven
	<rschroev@yahoo.com> that fix histogram with mask calculation bug and
	median calculation bug.

2001-02-06  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainergridview.[ch]: add the spacing between the
	previews here instead of expecting an already bordered preview.
	Set the widget background to white.

	* app/gimppattern.c: removed the white border hack.

2001-02-06  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainergridview.[ch]
	* app/gimpcontainerlistview.[ch]
	* app/gimpcontainerview.[ch]: implemented "set_preview_size".

	* app/commands.c: added a preview size slider to the test dialogs.

2001-02-05  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpcontainergridview.[ch]: new widget providing a grid view
	in the style of the current brush and pattern selections.

	* app/gimpcontainerlistview.[ch]
	* app/gimppreview.[ch]: the constructors take "width" and "height"
	parameters now.

	* app/gimpviewable.c: if the viewable is not able to generate
	a static (cached) preview, create a new one and cache it ourselves.

	* app/gimppattern.c: produce a nice preview.

	* app/temp_buf.[ch]: changed temp_buf_copy_area() to take a
	destination offset instead of a border parameter. This function
	was not used at all before.

	* app/commands.[ch]
	* app/menus.c: test dialogs for the grid view.

2001-02-05  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainerlistview.[ch]
	* app/gimpcontainerview.[ch]
	* app/gimpmarshal.[ch]: moved the signal connecting stuff to the
	GimpContainerViewClass which has virtual functions for insert,
	remove and clear now which are implemented by the
	GimpContainerListViewClass.

2001-02-05  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainer.[ch]
	* app/gimplist.[ch]: made the "get_by_name" and the "by_index"
	access functions methods of the GimpContainerClass. The semantic
	of this index is somewhat unclear if we have e.g. a hash table
	implementation but the container needs to have an order for the
	ContainerView. Finally, the ordering will be a feature of the
	ContainerView.

	* app/gimpmarshal.[ch]: marshallers needed for the new methods.

	* app/brushes.[ch]
	* app/patterns.[ch]: the public global brush and pattern lists
	are GimpContainers now (they are really GimpLists of course).

	* app/brush_select.c
	* app/devices.c
	* app/gimpcontainerlistview.c
	* app/gimpcontext.c
	* app/gimpdnd.c
	* app/pattern_select.c
	* app/pdb/brush_select_cmds.c
	* app/pdb/brushes_cmds.c
	* app/pdb/pattern_select_cmds.c
	* app/pdb/patterns_cmds.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb: changed accordingly.

2001-02-05  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h: some new files and data types:

	* app/gimppreview.[ch]: new widgets which provides a view
	of a GimpViewable.

	* app/gimpcontainerview.[ch]: new abstract widget base class for
	views of GimpContainers of GimpViewables

	* app/gimpcontainerlistview.[ch]: (still) simple implementation of
	a list view of the container.

	* app/gimpbrush.[ch]
	* app/gimppattern.[ch]: provide dumb implementations of the
	GimpViewable's "preview" method.

	* app/image_render.c: quick bad hack to enable preview sizes which
	are != "preview_size": Always allocate data chunks for previews up
	to 256 pixels width.

	* app/drawable.c: emit the "incalidate_preview" signal from
	drawable_update(). This may cause useless updates at the moment
	but as we want to move from explicit updates to signal-driven
	model-view stuff it's the right thing (TM).

	* app/commands.[ch]
	* app/interface.c
	* app/menus.c: Added a "Test dialogs" menu to the Toolbox.

	* app/pdb/image_cmds.c
	* libgimp/gimpenums.h
	* plug-ins/script-fu/script-fu-constants.c
	* tools/pdbgen/enums.pl: propagated the new alpha channel stuff
	to the autogenerated files.

2001-02-05  Nick Lamb  <njl195@zepler.org.uk>

	* app/channels_dialog.c
	* app/gimpimage.c
	* app/gimpimage.h: Initial commit of "Alpha" transparency channel

2001-02-04  Nick Lamb  <njl195@zepler.org.uk>

	* app/patterns.c: Missing <string.h> again

2001-02-04  Nick Lamb  <njl195@zepler.org.uk>

	* app/brushes.c: New file == new missing includes! <string.h>

2001-02-04  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h
	* app/gimpviewable.[ch]: new object. Everything that can have a
	preview will be a GimpViewable. The virtual functions are
	"invalidate_preview", "preview" and "preview_new".

	* app/gimpmarshal.[ch]: new marshaller needed for the viewable.

	* app/gimpdrawable.[ch]
	* app/gimpimage.[ch]: derived from GimpViewable. Removed the
	preview stuff from the public interface.

	Made a single boolean out of GimpImage's "comp_preview_valid"
	array because we have only one composite preview.

	* app/gimplayer.c: made the preview stuff private.

	* app/gimppreviewcache.[ch]: removed gimp_preview_scale()...

	* app/temp_buf.[ch]: ...and added it as temp_buf_scale() here.

	* app/gimpdrawablepreview.[ch]: is a private method of
	GimpDrawable now.

	* app/channels_dialog.c
	* app/convert.c
	* app/drawable.c
	* app/fileops.c
	* app/floating_sel.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimpchannel.c
	* app/gimpcontainer.c
	* app/gimpdnd.c
	* app/layer_select.c
	* app/layers_dialog.c
	* app/lc_dialog.c
	* app/nav_window.c
	* app/palette_import.c
	* app/undo.c
	* app/undo_history.c
	* app/pdb/drawable_cmds.c
	* app/pdb/image_cmds.c
	* app/tools/crop.c
	* app/tools/edit_selection.c
	* app/tools/ink.c
	* app/tools/paint_core.c
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/image.pdb
	* po/POTFILES.in: changed accordingly.

2001-02-04  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimppattern.[ch]: new object.

	* app/apptypes.h: added GimpPattern, removed GPattern.

	* app/patterns.[ch]: contains only the "patterns_()" functions for
	the global pattern list, s/pattern_list/global_pattern_list/g

	* app/brushes.[ch]: s/brush_list/global_brush_list/g

	* app/pattern_select.[ch]
	* app/gimpcontext.[ch]: connect to the Patterns' and the pattern
	list's signals.

	* app/brush_select.[ch]
	* app/devices.c
	* app/disp_callbacks.[ch]
	* app/gimpbrush.c
	* app/gimpbrushgenerated.[ch]
	* app/gimpcontextpreview.[ch]
	* app/gimpdnd.[ch]
	* app/indicator_area.c
	* app/pdb/brush_select_cmds.c
	* app/pdb/brushes_cmds.c
	* app/pdb/pattern_select_cmds.c
	* app/pdb/patterns_cmds.c
	* app/tools/bucket_fill.c
	* app/tools/clone.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb
	* po/POTFILES.in: changed accordingly.

2001-02-04  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainer.[ch]: renamed gimp_container_lookup() back
	to gimp_container_have(). Virtualized the "add", "remove",
	"have" and "foreach" methods and removed the "children" list.

	* app/gimplist.[ch]: derived from GimpContainer now.

	* app/Makefile.am
	* app/gimpdatalist.[ch]: new object: an alphabetically sorted
	GimpList with unique names.

	* app/gimpbrushlist.[ch]: removed. It's job is done by the
	GimpDataList now.

	* app/brushes.[ch]: new files. Contains the "brushes_()" functions
	for the global brush list.

	* app/app_procs.c
	* app/apptypes.h
	* app/brush_select.[ch]
	* app/colormap_dialog.[ch]
	* app/context_manager.c
	* app/devices.c
	* app/gimpbrush.c
	* app/gimpcontext.c
	* app/gimpdnd.c
	* app/info_window.c
	* app/lc_dialog.c
	* app/module_db.c
	* app/nav_window.c
	* app/pdb/brush_select_cmds.c
	* app/pdb/brushes_cmds.c
	* app/tools/by_color_select.c
	* app/tools/paintbrush.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* po/POTFILES.in: changed accordingly.

2001-02-04  Nick Lamb  <njl195@zepler.org.uk>

	* app/gimpdrawablepreview.c: add <stdlib.h> or <string.h> where needed
	* app/gimpobject.c
	* app/gimpui.c
	* app/image_new.c
	* app/layers_dialog.c
	* app/paint_funcs.c
	* app/palette.c
	* app/palette_import.c
	* app/palette_select.c
	* app/tile_manager.c
	* app/toolbox.c
	* app/user_install.c
	* app/tools/by_color_select.c
	* app/tools/curves.c
	* app/tools/measure.c
	* app/tools/shear_tool.c

2001-02-03  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpset.[ch]: removed.

	* app/gimpcontainer.[ch]: some minor fixes, cleanup.

	* app/context_manager.[ch]: made the "image_context" a GimpContainer
	and moved it here...

	* app/appenv.h
	* app/main.c: ...from here.

	* app/app_procs.c
	* app/colormap_dialog.[ch]
	* app/commands.c
	* app/gimage.c
	* app/gimpcontext.c
	* app/gimpimage.c
	* app/info_window.c
	* app/lc_dialog.c
	* app/lut_funcs.c
	* app/module_db.c
	* app/nav_window.c
	* app/palette_import.c
	* app/paths_dialog.c
	* app/pixel_region.c
	* app/scale.c
	* app/scroll.c
	* app/selection.c
	* app/temp_buf.c
	* app/undo.c
	* app/pdb/procedural_db.c
	* app/tools/by_color_select.c
	* app/tools/clone.c
	* app/tools/color_balance.c
	* app/tools/color_picker.c
	* app/tools/convolve.c
	* app/tools/crop.c
	* app/tools/curves.c
	* app/tools/paint_core.c
	* app/tools/transform_core.c: s/GimpSet/GimpContainer/g, removed
	many useless #include "appenv.h".

	* app/gimpdrawablepreview.c
	* app/gdisplay.c: found two badly crashing bugs i have introduced
	with my last changes here.

2001-02-03  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h

	* app/gimpcontainer.[ch]: new (yet unused and untested) object
	which will replace GimpSet, GimpList and GimpBrushList and be the
	container and signal proxy for all collections of GimpObjects.

2001-02-02  Michael Natterer  <mitch@gimp.org>

	* po/POTFILES.in: forgot to rename the files here.

2001-02-01  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpchannel.[ch]
	* app/gimplayer.[ch]: new files moved here by Yosh.

	* app/channel.[ch]
	* app/layer.[ch]: removed.

	* app/gdisplay.c: cleanup stuff.

	* app/[lotsa files].c
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/floating_sel.pdb
	* tools/pdbgen/pdb/layer.pdb: changed includes accordingly.

2001-01-31  Seth Burgess <sjburges@gimp.org>
	
	* plug-ins/perl/po/POTFILES.in : removed bilb/lib/Gimp.pm from list,
	as this is a file generated during the build!!

2001-01-30  Michael Natterer  <mitch@gimp.org>

	* app/image_render.[ch]: prefixed all global variables with
	"render_" (we had a global variable named "temp_buf", brrrr),
	general cleanup.

	* app/colormap_dialog.c
	* app/layers_dialog.c: changed accordingly.

2001-01-29  Michael Natterer  <mitch@gimp.org>

	* app/dialog_types.h: removed because it was unused.

	* app/Makefile.am: removed dialog_types.h, reordered the file list
	to group together what may go to "pixmaps", "widgets" and
	"lowlevel" (???) directories.

2001-01-29  Michael Natterer  <mitch@gimp.org>

	* app/channel.[ch]: removed channel_update() because channel.c
	should not call gdisplays_update(). Use drawable_update() and
	a subsequent gdisplays_update() instead.

	* app/qmask.c: do as described above.

	* app/channel_ops.c
	* app/channels_dialog.c
	* app/commands.c
	* app/convert.c
	* app/disp_callbacks.c
	* app/equalize.c
	* app/fileops.c
	* app/floating_sel.c
	* app/gdisplay.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimpdnd.c
	* app/gimpdrawablepreview.c
	* app/gimphistogram.c
	* app/gimplayermask.c
	* app/global_edit.c
	* app/histogramwidget.c
	* app/histogramwidget.h
	* app/image_map.c
	* app/image_new.c
	* app/invert.c
	* app/layer.c
	* app/layer_select.c
	* app/paths_dialog.c
	* app/plug_in.c
	* app/scan_convert.c
	* app/undo_history.c
	* app/xcf.c: include gimpdrawable.h instead of drawable.h where
	possible, removed useless includes, minor other cleanups.

2001-01-29  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpdrawablepreview.[ch]: new file with one set of functions...

	* app/channel.[ch]
	* app/layer.[ch]: ...instead of having everything duplicated three
	times here.

	* app/channels_dialog.c
	* app/floating_sel.c
	* app/floating_sel.h
	* app/gimpdnd.c
	* app/gimpimage.c
	* app/layer_select.c
	* app/layers_dialog.c
	* app/selection.c
	* app/pdb/drawable_cmds.c
	* tools/pdbgen/pdb/drawable.pdb: changed accordingly, cleanup.

2001-01-29  Sven Neumann  <sven@gimp.org>

	* HACKING: defined The GIMP Hackordnung (ACHTUNG!)

2001-01-29  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/undo_history.h: new file.

	* app/apptypes.h: removed the "Channel" typedef.

	* app/channel.[ch]: renamed all functions to gimp_channel_*()

	* app/channel_ops.c
	* app/channels_dialog.c
	* app/commands.c
	* app/disp_callbacks.c
	* app/gdisplay.c
	* app/gimage_mask.[ch]
	* app/gimpdnd.c
	* app/gimphistogram.c
	* app/gimpimage.[ch]
	* app/global_edit.c
	* app/layer.c
	* app/layers_dialog.c
	* app/qmask.c
	* app/scan_convert.c
	* app/scan_convert.h
	* app/toolbox.c
	* app/undo.[ch]
	* app/undo_history.c
	* app/xcf.[ch]
	* app/pdb/channel_cmds.c
	* app/pdb/color_cmds.c
	* app/pdb/drawable_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/pdb_glue.h
	* app/pdb/selection_cmds.c
	* app/pdb/tools_cmds.c
	* app/tools/bezier_select.c
	* app/tools/bezier_selectP.h
	* app/tools/blend.c
	* app/tools/bucket_fill.c
	* app/tools/by_color_select.c
	* app/tools/crop.c
	* app/tools/ellipse_select.c
	* app/tools/free_select.c
	* app/tools/fuzzy_select.c
	* app/tools/fuzzy_select.h
	* app/tools/iscissors.c
	* app/tools/rect_select.c
	* app/tools/text_tool.c
	* app/tools/transform_core.c
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/selection.pdb
	* tools/pdbgen/pdb/tools.pdb: changed accordingly.

2001-01-29  Michael Natterer  <mitch@gimp.org>

	* app/pdb/Makefile.am
	* app/pdb/pdb_glue.h: new file which contains the stuff that makes
	PDB code generation easier but is ugly when used in the app
	(see my comment in the log below).

	Contains:
	gimp_drawable_[layer|layer_mask|channel]()
	[channel|gimp_layer]_[set|get]_[name|tattoo]()

	* app/channel.[ch]
	* app/channels_dialog.c
	* app/gimpdrawable.h
	* app/gimpimage.c
	* app/gimplayermask.h
	* app/layer.c
	* app/layer.h
	* app/toolbox.c
	* app/undo.c
	* app/xcf.c
	* app/pdb/channel_cmds.c
	* app/pdb/drawable_cmds.c
	* app/pdb/layer_cmds.c
	* app/pdb/selection_cmds.c
	* app/tools/bezier_select.c
	* app/tools/bucket_fill.c
	* app/tools/by_color_select.c
	* app/tools/ellipse_select.c
	* app/tools/free_select.c
	* app/tools/fuzzy_select.c
	* app/tools/iscissors.c
	* app/tools/rect_select.c
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/layer.pdb
	* tools/pdbgen/pdb/selection.pdb: changed accordingly.

2001-01-29  Sven Neumann  <sven@gimp.org>

	* AUTHORS
	* app/authors.h
	* app/pdb/channel_cmds.c
	* app/pdb/internal_procs.c
	* app/pdb/selection_cmds.c
	* libgimp/gimpchannel_pdb.c
	* libgimp/gimpchannel_pdb.h
	* libgimp/gimpselection_pdb.c
	* libgimp/gimpselection_pdb.h
	* tools/authorsgen/contributors
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/selection.pdb: applied a patch from Adam Spiers 
	<adam@spiers.net> which adds two new PDB functions: selection_combine 
	and channel_combine_masks.

2001-01-29  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h: removed the "Layer" typedef.

	* app/layer.[ch]: removed the defines of the old function names.

	Don't implement methods of the parent class (get_name, get_tattoo, ...)
	but define them as macros. They will go to a separate "pdb_glue.h"
	header because they are used only by the PDB to simplify code
	generation (no application file should say gimp_layer_get_tattoo()
	but always gimp_drawable_get_tatoo()).

	* app/channel.h
	* app/channel_ops.c
	* app/channels_dialog.c
	* app/commands.c
	* app/convert.c
	* app/disp_callbacks.c
	* app/floating_sel.[ch]
	* app/gdisplay.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimage_mask.h
	* app/gimpdnd.c
	* app/gimpdrawable.h
	* app/gimpimage.[ch]
	* app/gimplayermask.h
	* app/global_edit.c
	* app/image_new.c
	* app/layer_select.c
	* app/layers_dialog.c
	* app/resize.c
	* app/undo.c
	* app/xcf.[ch]
	* app/pdb/drawable_cmds.c
	* app/pdb/floating_sel_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/layer_cmds.c
	* app/tools/bucket_fill.c
	* app/tools/by_color_select.c
	* app/tools/clone.c
	* app/tools/crop.c
	* app/tools/edit_selection.c
	* app/tools/ink.c
	* app/tools/move.c
	* app/tools/paint_core.c
	* app/tools/rect_select.c
	* app/tools/text_tool.c
	* app/tools/transform_core.c
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/floating_sel.pdb
	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/layer.pdb: changed accordingly, cleanup.

2001-01-28  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimplayermask.[ch]: new files cut out of layer.[ch]. Renamed
	all functions to gimp_layes_mask_*(). removed artefacts like
	the ref/unref functions.

	* app/apptypes.h: removed the "LayerMask" typedef.

	* app/layer.[ch]: removed the layer mask stuff and renamed all
	functions to gimp_layer_*(). Added temporary typedefs for the old
	function names. The layer mask preview stuff is still there (should
	probably go to new layer_preview.{ch] files).

	* app/gimpimage.[ch]: added
	gimp_image_invalidate_[layer|channel]_previews() formerly known as
	[layer|channel]_invalidate_previews().

	* app/channel.[ch]: moved channel_layer_alpha() and 
	channel_layer_mask() here because they are methods of the Channel.

	* app/channel_ops.c
	* app/convert.c
	* app/disp_callbacks.c
	* app/fileops.c
	* app/floating_sel.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimpdnd.c
	* app/global_edit.c
	* app/layers_dialog.c
	* app/preferences_dialog.c
	* app/toolbox.c
	* app/undo.c
	* app/xcf.c
	* app/pdb/drawable_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/layer_cmds.c
	* app/tools/crop.c
	* app/tools/text_tool.c
	* app/tools/transform_core.c
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/drawable.pdb: changed accordingly, cleanup.

2001-01-26  Daniel Egger  <egger@suse.de>

	* plug-ins/common/iwarp.c: Cleaned up code and
	implemented 2 small optimisations.

2001-01-26  Daniel Egger  <egger@suse.de>

	* libgimpmath/gimpvector.c:
	* libgimpmath/gimpvector.h: Added pass-by-value functions
	to allow code simplifications and functionchaining.

Thu Jan 25 10:22:39 PST 2001 Manish Singh <yosh@gimp.org>

	* tools/pdbgen/pdb/channel.pdb: resurrected channel_set_color

2001-01-25  Michael Natterer  <mitch@gimp.org>

	* libgimp/Makefile.am
	* libgimp/gimp.h
	* libgimp/gimpcompat.h: removed.

	The GIMP 1.0 API is not supported any more !!!

	* plug-ins/print/print-image-gimp.c
	* plug-ins/print/print.c
	* plug-ins/print/print_gimp.h: a quick fix for old compat cruft.
	This is temporary and will be replaced by Gimp-Print's development
	version.

	* plug-ins/xjt/xjpeg.c: use GimpRGB.

2001-01-25  Sven Neumann  <sven@gimp.org>

	* app/libgimp_glue.[ch]: cleanup

	* app/pdb/channel_cmds.c
	* app/pdb/palette_cmds.c
	* app/pdb/tools_cmds.c
	* tools/pdbgen/app.pl
	* tools/pdbgen/lib.pl
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/palette.pdb
	* tools/pdbgen/pdb/tools.pdb: fixed pdbgen code for color type. Seems
	to actually work now.

	* TODO.xml: updated

	* plug-ins/Makefile.am: disabled build of gimp-perl until it has 
	catched up with the API changes in libgimp 

2001-01-25  Sven Neumann  <sven@gimp.org>

	* libgimpwidgets/gimpwidgets.c (gimp_mem_size_entry_new): merged fix 
	from gimp-1-2 branch 

2001-01-25  Sven Neumann  <sven@gimp.org>

	* tools/pdbgen/lib.pl
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/palette.pdb
	* tools/pdbgen/pdb/tools.pdb: changed these with the help of Yosh. 
	PDB functions take GimpRGB as color type now.

	* app/plug_in.c
	* app/pdb/channel_cmds.c
	* app/pdb/internal_procs.c
	* app/pdb/palette_cmds.c
	* app/pdb/procedural_db.[ch]
	* app/pdb/tools_cmds.c
	* libgimp/gimp.[ch]
	* libgimp/gimpchannel.[ch]
	* libgimp/gimpchannel_pdb.[ch]
	* libgimp/gimppalette_pdb.[ch]
	* libgimp/gimpprotocol.[ch]
	* libgimp/gimptools_pdb.[ch]: incremented Gimp protocol version
	and changed color type from array of chars to GimpRGB.

	* libgimp/Makefile.am
	* libgimp/gimppalette.[ch]: removed these files again 

	* app/libgimp_glue.[ch]
	* libgimpwidgets/gimpcolorbutton.c
	* plug-ins/Lighting/lighting_main.c
	* plug-ins/Lighting/lighting_preview.c
	* plug-ins/MapObject/mapobject_image.c
	* plug-ins/MapObject/mapobject_main.c
	* plug-ins/MapObject/mapobject_preview.c
	* plug-ins/common/apply_lens.c
	* plug-ins/common/blinds.c
	* plug-ins/common/borderaverage.c
	* plug-ins/common/checkerboard.c
	* plug-ins/common/colorify.c
	* plug-ins/common/colortoalpha.c
	* plug-ins/common/cubism.c
	* plug-ins/common/exchange.c
	* plug-ins/common/film.c
	* plug-ins/common/gif.c
	* plug-ins/common/grid.c
	* plug-ins/common/mapcolor.c
	* plug-ins/common/mblur.c
	* plug-ins/common/nova.c
	* plug-ins/common/papertile.c
	* plug-ins/common/png.c
	* plug-ins/common/polar.c
	* plug-ins/common/psd.c
	* plug-ins/common/semiflatten.c
	* plug-ins/common/sinus.c
	* plug-ins/common/sparkle.c
	* plug-ins/common/tiff.c
	* plug-ins/common/vpropagate.c
	* plug-ins/common/warp.c
	* plug-ins/common/whirlpinch.c
	* plug-ins/gap/gap_filter_iterators.c
	* plug-ins/gap/gap_mov_dialog.c
	* plug-ins/gdyntext/gdyntext.c
	* plug-ins/gfig/gfig.c
	* plug-ins/gfli/gfli.c
	* plug-ins/ifscompose/ifscompose.c
	* plug-ins/maze/handy.c
	* plug-ins/mosaic/mosaic.c
	* plug-ins/pagecurl/pagecurl.c
	* plug-ins/script-fu/script-fu-scripts.c
	* plug-ins/script-fu/script-fu.c
	* plug-ins/xjt/xjt.c: changed accordingly. A few plug-ins need
	to be looked at more closely after this change. I tried to put 
	FIXME comments into those.

2001-01-24  Michael Natterer  <mitch@gimp.org>

	* Makefile.am
	* configure.in
	* gimptool.in: added the new library below.

	* libgimpwidgets/Makefile.am
	* libgimpwidgets/gimpchainbutton.[ch]
	* libgimpwidgets/gimpcolorarea.[ch]
	* libgimpwidgets/gimpcolorbutton.[ch]
	* libgimpwidgets/gimpdialog.[ch]
	* libgimpwidgets/gimpfileselection.[ch]
	* libgimpwidgets/gimphelpui.[ch]
	* libgimpwidgets/gimppatheditor.[ch]
	* libgimpwidgets/gimppixmap.[ch]
	* libgimpwidgets/gimpquerybox.[ch]
	* libgimpwidgets/gimpsizeentry.[ch]
	* libgimpwidgets/gimpunitmenu.[ch]
	* libgimpwidgets/gimpwidgets.[ch]
	* libgimpwidgets/gimpwidgets.def
	* libgimpwidgets/gimpwidgetstypes.h: new shared library.

	Currently there are some ugly dependencies into libgimp. These
	will be removed and go to a "libgimpglue" library which will be
	a library for functions which share a common interface between
	plug-ins and the app but have different implementations.

	Include "libgimp/gimpunit.h" from "libgimpwidgets/gimpwidgetstypes.h"
	to simulate this upcoming separation.

	* libgimp/Makefile.am
	* libgimp/gimpchainbutton.[ch]
	* libgimp/gimpcolorarea.[ch]
	* libgimp/gimpcolorbutton.[ch]
	* libgimp/gimpdialog.[ch]
	* libgimp/gimpfileselection.[ch]
	* libgimp/gimphelpui.[ch]
	* libgimp/gimppatheditor.[ch]
	* libgimp/gimppixmap.[ch]
	* libgimp/gimpquerybox.[ch]
	* libgimp/gimpsizeentry.[ch]
	* libgimp/gimpunitmenu.[ch]
	* libgimp/gimpwidgets.[ch]: removed from here.

	* libgimp/gimpui.h
	* libgimp/gimpuitypes.h
	* libgimp/makefile.mingw.in
	* libgimp/makefile.msc: changed accordingly.

	* app/[all ui files]
	* app/pdb/palette_cmds.c
	* app/pdb/tools_cmds.c
	* tools/pdbgen/pdb/palette.pdb
	* tools/pdbgen/pdb/tools.pdb: #include "libgimpwidgets/gimpwidgets.h"
	and removed useless includes.

	* app/apptypes.h: #include "libgimpwidgets/gimpwidgetstypes.h"

	* app/Makefile.am
	* plug-ins/[all makefiles which link against libgimpui]:
	link against libgimpwidgets.la

	* po-libgimp/POTFILES.in: changed file locations.

2001-01-24  Simon Budig  <simon@gimp.org>

	* plug-ins/common/colortoalpha.c: wrapped some actions in a
	gimp_undo_push_group_start/end, so you dont have to undo
	two steps when the plugin adds an alpha channel.

2001-01-24  Michael Natterer  <mitch@gimp.org>

	* libgimpwidgets/.cvsignore
	* libgimpwidgets/Makefile.am
	* libgimpwidgets/makefile.mingw.in
	* libgimpwidgets/makefile.msc: library stub. Please ignore for now :)

2001-01-24  Sven Neumann  <sven@gimp.org>

	* app/paint_funcs.c: brought the array used for optimization back in
	sync with the LayerModeEffects enum. This was causing really strange
	rendering errors. Started to clean up the file up and removed the 
	unused layer_mode names.
	
	* app/tile.[ch]
	* plug-ins/common/colortoalpha.c: small cleanups

	* po/POTFILES.in: removed app/paint_funcs.c

2001-01-24  Sven Neumann  <sven@gimp.org>

	* app/tools/airbrush.c
	* app/tools/by_color_select.c
	* app/tools/color_picker.c: include gimpcolor/gimpcolor.h

	* libgimpcolor/gimprgb.c: optimized compositing functions.
	
	* plug-ins/Lighting/lighting_preview.c
	* plug-ins/MapObject/mapobject_preview.c: use gimp_rgb_composite 
	functions instead of doing the blending manually

	* plug-ins/MapObject/map_object_shade.c: fixed a rendering bug when
	transparent_background == FALSE
	
2001-01-24  Michael Natterer  <mitch@gimp.org>

	* Makefile.am
	* configure.in
	* gimptool.in: added stuff for the new library below.

	* libgimpmath/.cvsignore
	* libgimpmath/Makefile.am
	* libgimpmath/gimpmath.def
	* libgimpmath/gimpmath.h
	* libgimpmath/gimpmathtypes.h
	* libgimpmath/gimpmatrix.c
	* libgimpmath/gimpmatrix.h
	* libgimpmath/gimpvector.c
	* libgimpmath/gimpvector.h
	* libgimpmath/makefile.mingw.in
	* libgimpmath/makefile.msc: new shared library. Depends on glib only.

	* libgimp/Makefile.am
	* libgimp/gimp.def
	* libgimp/gimp.h: removed the math stuff.

	* libgimp/gimpmath.h
	* libgimp/gimpmatrix.[ch]
	* libgimp/gimpvector.[ch]: removed.

	* app/Makefile.am
	* plug-ins/Lighting/Makefile.am
	* plug-ins/MapObject/Makefile.am
	* plug-ins/pagecurl/Makefile.am: link against libgimpmath.la

	* app/[many files]
	* libgimpcolor/gimpcolorspace.c
	* libgimpcolor/gimprgb.c
	* libgimp/gimpadaptivesupersample.c
	* libgimp/gimpbilinear.c
	* libgimp/gimpwidgets.c
	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c
	* plug-ins/libgck/gck/gckcolor.c
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/image.pdb: include "libgimpmath/gimpmath.h",
	removed the remaining includes of the old color stuff.

2001-01-23  Michael Natterer  <mitch@gimp.org>

	* Makefile.am
	* configure.in
	* gimptool.in: added stuff for the new library below.

	* libgimpcolor/.cvsignore
	* libgimpcolor/Makefile.am
	* libgimpcolor/gimpcolor.h
	* libgimpcolor/gimpcolorspace.c
	* libgimpcolor/gimpcolorspace.h
	* libgimpcolor/gimpcolortypes.h
	* libgimpcolor/gimphsv.c
	* libgimpcolor/gimphsv.h
	* libgimpcolor/gimprgb.c
	* libgimpcolor/gimprgb.h: new shared library which both the app
	and plug-ins link against. The library depends only on glib.

	* libgimpcolor/gimpcolor.def
	* libgimpcolor/makefile.mingw.in
	* libgimpcolor/makefile.msc: added Win32 build files which
	definitely don't work.

	* libgimp/Makefile.am
	* libgimp/gimpcolor.[ch]
	* libgimp/gimpcolorspace.[ch]: removed.

	* libgimp/gimp.h
	* libgimp/gimpadaptivesupersample.c
	* libgimp/gimpbilinear.c
	* libgimp/gimppalette.c
	* libgimp/gimptypes.h: include the stuff from libgimpcolor.

	Plug-Ins don't need to include <libgimpcolor/gimpcolor.h>
	explicitely. LibGimp depends on libgimpcolor and thus also includes
	it's headers.

	* libgimp/gimp.def
	* libgimp/makefile.mingw.in: fiddled around with Win32 stuff...

	* app/Makefile.am: link against libgimpcolor.la

	* app/apptypes.h: include "libgimpcolor/gimpcolortypes.h"

	* app/asupsample.c
	* app/channels_dialog.c
	* app/colormap_dialog.c
	* app/commands.c
	* app/convert.c
	* app/devices.c
	* app/disp_callbacks.c
	* app/drawable.c
	* app/gimpcontext.c
	* app/gimpdnd.c
	* app/gimpimage.c
	* app/gimppalette.c
	* app/gimprc.c
	* app/gradient.c
	* app/libgimp_glue.c
	* app/palette.c
	* app/palette_import.c
	* app/qmask.c
	* app/xcf.c
	* app/tools/paint_core.c
	* app/tools/paintbrush.c
	* app/tools/pencil.c: include "libgimpcolor/gimpcolor.h" before all
	gimp includes because it's a standalone library.

	* plug-ins/FractalExplorer/Makefile.am
	* plug-ins/Lighting/Makefile.am
	* plug-ins/MapObject/Makefile.am
	* plug-ins/bmp/Makefile.am
	* plug-ins/common/Makefile.am
	* plug-ins/common/mkgen.pl
	* plug-ins/dbbrowser/Makefile.am
	* plug-ins/faxg3/Makefile.am
	* plug-ins/fits/Makefile.am
	* plug-ins/flame/Makefile.am
	* plug-ins/fp/Makefile.am
	* plug-ins/gap/Makefile.am
	* plug-ins/gdyntext/Makefile.am
	* plug-ins/gfig/Makefile.am
	* plug-ins/gflare/Makefile.am
	* plug-ins/gfli/Makefile.am
	* plug-ins/gimpressionist/Makefile.am
	* plug-ins/helpbrowser/Makefile.am
	* plug-ins/ifscompose/Makefile.am
	* plug-ins/imagemap/Makefile.am
	* plug-ins/maze/Makefile.am
	* plug-ins/mosaic/Makefile.am
	* plug-ins/pagecurl/Makefile.am
	* plug-ins/print/Makefile.am
	* plug-ins/rcm/Makefile.am
	* plug-ins/script-fu/Makefile.am
	* plug-ins/sel2path/Makefile.am
	* plug-ins/sgi/Makefile.am
	* plug-ins/webbrowser/Makefile.am
	* plug-ins/xjt/Makefile.am: add libgimpcolor.la to LDADD.

	* INSTALL: don't recommend to --disable-shared for development.

	* TODO.xml: increased some percentages, added plug-in help stuff.

2001-01-23  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/libgimp_glue.[ch]: new files containing stuff needed for
	linking libgimp stuff against the app. This file is not needed
	at all for the app itself and should never be included.

	* app/gimpcontext.[ch]: removed from here.

	* libgimp/Makefile.am
	* libgimp/gimp.h
	* libgimp/gimppalette.[ch]: new files for the PDB wrapping
	gimp_palette_*_rgb() stuff.

	* libgimp/gimpcolor.[ch]: removed the PDB dependency from here.

2001-01-23  Sven Neumann  <sven@gimp.org>

	* app/paint_funcs.c
	* app/pixel_processor.c
	* app/tile.c
	* app/tile_cache.c
	* app/tile_manager.c
	* app/tile_pvt.h
	* app/tile_swap.[ch]: cleanups, indentation

2001-01-23  Sven Neumann  <sven@gimp.org>

	* app/convert.c
	* app/floating_sel.c
	* app/gimage_mask.c
	* app/gimpimage.c
	* app/global_edit.c
	* app/image_map.c
	* app/image_new.c
	* app/layer.c
	* app/paint_funcs.c
	* app/pixel_region.c
	* app/tile_manager.c
	* app/tile_manager.h
	* app/tile_manager_pvt.h
	* app/undo.c
	* app/xcf.c
	* app/pdb/tools_cmds.c
	* app/tools/flip_tool.c
	* app/tools/perspective_tool.c
	* app/tools/rotate_tool.c
	* app/tools/scale_tool.c
	* app/tools/shear_tool.c
	* app/tools/text_tool.c
	* app/tools/transform_core.c
	* tools/pdbgen/pdb/tools.pdb: made all files execpt xcf.c use the
	TileManager accessor functions instead of accessing the TileManager
	struct directly.

2001-01-23  Sven Neumann  <sven@gimp.org>

	* TODO.xml: updated, added sections about libgck and script-fu

2001-01-23  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/edit_selection.[ch]: removed.

	* app/tools/Makefile.am
	* app/tools/edit_selection.[ch]: added.

	* po/POTFILES.in: changed.

2001-01-23  Michael Natterer  <mitch@gimp.org>

	* libgimp/Makefile.am
	* libgimp/gimp.h
	* libgimp/gimpadaptivesupersample.[ch]
	* libgimp/gimpbilinear.[ch]: new files cut out of LibGCK.

	* plug-ins/libgck/gck/gck.h
	* plug-ins/libgck/gck/gckcolor.c: removed the bilinear and
	supersample code.

	* app/apptypes.h
	* app/asupsample.[ch]
	* app/tools/blend.c: made the adaptive_supersample interface the
	same as in libgimp but don't use the libgimp function yet.

	The libgimp function takes total transparancy into account when
	weighting the 4 resulting RGBA values, the app function always
	weights them equally. Please have a look at the code.

	* plug-ins/Lighting/lighting_image.c
	* plug-ins/MapObject/mapobject_apply.c
	* plug-ins/MapObject/mapobject_image.[ch]: changed accordingly.

	* app/disp_callbacks.c: paranoia cleanups.

2001-01-22  Sven Neumann  <sven@gimp.org>

	* app/gdisplay.c
	* app/gdisplay_ops.c
	* app/info_window.c
	* app/layer.c
	* app/menus.c
	* app/nav_window.c
	* app/path.c
	* app/scroll.[ch]: removed inclusion of superfluous headers and
	cleaned up the source a little.

2001-01-22  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/tool_options_dialog.[ch]: new files for the tool
	options dialog.

	* app/tools/tools.[ch]: removed from here.

	* app/app_procs.c
	* app/commands.c
	* app/toolbox.c
	* po/POTFILES.in: adjusted.

2001-01-22  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/selection_options.h: removed.

	* app/tools/Makefile.am
	* app/tools/selection_options.h: added.

	* app/tools/selection_options.c
	* app/tools/paint_options.c: new files cut out of tool_options.c

	* app/tools/tool_options.c: removed the paint & selection
	options code.

	* app/tools/tool_options.h
	* app/tools/paint_options.h: cleanup.

	* po/POTFILES.in: added selection_options.c and paint_options.c

2001-01-22  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/toolbox.[ch]: new files containing most of the code
	from app/interface.[ch]

	* app/interface.[ch]: only contains create_display_shell() now.
	Needs to be somehow merged with other arbitrarily named display
	files around.

	* app/app_procs.c
	* app/menus.c
	* po/POTFILES.in: changed accordingly.

	* app/asupsample.c
	* app/gradient.c
	* app/tile.c: cleanup.

2001-01-22  Sven Neumann  <sven@gimp.org>

	* configure.in
	* app/Makefile.am
	* app/tools/Makefile.am: moved all tool sources to app/tools

	* app/app_procs.c
	* app/brush_select.c
	* app/commands.c
	* app/context_manager.c
	* app/convert.c
	* app/cursorutil.c
	* app/devices.c
	* app/disp_callbacks.c
	* app/edit_selection.c
	* app/gdisplay.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimpbrush.c
	* app/gimpbrushgenerated.c
	* app/gimpbrushpipe.c
	* app/gimpdnd.c
	* app/gimprc.c
	* app/global_edit.c
	* app/info_window.c
	* app/interface.c
	* app/menus.c
	* app/path.c
	* app/paths_dialog.c
	* app/paths_dialogP.h
	* app/scale.c
	* app/scroll.c
	* app/undo.c
	* app/pdb/color_cmds.c
	* app/pdb/text_tool_cmds.c
	* app/pdb/tools_cmds.c
	* po/POTFILES.in
	* tools/kernelgen.c
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/enums.pl
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/text_tool.pdb
	* tools/pdbgen/pdb/tools.pdb: changed accordingly	

2001-01-22  Daniel Egger  <egger@suse.de>

	* libgimp/gimpcolor.c: #include "gimppalette_pdb.h"
	to shut up the compiler.

Sun Jan 21 15:23:27 PST 2001 Manish Singh <yosh@gimp.org>

	* tools/pdbgen/enumgen.pl: handle subdirs

2001-01-21  Simon Budig  <simon@gimp.org>

	* app/pdb/README: Added another warning about autogenerated files

2001-01-21  Sven Neumann  <sven@gimp.org>

	* tools/pdbgen/app.pl: changed destdir for app-side PDB wrappers to
	app/pdb

	* app/Makefile.am: don't create libgimpim.a in app.

	* configure.in
	* app/pdb/Makefile.am
	* app/pdb/internal_procs.[ch]
	* app/pdb/procedural_db.[ch]
	* app/pdb/*_cmds.c: moved PDB functions into their own subdirectory.

	* app/internal_procs.[ch]
	* app/procedural_db.[ch]
	* app/*_cmds.c: removed here

	* app/app_procs.c
	* app/batch.c
	* app/bezier_select.c
	* app/brush_select.c
	* app/bucket_fill.c
	* app/colormap_dialog.c
	* app/fileops.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimphelp.c
	* app/gradient_select.c
	* app/info_window.c
	* app/invert.c
	* app/lc_dialog.c
	* app/menus.c
	* app/nav_window.c
	* app/palette_import.c
	* app/paths_dialog.c
	* app/pattern_select.c
	* app/plug_in.h
	* app/text_tool.c
	* app/xcf.c
	* po/POTFILES.in: changed accordingly
	
2001-01-21  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/palette_import.[ch]: moved the palette_import dialog to
	it's own file.

	* app/gimage.c
	* app/palette.[ch]
	* app/paletteP.h: changed accordingly.

2001-01-21  Simon Budig  <simon@gimp.org>

	* modules/colorsel_triangle.c: Fixed the "disappearing
	triangle" bug. The triangle happens to be more triangular
	now too...   :-)

2001-01-21  Sven Neumann  <sven@gimp.org>

	* plug-ins/script-fu/Makefile.am: removed interp_md5.[ch] from
	the build because it was not used at all.

	* plug-ins/script-fu/script-fu-console.c
	* plug-ins/script-fu/script-fu-scripts.c
	* plug-ins/script-fu/script-fu-server.c
	* plug-ins/script-fu/script-fu.c: even more pedantic indentation

2001-01-21  Michael Natterer  <mitch@gimp.org>

	* app/palette_entries.h: removed.
	* app/gimppalette.[ch]: new object derived from GimpObject. Just
	used as a container at the moment (no signals or stuff used).

	* app/palette.[ch]: changed almost every line except in the
	import_dialog part.

	* app/Makefile.am
	* app/apptypes.h
	* app/convert.[ch]
	* app/gimpdnd.h
	* app/paletteP.h
	* app/palette_select.[ch]
	* app/convert_cmds.c
	* tools/pdbgen/pdb/convert.pdb: changed accordingly.

	* app/gimpdrawable.c: set klass->removed to NULL.

2001-01-21  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.[ch]: added a "title" parameter to the
	constructor. Pass a pointer to the ColorNotebook to the callback.
	Added a _get_color() function.

	* app/color_panel.[ch]: added a "title" parameter which is used
	for the notebook.

	* app/channels_dialog.c
	* app/color_area.c
	* app/colormap_dialog.c
	* app/convert.c
	* app/palette_select.c
	* app/qmask.c: changed the calls to color_notebook_new(),
	color_panel_new() and the ColorNotebook callbacks.

	* app/gradient.c: use a ColorNotebook instead of GtkColorSelection.

	* app/palette.c
	* app/palette_entries.h: use GimpRGB to store the color in the
	PaletteEntry.

	* po/POTFILES.in: added app/color_area.c

2001-01-20  Michael Natterer  <mitch@gimp.org>

	* app/gradient.[ch]: made gradient_get_color_at() use GimpRGB.

	* app/airbrush.c
	* app/blend.c
	* app/gimpcontextpreview.c
	* app/gradient_select.c
	* app/paint_core.[ch]
	* app/paintbrush.c
	* app/palette.c
	* app/pencil.c

	* app/gradients_cmds.c
	* app/gradient_select_cmds.c
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb: changed accordingly.

2001-01-20  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.[ch]
	* app/gimpcontext.[ch]
	* app/gimpdnd.h: made the _set_color() and _drop_color() functions
	take a "const GimpRGB *" parameter.

	* app/by_color_select.c
	* app/channels_dialog.c
	* app/color_area.c
	* app/color_panel.c
	* app/color_picker.c
	* app/color_select.c
	* app/colormap_dialog.c
	* app/disp_callbacks.[ch]
	* app/gimpimage.h
	* app/palette.c: changed accordingly.

	* app/gradient.c
	* app/gradientP.h
	* app/gradient_header.h: use GimpRGB internally.

2001-01-20  Michael Natterer  <mitch@gimp.org>

	* app/gimpdrawable.[ch]: made gimp_drawable_fill() use GimpRGB,
	added some "const", delete unused function, reordered some
	functions.

	* app/drawable.c
	* app/qmask.c: follow the change.

2001-01-19  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/appenums.h
	* app/apptypes.h: moved all enums from apptypes.h to the new file
	appenums.h

	* tools/pdbgen/Makefile.am
	* tools/pdbgen/app.pl
	* tools/pdbgen/enums.pl: changed accordingly. Removed some files
	from the list of files to scan for enums.

	* TODO.xml: added two minor UI issues.

2001-01-18  Sven Neumann  <sven@gimp.org>

	* plug-ins/common/gqbist.c: fixed typo, adjusted coding style

2001-01-17  Daniel Egger  <egger@suse.de>

	* PLUGIN_MAINTAINERS: Entered Jens Christian Restemeier as maintainer
	as wished.

	* plug-ins/common/gqbist.c: Applied a patch by Jens Christian 
	Restemeier <jrestemeier@currantbun.com> which fixes a calculus bug, 
	adds antialiasing and beautifies the code quite a bit.

2001-01-17  Sven Neumann  <sven@gimp.org>

	* INSTALL: adjusted version numbers, updated, added warning
	
	* configure.in: changed .gimp to .gimp-1.3

2001-01-17  Michael Natterer  <mitch@gimp.org>

	* app/gimprc.c: factored the color parsing code out to the new
	function parse_color() and made it parse RGB, RGBA, HSV and HSVA
	colors.

	* app/color_notebook.c
	* app/devices.c
	* app/session.c: changed accordingly.

2001-01-16  Sven Neumann  <sven@gimp.org>

	* app/color_notebook.c: fixed my last change

	* libgimp/gimpcolorarea.c: swapped opaque and transparent areas
	
2001-01-16  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolorspace.c: fixed RGB to HSV routine

	* app/color_notebook.c: tweaked dialog layout a little, disabled
	toggle_buttons if the colorselector does not implement the set_channel
	method.

	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c: removed empty set_channel methods

2001-01-16  Sven Neumann  <sven@gimp.org>

	* app/devices.c: don't show the alpha value of fore/background colors

2001-01-16  Michael Natterer  <mitch@gimp.org>

	* app/color_area.c
	* app/color_notebook.[ch]
	* app/color_panel.c
	* app/gimprc.c
	* app/session.c: store the color history in sessionrc.

	* app/channels_dialog.c: tweaked the "new channel" and "channel
	atributes" dialogs a bit.

Mon Jan 15 17:22:30 PST 2001 Manish Singh <yosh@gimp.org>

	* app/fileops.c: correct spelling of "lose" in revert dialog

2001-01-16  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.c: added a global color history of 16 colors.
	The "Add" button uses neither LRU nor pure right-shift order but
	something in between. The history is scheduled to go to sessionrc.

2001-01-15  Sven Neumann  <sven@gimp.org>

	* app/devices.c: use a GimpColorArea for the foreground color in
	the Device Status dialog and added a background color

2001-01-15  Sven Neumann  <sven@gimp.org>

	* app/color_picker.c: enable drags from and disable drops to
	the ColorArea in the color_info dialog. Changed the cursor_update
	function so it only displays the bad cursor when outside the image.

2001-01-15  Michael Natterer  <mitch@gimp.org>

	* app/devices.c
	* app/gimprc.c: save the foreground and background color as array
	of RGBA doubles in "devicerc".

2001-01-15  Sven Neumann  <sven@gimp.org>

	* app/color_notebook.c: make use of GimpColorAreas. Added two
	buttons to set the color to black or white.

2001-01-15  Michael Natterer  <mitch@gimp.org>

	* modules/colorsel_water.c: the bottom position of the scale
	represents the minimal pressure now. Also removed the pressure
	value display because it's rather a matter of "more" or "less"
	than of an exact value.

2001-01-15  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.c
	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c: tweaked dialog layout a bit.

	* modules/colorsel_water.c: removed all widgets except the color
	selector itself (the history and the "Reset" button will go
	to the ColorNotebook).

2001-01-15  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.[ch]
	* app/color_select.c
	* libgimp/gimpcolorselector.h
	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c: use GimpRGB and GimpHSV.

	* libgimp/gimpcolor.c
	* libgimp/gimpcolorspace.[ch]: All rgb_to_hsv functions:

	if r == g == b the difference between the max and min value
	is 0 and we should avoid to divide by it ;-)

2001-01-15  Sven Neumann  <sven@gimp.org>

	* plug-ins/gdyntext/gdyntext.[ch]
	* plug-ins/gdyntext/gdyntext_ui.c
	* plug-ins/gdyntext/gdyntextcompat.[ch]: use GimpRGB

2001-01-15  Sven Neumann  <sven@gimp.org>

	* app/color_panel.c
	* libgimp/gimpcolorbutton.c
	* plug-ins/common/borderaverage.c
	* plug-ins/common/grid.c
	* plug-ins/common/polar.c
	* plug-ins/common/whirlpinch.c: cleaned up after myself

2001-01-15  Sven Neumann  <sven@gimp.org>

	* app/color_panel.[ch]: rewritten as proper widget derived from 
	GimpColorButton

	* app/channels_dialog.c
	* app/color_picker.c
	* app/qmask.c: use new GimpColorPanel widget

	* libgimp/gimpcolorarea.[ch]
	* libgimp/gimpcolorbutton.[ch]: some changes needed to derive from
	GimpColorButton

	* plug-ins/Lighting/lighting_ui.c
	* plug-ins/MapObject/mapobject_ui.c
	* plug-ins/common/colorify.c
	* plug-ins/common/colortoalpha.c
	* plug-ins/common/exchange.c
	* plug-ins/common/film.c
	* plug-ins/common/grid.c
	* plug-ins/common/mapcolor.c
	* plug-ins/common/nova.c
	* plug-ins/common/papertile.c
	* plug-ins/common/sinus.c
	* plug-ins/gdyntext/gdyntext_ui.c
	* plug-ins/ifscompose/ifscompose.c
	* plug-ins/script-fu/script-fu-scripts.c: follow API changes of
	GimpColorButton and GimpColorArea

2001-01-15  Michael Natterer  <mitch@gimp.org>

	* app/channel.[ch]
	* app/gimpimage.[ch]
	* app/layer.[ch]: use GimpRGB for the Channel's, the QuickMask's
	and the LayerMask's color.

	* app/channel_cmds.c
	* app/channel_ops.c
	* app/channels_dialog.c
	* app/qmask.c
	* app/xcf.c
	* tools/pdbgen/pdb/channel.pdb: changed accordingly.

2001-01-15  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.[ch]
	* app/color_panel.[ch]
	* app/gimpcontext.[ch]
	* app/gimpdnd.[ch]: use GimpRGB instead of a random selection out of
	guchar, gint, guchar[], blah...

	* app/blend.c
	* app/by_color_select.c
	* app/channel_ops.c
	* app/channels_dialog.c
	* app/color_area.c
	* app/color_picker.c
	* app/color_select.c
	* app/colormap_dialog.c
	* app/commands.c
	* app/devices.[ch]
	* app/disp_callbacks.[ch]
	* app/drawable.c
	* app/gimpimage.c
	* app/gimprc.c
	* app/gradient.c
	* app/paint_core.c
	* app/palette.c
	* app/palette_cmds.c
	* app/qmask.c
	* tools/pdbgen/pdb/palette.pdb: changed accordingly.

2001-01-15  Simon Budig  <simon@gimp.org>

	* app/apptypes.h
	I broke the Toolbox. Now it works again. The ToolType-enum *must*
	match the order in the tool_info-Array.

2001-01-15  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolor.[ch]: added function gimp_rgb_intensity_uchar()

	* libgimp/gimpcolorbutton.c
	* plug-ins/common/apply_lens.c
	* plug-ins/common/blinds.c
	* plug-ins/common/borderaverage.c
	* plug-ins/common/checkerboard.c
	* plug-ins/common/cubism.c
	* plug-ins/common/gif.c
	* plug-ins/common/grid.c
	* plug-ins/common/mblur.c
	* plug-ins/common/papertile.c
	* plug-ins/common/png.c
	* plug-ins/common/polar.c
	* plug-ins/common/semiflatten.c
	* plug-ins/common/sparkle.c
	* plug-ins/common/vpropagate.c
	* plug-ins/common/warp.c
	* plug-ins/common/whirlpinch.c
	* plug-ins/gap/gap_mov_dialog.c
	* plug-ins/gdyntext/gdyntext.c
	* plug-ins/gfig/gfig.c
	* plug-ins/ifscompose/ifscompose.c
	* plug-ins/maze/handy.c
	* plug-ins/mosaic/mosaic.c
	* plug-ins/pagecurl/pagecurl.c: replaced all occurences of 
	gimp_palette_[get|set]_[back|fore]ground() with the respective
	gimp_palette_[get|set]_[back|fore]ground_rgb() functions.

2001-01-14  Simon Budig  <simon@gimp.org>

	* app/tools.c:
	Reordered some tools. It is IMHO more logical to group the
	"paint-style" and the "blur/smudge"-Tools together.
	The Ordering up to now was a "historical" ordering: Not good...

	I am thinking about grouping the "Non-image modifying"-tools
	(Magnify, Colorpicker, Measure tool) together...
	
2001-01-14  Michael Natterer  <mitch@gimp.org>

	* app/channel.[ch]
	* app/drawable.[ch]
	* app/gdisplay.[ch]
	* app/gimpdrawable.[ch]
	* app/layer.[ch]:

	- Removed all "typedef drawable_function gimp_drawable_function".
	- Renamed all *_get_ID() functions to *_get_by_ID().
	- For symmetry reasons, renamed drawable_ID() to gimp_drawable_get_ID().
	- Removed the *_get_ID() functions of GimpLayer, GimpLayerMask
	  and GimpChannel.

	* app/airbrush.c
	* app/bezier_select.c
	* app/blend.c
	* app/brightness_contrast.c
	* app/bucket_fill.c
	* app/by_color_select.c
	* app/clone.c
	* app/color_balance.c
	* app/color_picker.c
	* app/convert.c
	* app/convolve.c
	* app/crop.c
	* app/curves.c
	* app/desaturate.c
	* app/dodgeburn.c
	* app/edit_selection.c
	* app/eraser.c
	* app/fileops.c
	* app/flip_tool.c
	* app/floating_sel.c
	* app/fuzzy_select.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimphistogram.c
	* app/gimpimage.c
	* app/global_edit.c
	* app/histogram_tool.c
	* app/hue_saturation.c
	* app/image_map.c
	* app/ink.c
	* app/invert.c
	* app/layer_select.c
	* app/layers_dialog.c
	* app/levels.c
	* app/paint_core.c
	* app/paintbrush.c
	* app/pencil.c
	* app/plug_in.c
	* app/posterize.c
	* app/scan_convert.c
	* app/smudge.c
	* app/text_tool.c
	* app/threshold.c
	* app/transform_core.c
	* app/undo.c
	* app/undo_history.c

	* app/channel_cmds.c
	* app/channel_ops_cmds.c
	* app/color_cmds.c
	* app/display_cmds.c
	* app/drawable_cmds.c
	* app/edit_cmds.c
	* app/floating_sel_cmds.c
	* app/image_cmds.c
	* app/layer_cmds.c
	* app/parasite_cmds.c
	* app/selection_cmds.c
	* app/text_tool_cmds.c
	* app/tools_cmds.c
	* libgimp/gimpdrawable_pdb.c
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/channel_ops.pdb
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/edit.pdb
	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/selection.pdb
	* tools/pdbgen/pdb/tools.pdb: changed accordingly.

2001-01-14  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolor.[ch]: added GimpHSV type and functions and
	gimp_rgb_composite functions

	* libgimp/gimpcolorbutton.c: indentation

	* libgimp/gimpcolorspace.[ch]: added GimpRGB <-> GimpHSV conversion 
	routines

	* libgimp/gimpwidgets.[ch]: removed gimp_color_update_uchar function

	* plug-ins/Lighting/lighting_main.[ch]
	* plug-ins/Lighting/lighting_preview.c
	* plug-ins/Lighting/lighting_shade.c
	* plug-ins/MapObject/mapobject_image.c
	* plug-ins/MapObject/mapobject_main.[ch]
	* plug-ins/MapObject/mapobject_shade.c
	* plug-ins/common/mapcolor.c
	* plug-ins/common/nova.c
	* plug-ins/common/papertile.c
	* plug-ins/common/sinus.c
	* plug-ins/ifscompose/ifscompose.c
	* plug-ins/script-fu/script-fu-scripts.c: use GimpRGB and GimpHSV 

2001-01-14  Michael Natterer  <mitch@gimp.org>

	* app/channel.[ch]
	* app/gimpdrawable.[ch]
	* app/layer.[ch]: moved the "removed" signal from GimpChannel and
	GimpLayer to GimpDrawable.

	* app/gimpimage.[ch]: changed accordingly.

2001-01-14  Michael Natterer  <mitch@gimp.org>

	* app/docindex.c
	* app/fileops.c
	* app/gdisplay.c
	* app/gimpimage.[ch]:

	Removed the "has_filename" boolean from GimpImage:

	- to get the filename, ask for GimpObjects's name.
	- gimp_image_filename() returns the *display* filename (and will be
	  renamed to gimp_image_display_name() soon), i.e. returns
	  "Unnamed" if object->name == NULL.
	- no need any more to check if the filename is the "" string because
	  GimpImage overrides GimpObject's "name_changed" method and
	  sets the name to NULL if it was "".

2001-01-14  Sven Neumann  <sven@gimp.org>

	Merged fixes from gimp-1-2:

	* app/menus.c
	* app/plug-in.c: added some sanity checks for passed string pointers
	to various public functions in an attempt to fix bug #37622.

	* plug-ins/common/sharpen.c: applied a patch from Jerome Zago 
        <jzago@ifhamy.insa-lyon.fr> that fixes a longstanding bug in the
        sharpen filter which sometimes got the last line wrong. 
	Fixes bug #34155.
	
2001-01-14  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h
	* app/brush_edit.c
	* app/brush_select.c
	* app/brushes_cmds.c
	* app/channel.h
	* app/colormap_dialog.c
	* app/datafiles.[ch]
	* app/devices.c
	* app/docindex.c
	* app/fileops.c
	* app/gdisplay.c
	* app/gimage.c
	* app/gimpbrush.[ch]
	* app/gimpbrushgenerated.[ch]
	* app/gimpbrushlist.[ch]
	* app/gimpbrushpipe.[ch]
	* app/gimpcontext.[ch]
	* app/gimpcontextpreview.c
	* app/gimpdnd.c
	* app/gimpdrawable.h
	* app/gimpimage.[ch]
	* app/gimplist.h
	* app/gimpobject.h
	* app/gimpset.[ch]
	* app/gradient.c
	* app/info_window.c
	* app/layer.[ch]
	* app/module_db.c
	* app/palette.[ch]
	* app/patterns.[ch]
	* app/plug_in.[ch]
	* app/undo_history.c
	* app/xcf.c
	* tools/pdbgen/pdb/brushes.pdb

	- Removed the "name" argument from all objects and use
	  GimpObject's name.
	- Use the same code in all "uniquefy name" functions (this
	  functionality will be a method of the "GimpContainer" class).
	- Renamed the parent instances of all objects to "parent instance".
	- Added missing instance and class cast macros.
	- Changed some "gchar *" to "const gchar *" parameters.

2001-01-12  Sven Neumann  <sven@gimp.org>

	* TODO.xml: updated status

	* app/gimpcontext.c: added temporary functions to make it compile

	* app/pixel_processor.c: include tile.h when ENABLE_MP is defined

	* libgimp/gimpcolor.[ch]: added more GimpRGB functions

	* plug-ins/common/aa.c: merged fix from gimp-1-2
	
	* plug-ins/common/colorify.c
	* plug-ins/common/colortoalpha.c
	* plug-ins/common/exchange.c
	* plug-ins/common/film.c
	* plug-ins/common/grid.c: use GimpRGB whereever possible. 
	Still work in progress.

2001-01-11  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolorarea.c: added antialiasing

2001-01-11  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolorbutton.[ch]: allow width/height of the color_area
	to be set to negative values so the GimpColorButton can be set up
	resizeable.
	
2001-01-11  Sven Neumann  <sven@gimp.org>

	* README: changed for gimp-1.3

2001-01-11  Valek Filippov  <frob@df.ru>

	* plug-ins/script-fu.c: changed INIT_I18N() to INIT_I18N_UI().

2001-01-10  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolorarea.[ch]: finished new GimpColorArea widget which
	uses GimpRGB and handles DND and alpha channel.

	* libgimp/gimpcolorbutton.[ch]: use GimpColorArea. The API of the 
	GimpColorButton has changed!

	* libgimp/gimpwidgets.[ch]: added temporary function 
	gimp_color_update_uchar() to ease migration of plug-ins to GimpRGB. 
	This function will go away.
	
	* plug-ins/Lighting/lighting_main.h
	* plug-ins/Lighting/lighting_ui.c
	* plug-ins/MapObject/mapobject_main.h
	* plug-ins/MapObject/mapobject_ui.c
	* plug-ins/common/colorify.c
	* plug-ins/common/colortoalpha.c
	* plug-ins/common/exchange.c
	* plug-ins/common/film.c
	* plug-ins/common/grid.c
	* plug-ins/common/mapcolor.c
	* plug-ins/common/nova.c
	* plug-ins/common/papertile.c
	* plug-ins/common/sinus.c
	* plug-ins/gdyntext/gdyntext_ui.c
	* plug-ins/ifscompose/ifscompose.[ch]
	* plug-ins/ifscompose/ifscompose_storage.c
	* plug-ins/ifscompose/ifscompose_utils.c
	* plug-ins/script-fu/script-fu-scripts.c: use new GimpColorArea and
	GimpColorButton. Started to introduce GimpRGB color type. This change
	might have broken some of these plug-ins. This is work in progress.

	* libgimp/Makefile.am: added GimpColorArea and GimpColorButton to 
	libgimpi.
	
	* app/gimpcontext.[ch]: added gimp_palette_get_[fore|back]ground() 
	functions so the app can link against libgimp/gimpcolorbutton.o.
	These functions will go away.

	* app/gimpdnd.c: use a GimpColorArea for DND
	
2001-01-10  Michael Natterer  <mitch@gimp.org>

	* app/gimpdrawable.[ch]: removed the "name" parameter and use
	GimpObject's name instead.

	* app/channel.c
	* app/channel_ops.c
	* app/channels_dialog.c
	* app/drawable.h
	* app/gimpimage.c
	* app/interface.c
	* app/layer.c
	* app/layer_select.c
	* app/layers_dialog.c
	* app/qmask.c
	* app/undo.c
	* app/xcf.c: changed accordingly, cleanup.

2001-01-10  Michael Natterer  <mitch@gimp.org>

	* app/gimpbrushlist.c
	* app/gimpdrawable.c: forgot to remove #include "gimpsignal.h"

	* app/gimpobject.[ch]: added a "name" argument (not used yet).

2001-01-10  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpsignal.[ch]: removed.
	* app/gimpmarshal.[ch]: added.

	* app/channel.[ch]
	* app/gimpbrush.[ch]
	* app/gimpbrushgenerated.c
	* app/gimpbrushlist.[ch]
	* app/gimpbrushpipe.[ch]
	* app/gimpcontext.c
	* app/gimpdrawable.c
	* app/gimpimage.c
	* app/gimplist.[ch]
	* app/gimpobject.[ch]
	* app/gimpset.[ch]
	* app/layer.c
	* app/layers_dialog.c
	* app/module_db.c
	* app/parasitelist.[ch]: removed gimp_signal_new() and
	GIMP_TYPE_INIT(). Fixed lots of object related uglyness.

2001-01-09  Sven Neumann  <sven@gimp.org>

	Merged fix from gimp-1-2:
	
	* app/gimpbrushlist.c
	* app/gradient.c
	* app/palette.c
	* app/patterns.c: check for NULL pointers before doing strcmp on
	default names. The default names for brushes, patterns, ... can 
	be NULL if they were not set in a readable gimprc file.

	* app/gimprc.c: warn the user if the systemwide gimprc couldn't be
	read.

2001-01-09  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.c: Show the "Alpha" scale only when needed.

	* libgimp/gimpcolorarea.[ch]: fixed typos.

2001-01-09  Sven Neumann  <sven@gimp.org>

	* TODO.xml: add more stuff

2001-01-09  Sven Neumann  <sven@gimp.org>

	* app/apptypes.h
	* app/brush_select_cmds.c
	* app/brushes_cmds.c
	* app/layer_cmds.c
	* app/layers_dialog.c
	* app/paint_funcs.c
	* app/tool_options.c
	* app/tools_cmds.c
	* libgimp/gimpenums.h
	* plug-ins/script-fu/script-fu-constants.c
	* tools/pdbgen/enums.pl: applied patch from Oliver Lavery 
	<oliver@zeroknowledge.com> that adds new blending modes 
	(Dodge/Burn/Hardlight). Please play with these new modes 
	and check if they are useful and well-implemented.

2001-01-09  Sven Neumann  <sven@gimp.org>

	* HACKING: added notice about autogenerated files.

2001-01-09  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolorarea.[ch]: added a new simple widget which
	provides a color preview area capable of DND. It will be used 
	in the GimpColorButton and in the color_selectors.

	* libgimp/Makefile.am
	* libgimp/gimpui.h
	* libgimp/gimpuitypes.h: include the new files

	* libgimp/gimpcolor.[ch]: use proper names instead of abbreviations

	* app/asupsample.c
	* plug-ins/Lighting/lighting_preview.c
	* plug-ins/Lighting/lighting_shade.c
	* plug-ins/MapObject/mapobject_preview.c
	* plug-ins/MapObject/mapobject_shade.c
	* plug-ins/libgck/gck/gckcolor.c: changed accordingly

2001-01-09  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.[ch]
	* app/color_select.c: moved the scales and the toggle butttons out
	of the notebook. Added an "Aplha" scale (the opacity is not yet
	shown in the color area). Removed the ColorNotebook structure from
	the header.

	* app/color_area.c: the ColorNotebook struct is no longer public.

	* libgimp/gimpcolorselector.h
	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c: changed the ColorSelector module
	interface again: Pass H, S, V, R, G, B and A in all functions
	and callbacks. Added a "set_channel" method because the channel
	toggles are outside the notebook now. This needs more work...

2001-01-08  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.[ch]
	* app/color_select.c: moved the "old" and "new" color areas from the
	notebook to the action_area.

	* TODO.xml: updated.

	* app/color_area.c
	* app/color_panel.c
	* app/colormap_dialog.c
	* app/palette.c
	* libgimp/gimpcolorselector.h
	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c: removed the "set_current" parameter all
	over the place because it was always TRUE and not used in the modules
	at all.

2001-01-08  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.c
	* app/color_select.c
	* libgimp/gimpcolorselector.h: more cleanup before chopping it up.

2001-01-08  Michael Natterer  <mitch@gimp.org>

	Removed GCG:

	* app/colormap_dialog.gc
	* app/colormap_dialog.i.[ch]
	* app/colormap_dialog.p.h
	* app/colormap_dialog.t.h
	* app/gimp.gh
	* tools/gcg/*: removed.

	* app/colormap_dialog.[ch]: moved all the colormap_dialog stuff
	here and cleaned up the autogenerated code.

	* autogen.sh
	* configure.in
	* app/Makefile.am
	* app/app_procs.c
	* app/apptypes.h
	* app/color_notebook.h
	* app/commands.c
	* app/gimpset.h
	* app/interface.c
	* po/POTFILES.in
	* tools/Makefile.am: changed accordingly, cleanup.

	* libgimp/gimpunitmenu.c: s/class/klass/

2001-01-07  Michael Natterer  <mitch@gimp.org>

	* app/by_color_select.c
	* app/channels_dialog.c
	* app/color_area.c
	* app/color_notebook.[ch]
	* app/color_panel.[ch]
	* app/color_picker.c
	* app/color_select.c
	* app/colormap_dialog.i.c
	* app/devices.c
	* app/disp_callbacks.[ch]
	* app/gimpdnd.[ch]
	* app/palette.c
	* app/qmask.c

	* libgimp/gimpcolorselector.h

	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c: made the color_notebook, the color_area
	and DND speak in terms of RGBA instead of RGB. The alpha value is
	not used yet, only the API changed. Everything should work exactly
	as before.

2001-01-07  Michael Natterer  <mitch@gimp.org>

	* TODO.xml: add "Cleanup GIMP's color selectors".

2001-01-07  Michael Natterer  <mitch@gimp.org>

	* app/bezier_select.c
	* app/bezier_selectP.h: removed the obscure unused "extend" variable
	from the Bezier Tool structure.

2001-01-07  Michael Natterer  <mitch@gimp.org>

	* TODO.xml: added an item to optionally change the image window's
	background.

	* app/preferences_dialog.c: "Disable Tearoff Menus" was not saved
	to disk.

2001-01-04  Asbjorn Pettersen  <asbjornP@dualog.no>

	* modules/gimpmodregister.h: add #include <libgimp/gimptypes.h>
	* plug-ins/common/bz2.c (load_image): fix bug loading bz2 files (OS/2)

2001-01-04  Sven Neumann  <sven@gimp.org>

	* plug-ins/script-fu/scripts/title-header.scm: merged fix from 1.2

2001-01-03  Michael Natterer  <mitch@gimp.org>

	* app/levels.c: reverted the behaviour of the "Reset" button back
	to resetting the current channel only. Resetting all channels was
	broken and IMHO cannot work the way it was implemented.

2001-01-03  Michael Natterer  <mitch@gimp.org>

	* app/plug_in_cmds.c
	* app/procedural_db_cmds.c
	* tools/pdbgen/pdb/plug_in.pdb
	* tools/pdbgen/pdb/procedural_db.pdb
	* tools/pdbgen/app.pl: conditionally include <regex.h> or
	"regexrepl.h", depending on HAVE_GLIBC_REGEX.

2001-01-03  Daniel Egger  <egger@suse.de>

	* app/plug_in_cmds.c:
	* app/procedural_db_cmds.c:
	* plug-ins/script-fu/Makefile.am:
	* plug-ins/script-fu/interp_regex.c:
	* plug-ins/script-fu/regexrepl.c: Conditionally compile
	regex if not available in glibc.
	
	* plug-ins/script-fu/regex.c:
	* plug-ins/script-fu/regex.h: Renamed files to regexrepl.[ch].

2001-01-03  Daniel Egger  <egger@suse.de>

	* configure.in: Extended the glibc regexp check and enabled
	substitution for Makefiles.
	
	* app/Makefile.am: Compile regexp only if not in glibc.
	
	* app/plug_in_cmds.c: 
	* app/procedural_db_cmds.c:
	* app/regexrepl.c: Include the correct local headerfile 
	if no new glibc with regexp is available.
	
	* app/regex.c:
	* app/regex.h: Moved into regexprepl.[ch] to avoid nameclashes. 

2001-01-02  Daniel Egger  <egger@suse.de>

	* acconfig.h:
	* configure.in: Added a check for a glibc compliant
	regex implementation.

2001-01-02  Simon Budig  <simon@gimp.org>

	* app/paint_core.c: use floor() before casting to gint when 
	calculating the current brush coordinates. Fixes the jagged brush 
	stroke when stroking a path that leaves the image at the top or left
	edge (bug #6043).
	
2001-01-02  Daniel Egger  <egger@suse.de>

	* app/clone.c:
	* app/gimpimage.c:
	* app/temp_buf.c: Use the new _clear function and more cleanups.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/temp_buf.[ch]: temp_buf_data_clear(): the temp_buf's size is
	(width * height * bytes). Cleanups.

	* app/fileops.c: removed a debugging g_print().

2001-01-02  Daniel Egger  <egger@suse.de>

	* app/temp_buf.c:
	* app/temp_buf.h: Add a new function "temp_buf_data_clear" to
	get a nulled chunk of memory.
	
	* app/iscissors.c: Use it here instead of two expensive for
	loops. Clean up the source a little.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/bezier_select.c
	* app/bezier_selectP.h
	* app/selection_options.h: moved the integer "extend" variable from
	SelectionOptions to the BezierSelect structure because it does not
	have a UI widget. Also initialize it with "0" (was used
	uninitialized before). I have no idea what it does.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/selection_options.h
	* app/tool_options.c: made a correct tool toption out of
	"Interactive" (added a default value and the "Reset" function,
	set unused pointers to NULL).

	* app/iscissors.c: fixed indentation and spacing.

2001-01-02  Daniel Egger  <egger@suse.de>

	* app/iscissors.c:
	* app/selection_options.h:
	* app/tool_options.c: Applied patch by laramieleavitt@onetel.net.uk
	to add an interactive update to the iscissors tool.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/gimphelp.c (gimp_idle_help): s/welcome.html/introduction.html/.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/gimprc.[ch]
	* app/menus.[ch]
	* app/preferences_dialog.c: added a preferences option to disable
	tearoff menus. Cleanup in preferences.

	* TODO.xml: done.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/commands.c: some nicer prototypes.

	* app/fileops.c: oops, forgot to gtk_widget_show() the open_options.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/commands.[ch]
	* app/fileops.[ch]
	* app/gdisplay.c
	* app/menus.c: Implemented "Save a Copy as..." which saves the image
	without changing it's filename.

	* app/layers_dialogP.h: export layers_dialog_layer_merge_query()
	here instead of defining it in commands.c

	* TODO.xml: mark this entry as done :)

2001-01-01  Michael Natterer  <mitch@gimp.org>

	* TODO.xml: added a TODO item for "Save a Copy..."

2001-01-01  Michael Natterer  <mitch@gimp.org>

	* plug-ins/libgck/gck/gck.h
	* plug-ins/libgck/gck/gckcolor.c: removed the GckRGB color type
	and all it's functions.

	* libgimp/Makefile.am
	* libgimp/gimpcolor.[ch]: new files containing the new GimpRGB color
	type and assorted functions.

	* libgimp/gimpcolorspace.[ch]: colorspace conversion routines for
	the new GimpRGB type. Also taken from LibGCK.

	* libgimp/gimp.h
	* libgimp/gimptypes.h: #include "gimpcolor.h". It's ugly to include
	it in both files but unavoidable to follow our new "*.c" file include
	policy. This will go away as libgimp will be chopped up into pieces
	anyway.

	* app/apptypes.h
	* app/asupsample.[ch]
	* app/blend.c
	* app/color_transfer.h
	* app/gradient_header.h: removed "color_t" and use GimpRGB instead.

	* plug-ins/Lighting/lighting_apply.c
	* plug-ins/Lighting/lighting_image.c
	* plug-ins/Lighting/lighting_image.h
	* plug-ins/Lighting/lighting_main.c
	* plug-ins/Lighting/lighting_main.h
	* plug-ins/Lighting/lighting_preview.c
	* plug-ins/Lighting/lighting_shade.c
	* plug-ins/Lighting/lighting_shade.h
	* plug-ins/MapObject/mapobject_apply.c
	* plug-ins/MapObject/mapobject_image.c
	* plug-ins/MapObject/mapobject_image.h
	* plug-ins/MapObject/mapobject_main.c
	* plug-ins/MapObject/mapobject_main.h
	* plug-ins/MapObject/mapobject_preview.c
	* plug-ins/MapObject/mapobject_shade.c
	* plug-ins/MapObject/mapobject_shade.h
	* modules/colorsel_triangle.c: s/GckRGB/GimpRGB/g

	* plug-ins/gdyntext/gdyntextcompat.h: check also for GIMP's minor
	version when deciding if to add a missing PDB wrapper.
	(All this compat cruft including libgimp/gimpcompat.h should go
	away ASAP)

2000-12-31  Michael Natterer  <mitch@gimp.org>

	More preparation for LibGCK removal:

	* libgimp/gimpcolorspace.[ch]: added a "_int" suffix to all functions
	operating on 3 gint pointers, just like the gdouble functions have
	a "_double" suffix.

	* app/color_balance.c
	* app/hue_saturation.c
	* app/paint_funcs.c
	* modules/colorsel_triangle.c
	* plug-ins/common/CML_explorer.c
	* plug-ins/common/scatter_hsv.c
	* plug-ins/common/sparkle.c
	* plug-ins/common/vinvert.c
	* plug-ins/gflare/gflare.c: changed accordingly.

2000-12-31  Sven Neumann  <sven@gimp.org>
            Simon Budig <simon@gimp.org>
	
	* app/gimpbrush.c
	* plug-ins/common/gih.c: explicitely cast offset to (off_t) when 
	seeking back. Should fix the problems reading grayscale BrushPipes 
	on IRIX.

2000-12-31  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h: cleaned up a bit.

	* app/asupsample.[ch]
	* app/blend.[ch]
	* app/channel.h
	* app/gimpprogress.[ch]
	* app/layer.h
	* app/perspective_tool.c
	* app/plug_in.h
	* app/rotate_tool.c
	* app/scale_tool.c
	* app/shear_tool.c
	* app/transform_core.[ch]: s/gimp_progress/GimpProgress/g and some
	changes related to the apptypes.h cleanup.

2000-12-31  Michael Natterer  <mitch@gimp.org>

	* app/airbrush.[ch]
	* app/bezier_select.c
	* app/bezier_selectP.h
	* app/blend.[ch]
	* app/boundary.h
	* app/brightness_contrast.[ch]
	* app/bucket_fill.c
	* app/by_color_select.c
	* app/clone.[ch]
	* app/color_balance.c
	* app/color_picker.c
	* app/commands.c
	* app/convolve.[ch]
	* app/crop.c
	* app/crop.h
	* app/curves.c
	* app/dodgeburn.[ch]
	* app/edit_selection.[ch]
	* app/ellipse_select.c
	* app/eraser.[ch]
	* app/flip_tool.[ch]
	* app/free_select.[ch]
	* app/fuzzy_select.[ch]
	* app/gdisplay.c
	* app/gimage.c
	* app/histogram_tool.[ch]
	* app/hue_saturation.[ch]
	* app/image_map.[ch]
	* app/ink.[ch]
	* app/iscissors.c
	* app/levels.c
	* app/magnify.[ch]
	* app/move.c
	* app/nav_window.[ch]
	* app/paint_core.[ch]
	* app/paintbrush.[ch]
	* app/path_bezier.[ch]
	* app/path_tool.c
	* app/pencil.[ch]
	* app/perspective_tool.[ch]
	* app/posterize.c
	* app/rect_select.[ch]
	* app/rotate_tool.[ch]
	* app/scale_tool.[ch]
	* app/selection.[ch]
	* app/shear_tool.[ch]
	* app/smudge.[ch]
	* app/text_tool.[ch]
	* app/threshold.c
	* app/tools.[ch]
	* app/transform_core.[ch]: removed the "gdisp_ptr" madness and
	useless casts all over the place. Introduced a "PaintState" enum
	instead of #define's. Various cleanups.

2000-12-30  Michael Natterer  <mitch@gimp.org>

	One more 17C3 commit ...

	* plug-ins/libgck/gck/gck.h
	* plug-ins/libgck/gck/gckcolor.c: removed unused stuff.

	* plug-ins/Lighting/lighting_apply.c
	* plug-ins/Lighting/lighting_image.[ch]
	* plug-ins/Lighting/lighting_main.c
	* plug-ins/Lighting/lighting_preview.[ch]
	* plug-ins/Lighting/lighting_shade.c
	* plug-ins/Lighting/lighting_ui.c
	* plug-ins/MapObject/mapobject_apply.c
	* plug-ins/MapObject/mapobject_image.[ch]
	* plug-ins/MapObject/mapobject_main.c
	* plug-ins/MapObject/mapobject_preview.c
	* plug-ins/MapObject/mapobject_shade.[ch]
	* plug-ins/MapObject/mapobject_ui.c: cleanups in preparation for
	removal of LibGCK.

2000-12-30  Michael Natterer  <mitch@gimp.org>

	* app/gimage.[ch]: removed all the
	"typedef gimage_function gimp_image_function" stuff so we can clearly
	see what is really a GImage function.
	Removed gimage_get_ID(). Use pdb_id_to_image() instead.

	* app/airbrush.c
	* app/desaturate.c
	* app/disp_callbacks.c
	* app/equalize.c
	* app/fileops.c
	* app/floating_sel.c
	* app/gdisplay_ops.c
	* app/gimpdrawable.c
	* app/global_edit.c
	* app/image_map.c
	* app/invert.c
	* app/lc_dialog.c
	* app/paths_dialog.c
	* app/plug_in.c
	* app/xcf.c

	* app/color_cmds.c
	* app/convert_cmds.c
	* app/image_cmds.c
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/image.pdb: changed accordingly.

2000-12-29  Sven Neumann  <sven@gimp.org>

	* TODO.xml: more things to do

2000-12-29  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/channel_pvt.h
	* app/drawable_pvt.h
	* app/gdisplayF.h
	* app/gimpdrawableP.h
	* app/gimpimageP.h
	* app/layer_pvt.h
	* app/toolsF.h: removed these files.

	* app/apptypes.h
	* tools/pdbgen/enums.pl: added tons of opaque typedefs and enums.

	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/display.pdb
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/fileops.pdb
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb
	* tools/pdbgen/pdb/help.pdb
	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/layer.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb
	* tools/pdbgen/pdb/selection.pdb
	* tools/pdbgen/pdb/tools.pdb
	* app/*: chainsaw #include cleanup:

	- Never (never!!) include stuff in header files except where we
	  need access to structures' contents (like derived objects).
	- Added prototypes and proper formating in many files.
	- The #include order in *all* *.c files is as follows:

	#include "config.h"

	#include <system stuff>

	#include <gtk/gtk.h>

	#include "apptypes.h"

	#include "gimp stuff"

	#include "libgimp stuff"

	#include "libgimp/gimpintl.h"

	By following this scheme we can easily see a file's dependencies
	from it's #include's and can grep for the inclusion to find out
	where a file is used.

	* tools/pdbgen/app.pl: changed to follow the include scheme above.

	* libgimp/Makefile.am
	* libgimp/gimpuitypes.h: new file, included from libgimp/gimpui.h
	and from app/apptypes.h.

	* libgimp/gimpcolorbutton.[ch]
	* libgimp/gimpdialog.[ch]
	* libgimp/gimphelpui.[ch]
	* libgimp/gimpparasite.[ch]
	* libgimp/gimppatheditor.[ch]
	* libgimp/gimpprotocol.c
	* libgimp/gimpquerybox.[ch]
	* libgimp/gimpsizeentry.[ch]
	* libgimp/gimptypes.h
	* libgimp/gimpui.h
	* libgimp/gimpunit.h
	* libgimp/gimpunitmenu.[ch]
	* libgimp/gimpwidgets.[ch]: changed accordingly.

	* plug-ins/FractalExplorer/Dialogs.c
	* plug-ins/gdyntext/message_window.c
	* plug-ins/imagemap/imap_default_dialog.c
	* plug-ins/imagemap/imap_file.c: these files used to include
	"libgimp/gimpui.h" without including "libgimp/gimp.h". This is
	no longer possible because the libgimpui headers don't include
	"libgimp/gimpunit.h" any more.

2000-12-29  Asbjorn Pettersen  <asbjornP@dualog.no>

	* app/module_db.c: OS/2 fix. remove gimp_color_display_register(),,

2000-12-29  Simon Budig  <simon@gimp.org>

	* modules/colorsel_triangle.c   Fixed the same 16->8bit conversion
	bug as in gimp-1-2 and removed duplicated code.

2000-12-28  Simon Budig  <simon@gimp.org>

	* gimp_splash.ppm     A new splash...
	* gimp1_2_splash.ppm  A new file for the old splash

	* modules/colorsel_triangle.c   Fixed a warning.
	
2000-12-28  Simon Budig  <simon@gimp.org>

	* modules/colorsel_triangle.c
	Cleanup, indentation madness, first steps towards a one-click
	color-selector.
	
2000-12-28  Sven Neumann  <sven@gimp.org>

	* app/channel.c
	* app/layer.c: use gtk_object_sink() instead of gtk_object_unref()
	when deleting a layer or channel since only floating objects should
	be destroyed this way. A layer or channel that has been attached
	to an image shall never be deleted.
	
	* app/layer_cmds.c
	* libgimp/gimplayer_pdb.c
	* tools/pdbgen/pdb/layer.pdb: reenabled the gimp_layer_delete() PDB
	function since it might be useful under rare circumstances.
	
2000-12-28  Sven Neumann  <sven@gimp.org>

	* app/commands.c
	* app/layer_select.[ch]: small new feature: display a layer preview
	popup when switching the active layer using PageUp/PageDown. Could
	need a little tweaking...
	
2000-12-28  Michael Natterer  <mitch@gimp.org>

	* app/channel.[ch]
	* app/drawable.h
	* app/gimpdrawable.[ch]
	* app/gimpdrawableP.h
	* app/gimpimage.[ch]
	* app/gimpimageP.h
	* app/layer.[ch]
	* app/layer_pvt.h: started a major cleanup of all image/drawable
	files. Added tons of "const GimpImage *" declarations and properly
	formated the headers.

	* app/bezier_select.c
	* app/channels_dialog.c
	* app/crop.c
	* app/fileops.[ch]
	* app/fuzzy_select.c
	* app/gdisplay.c
	* app/layers_dialog.c
	* app/move.c
	* app/paint_funcs.[ch]
	* app/qmask.c
	* app/undo.c: changed accordingly plus the usual portion of coding
	style paranoia. This is not finished but Sven promised to buy me
	a beer if I commit now ;)

2000-12-28  Sven Neumann  <sven@gimp.org>

	* app/boundaryF.h
	* app/gdisplayP.h
	* app/gimplistP.h
	* app/gimplutP.h
	* app/gimpsetP.h
	* app/parasitelistP.h
	* app/pixel_regionP.h: removed these files

	* app/Makefile.am
	* app/apptypes.h
	* app/boundary.[ch]
	* app/floating_sel.h
	* app/gdisplay.c
	* app/gimplist.h
	* app/gimplut.[ch]
	* app/gimpset.[ch]
	* app/parasitelist.[ch]
	* app/pixel_processor.c
	* app/pixel_region.[ch]: moved structure definitions into the
	normal headers, various cleanups

2000-12-28  Sven Neumann  <sven@gimp.org>

	* app/channel_cmds.c
	* app/layer_cmds.c
	* libgimp/gimpchannel_pdb.c
	* libgimp/gimplayer_pdb.c
	* plug-ins/common/warp.c
	* plug-ins/gap/gap_exchange_image.c
	* plug-ins/gap/gap_range_ops.c
	* plug-ins/perl/examples/bricks
	* plug-ins/perl/examples/glowing_steel
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/layer.pdb:

	Two of the gimp-perl scripts used to call gimp_layer_delete() after
	gimp_image_remove_layer(). This will fail since the layer is already 
	scheduled for destruction by removing it from the associated image or
	by deleting that image. It is thus dangerous and superfluous to export
	this feature through the PDB. The gimp_layer_delete() is hereby
	obsolete and does nothing any longer. I have removed the code calling
	it from all over the place (it was commented out in almost all places).

	The PDB help for gimp_channel_delete() now explicetly tells the user 
	about the proper usage of the procedure.
	
2000-12-28  Michael Natterer  <mitch@gimp.org>

	* app/bezier_select.[ch]
	* app/bezier_selectP.h: massive cleanup (prototypes, indentation, ...)

2000-12-28  Michael Natterer  <mitch@gimp.org>

	* app/measure.c: cleanup, proper prototypes, ...

2000-12-27  Michael Natterer  <mitch@gimp.org>

	* plug-ins/common/csource.c: the size of the string holding the
	image data was one byte too short (we forgot the trailing '\0').
	Reported by <goswin.brederlow@student.uni-tuebingen.de>

2000-12-27  Sven Neumann  <sven@gimp.org>

	* TODO.xml
	* docs/make-todo: new files. TODO.xml is a first start on a roadmap
	towards gimp-1.4. All new features and major changes need to be 
	defined here to be accepted into the gimp-1.3 branch.

2000-12-27  Michael Natterer  <mitch@gimp.org>

	* app/gimpimage.c: gimp_image_merge_layers(): apply the layer mask
	only if layer->apply_mask is TRUE, cleanup.

2000-12-27  Simon Budig  <simon@gimp.org>

	* plug-ins/mosaic/mosaic.c
	* plug-ins/script-fu/scripts/textured-logo.scm
	Implemented a toggle to ask the user, if he wants to allow some
	tiles to be split in two pieces. This enables perfect hexagonal/
	squared/octagonal tiles. Changed the PDB-Interface and changed the
	script using this plug-in.

2000-12-27  Michael Natterer  <mitch@gimp.org>

	* app/gimage.h
	* app/gimpimage.[ch]: implemented gimp_image_get_layer_by_index(),
	small cleanups.

	* app/commands.c
	* app/layers_dialog.c: use the new function instead of accessing
	the layer list directly.

2000-12-27  Michael Natterer  <mitch@gimp.org>

	* app/layers_dialog.c: layers_dialog_scroll_index(): don't fiddle
	around with magic numbers when calculating the layer widget's
	height but simply ask one of them for it's allocation.  Fixes
	positioning when the preview is smaller than the layer widget list
	item.

2000-12-27  Tomas Ogren  <stric@ing.umu.se>

	* plug-ins/ifscompose/ifscompose_storage.c: Remove the last comma in
	  an enum, xlc barfs

Tue Dec 26 11:10:23 PST 2000 Manish Singh <yosh@gimp.org>

	* app/patterns.c: fix fd leak on loading

Sun Dec 24 23:18:32 PST 2000 Manish Singh <yosh@gimp.org>

	* Made 1.2.0 release
