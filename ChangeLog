2001-02-21  Simon Budig   <simon@gimp.org>

	* app/disp_callbacks.c
	* app/gdisplay.c
	* app/gdisplay.h
	* app/interface.c: Moved the Icon preview stuff to the idle-loop.

2001-02-21  Simon Budig   <simon@gimp.org>
	
	* app/interface.c: Fixed stupid bug with the icon preview when
	creating the second preview. Please note that it still crashes
	on the second image, but this is hopefully not my fault...  :-)

2001-02-21  Michael Natterer  <mitch@gimp.org>

	Made the tool system work again and integrated it back with the
	GimpContext. It's a hack between old, new and freshly hacked
	stuff. There are still lots of warnings but at least we can switch
	tools again.

	* app/tools/Makefile.am
	* app/tools/gimptoolinfo.[ch]: resurrected as real object.
	The GimpToolInfo objects are derived from GimpData, which gives
	us the tool icon stuff for free. Also, we need a list of _objects_
	which is allocated all the time. All tools are required to have
	a "register" function which registers themselves with the list
	of GimpToolInfo objects which is maintained by the tool manager.

	* app/tools/tool.[ch]: made a real GtkObject with properly named
	functions out of it. The former "active_tool_control" is of
	course not the default implementation of the tool's "control"
	method but a hack _around_ it, so it went to the tool manager.

	* app/tools/color_picker.[ch]
	* app/tools/measure.[ch]: ditto. Added "register" functions and
	"destroy" implementations so the tools go away after use.

	* app/tools/tool_manager.[ch]: badly hacked at the moment to keep
	both the list of class structures _and_ the tool info list.

	* app/tools/tools.c: call the tools' register functions.

	* app/gimpcontext.[ch]: store a pointer to a GimpToolInfo object
	as "active_tool" in the context, so we're independent of tools
	being allocated or not. It's treated just like a brush or pattern
	now.

	* app/gimpdnd.[ch]: made tool DND work like all other DND types.

	* app/devices.[ch]: also here: the tool is just a normal data object
	now, resulting in removal of lots of code.

	* app/commands.c
	* app/context_manager.c: updated the tool select and context stuff
	to work again.

	* app/toolbox.c: removed the old pixmap buttons and put GimpPreviews
	inside the tool buttons. Still needs an own preview type to
	look nice.

	* app/disp_callbacks.c
	* app/about_dialog.c
	* app/app_procs.c
	* app/appenums.h
	* app/apptypes.h
	* app/gimage.c
	* app/gimppalette.c
	* app/gimppreview.c
	* app/gimprc.c
	* app/info_window.c
	* app/menus.c
	* app/palette_select.h
	* app/scale.c
	* app/scroll.c: lots of changes to make it work again.

2001-02-21  Daniel Egger  <egger@suse.de>

	* app/gimpchecks.h: New file containing the check types.
	
	* app/image_render.h: ... definitions taken from here.
	* app/temp_buf.c:
	* app/temp_buf.h: New function temp_buf_new_check to create
	a new checked temp_buf.

2001-02-20  Simon Budig  <simon@gimp.org>
	
	* app/gdisplay.[ch]
	* app/disp_callbacks.c
	* app/interface.c: Added preliminary support for Preview icons.

	This is not finished: We need a better way to get previews with
	a specific depth and probably a rendered Checkerboard for the
	alpha channel. Also the update function is now bound to a click
	in the top left menu-button and should go in some idle-stuff.
	Please test this on various window managers and give some
	feedback. The last point is the aspect ratio of the generated
	previews...

2001-02-20  Nick Lamb  <njl195@zepler.org.uk>

	* libgimpwidgets/gimpwidgets.c: include string.h

2001-02-20  Michael Natterer  <mitch@gimp.org>

	* app/gimpdnd.[ch]: removed all brush, pattern, gradient and palette
	DND functions because there are generic GimpViewable DND functions
	now.

	* app/disp_callbacks.[ch]
	* app/interface.c: changed accordingly.

2001-02-19  Michael Natterer  <mitch@gimp.org>

	* app/commands.[ch]
	* app/menus.c: first version of the new layers and channels dialogs.

	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c: allow creation with a NULL container.

	* app/gimpdnd.[ch]: added generic DND functions for all drawable
	types (not just setting the DND icon). Started to remove code
	duplication.

	* app/gimpdrawablepreview.c: with some magic calculations and ugly
	assumptions the drawable previews now look exactly like in the old
	L&C dialog.

	* app/gimpimagepreview.c: no need to say "return" at the end of a
	void function.

	* app/gimppreview.[ch]: added the "is_popup" boolean also to the
	default constructor. Call gimp_preview_set_viewable() before
	calculating the preview size.

2001-02-19  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimppalette-import.[ch]: new files. The import functions
	stripped from all UI crap.

	* app/palette_import.c: removed from here.

2001-02-19  Sven Neumann  <sven@gimp.org>

	* app/gimpimage.[ch]: converted gimage->layers and gimage->channels
	to GimpLists.
	
	* app/channel_ops.c
	* app/channels_dialog.c
	* app/commands.c
	* app/convert.c
	* app/floating_sel.c
	* app/gdisplay.c
	* app/gimpdrawable.c
	* app/layers_dialog.c
	* app/resize.c
	* app/undo.c
	* app/xcf.c
	* app/pdb/display_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/layer_cmds.c
	* app/tools/crop.c
	* app/tools/edit_selection.c
	* tools/pdbgen/pdb/display.pdb
	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/layer.pdb: changed accordingly

2001-02-19  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainer.[ch] (gimp_container_insert): new function.

2001-02-19  Michael Natterer  <mitch@gimp.org>

	* app/context_manager.c
	* app/gimpdatafactory.c
	* app/gimpdatalist.[ch]
	* app/gimplist.[ch]
	* app/module_db.c: return a GimpContainer from all container
	subclass constructors.

	* app/gimppalettepreview.c
	* app/palette.c: changed the preview a bit. Still ugly.

2001-02-19  Michael Natterer  <mitch@gimp.org>

	* gimp.m4
	* gimptool.in: removed.

	* gimp-1.4.m4
	* gimptool-1.4.in: added modified versions. gimp-1.4.m4 is untested.
	The m4 macro is now called AM_PATH_GIMP_1_4()

	* .cvsignore
	* Makefile.am
	* configure.in: changed accordingly.

	* libgimp/Makefile.am
	* libgimpcolor/Makefile.am
	* libgimpmath/Makefile.am
	* libgimpwidgets/Makefile.am: install the header files in
	$includedir/gimp-MAJOR.MINOR/<libname>

	* app/brush_edit.c: increased toplevel container border size to 4.

	* app/gimpdatafactoryview.c: don't generate multiple "copy"s when
	duplicating data objects.

	* app/gradient_editor.c: cleaned up the GUI.

	* app/lc_dialog.c: removed the "Close" button.

2001-02-18  Michael Natterer  <mitch@gimp.org>

	* app/gimpdnd.[ch]: added DND source functions which work by
	GtkType.

	* app/commands.c
	* app/brush_select.c
	* app/gradient_select.[ch]
	* app/pattern_select.c: removed the DND code here because it's all
	done by the GimpContainerView now.

	* app/gimpbrushpreview.c
	* app/gimpgradientpreview.c
	* app/gimppalettepreview.c
	* app/gimppatternpreview.c: use the DND by-type connect functions.

	* app/gimpbrushgenerated.c: implemented "duplicate", cleanup.

	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpcontainerview.[ch]: added a "activate_item" signal
	method which is emitted by the subclasses to indicate double click.

	* app/gimpdatafactoryview.c: connect to "activate_item" and show
	the editor.

	* app/convert.c
	* app/gimppalette.[ch]
	* app/palette.c
	* app/paletteP.h
	* app/palette_import.c
	* app/palette_select.[ch]: major cleanup: Behaves like the other
	datatypes now: DND, context stuff, GimpContainerListViews in
	the dialogs etc. Mostly just removal of code.

	* app/gradient_editor.c: fixed signal blocking/unblocking.

	* plug-ins/script-fu/scripts/Makefile.am: install the "Test Sphere"
	script again.

2001-02-17  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainer.[ch]
	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpcontainerview.[ch]
	* app/gimplist.c
	* app/gimpmarshal.[ch]: the GimpContainer has a new virtual "reorder"
	method which is much more eficient then the current remove/add
	braindeadness when renaming data objects.
	Changed the views to connect to "reorder" and call the
	GimpContainerView's new "reorder_item" method which then does
	the right thing in the view subclasses.

	* app/gimpdatafactory.c
	* app/gimpdatafactoryview.c
	* app/gimpdatalist.[ch]: removed the data list loading and saving
	stuff from GimpDataList because that's the job of the
	GimpDataFactory.

	* app/brush_edit.[ch]
	* app/brush_select.c: cleanup.

	* app/gradient_editor.[ch]: changed it to work like the brush
	editor: return a GradientEditor pointer in the constructor
	and statically store this pointer in the gradient selection file.
	Removed the global "g_editor" variable and added tons of
	GradientEditor* variables to function calls so they know their
	context without the global variable.

	* app/gradient_select.c: changed accordingly.

2001-02-17  Seth Burgess <sjburges@gimp.org>
	
	* app/tools/Makefile.am 
        * app/tools/measure.[ch]: added back in, changing as needed for basic 
	operation.  Probably pretty buggy still.

	* app/tools/tools.c: changed one of the tool initializations to be
	the measure tool.  Now only measure tools are availble (though it
	would appear both are visually).  I don't think the toolbox selection 
	stuff is operational yet.

	* app/tools/color_picker.[ch]: minor cleanup

2001-02-16  Stanislav Brabec  <utx@penguin.cz>

        On request of Martin Weber <martweb@gmx.net>.
        * plugins/common/despeckle.c: Fixed comparison *sort_ptr > black_level.
        Only adopting white_level had a visual effect. This fix causes
        that also adopting blck_level works also.

2001-02-14  Michael Natterer  <mitch@gimp.org>

	* HACKING: added a note about apptype.h and about not including
	headers in headers.

	* app/apptypes.h: added GimpTool and BitmapCursor.

	* app/cursorutil.h
	* app/devices.h
	* app/draw_core.h
	* app/tools/color_picker.h
	* app/tools/tool.h
	* app/tools/tool_options.h
	* app/gimpcontext.h: removed includes of "tools/tool.h"

	* app/gimprc.[ch]: indentadion cleanup, added
	"module_db_load_inhibit".

	* app/module_db.c: removed the above variable here.

	* app/gimpdata.[ch]: added a vitrual "duplicate" method.

	* app/gimpbrush.[ch]
	* app/gimpbrushgenerated.[ch]
	* app/gimpbrushpipe.[ch]
	* app/gimpgradient.[ch]
	* app/gimppalette.[ch]
	* app/gimppattern.[ch]: all "load", "new" and "get_standard"
	functions return a GimpData pointer now.

	* app/gimpdatafactory.[ch]: made some stuff const.

	* app/gimpdatafactoryview.c: activate the "duplicate" button and
	set the initial button sensitivity correctly.

	* app/brush_select.c
	* app/gradient_select.c
	* app/pattern_select.c: use the new GimpDataFactoryView.

	* libgimp/Makefile.am: grouped the file to sort out what _may_
	go to subdirs or separate libs.

	* libgimp/gimpenv.[ch]: added many "const".

	* app/app_procs.c
	* app/brush_edit.c
	* app/gimpcontext.c
	* app/gimpdnd.c
	* app/gradient_editor.c
	* app/palette.c
	* app/palette_import.c
	* app/user_install.c: many related changes.

	* libgimpmath/gimpmathtypes.h
	* libgimpmath/gimpvector.[ch]: minor cleanups.

	* plug-ins/script-fu/script-fu.c: gimp_data_directory() is const now.

2001-02-13 Nathan Summers <rock@gimp.org>

	* configure.in
	* plug-ins/plugin-helper/*: prototype for an extension that allows
	gmodules as plugins.  Known bug: crashes on gmodules with a static
	"query" function
        
	* app/tools/tool.c 
	* app/tools/tool.h: created new GimpTool object.  Did away with
	ToolInfo.  Most tools still need to be ported over to the new api.

        * app/tools/tools.c: now contains the initialization function to
	register the tools with the Gimp

        * app/tools/tools.h: renamed to tool.h

	* app/Makefile.am 
	* app/app_procs.c
        * app/apptypes.h 
	* app/commands.c 
	* app/context_manager.c
        * app/cursorutil.c 
	* app/devices.c 
	* app/devices.h
        * app/disp_callbacks.c 
	* app/draw_core.c 
	* app/draw_core.h
        * app/gdisplay.c 
	* app/gimage.c 
	* app/gimage_mask.c
        * app/gimpcontext.c 
	* app/gimpcontext.h 
        * app/global_edit.c 
	* app/info_window.c 
	* app/interface.c
        * app/libgimp_glue.c 
	* app/menus.c 
	* app/paint_core.h
        * app/paint_options.h 
	* app/scale.c 
	* app/scroll.c 
	* app/toolbox.c
	* app/undo.c 
	* app/tools/Makefile.am
        * app/tools/color_picker.c 
	* app/tools/color_picker.h
        * app/tools/paint_core.c 
	* app/tools/tool_options.c
        * app/tools/tool_options.h 
	* app/tools/tool_options_dialog.c
	* libgimp/gimp.c 
	* plug-ins/Makefile.am: changed acordingly

        * plug-ins/script-fu/script-fu-scripts.c: fixed typo in comment.
	Pathetic, huh?

2001-02-14  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* po/POTFILES.in
	* app/brushes.[ch]
	* app/gradients.[ch]
	* app/palettes.[ch]
	* app/patterns.[ch]: removed.

	* app/gimpdatafactory.[ch]: completely manage the data lists,
	including loading with different callbacks per extension.

	* app/gimpdatafactoryview.[ch]: enabled "new", "edit", "delete"
	and "refresh".

	* app/context_manager.c: initisalize the data factories.

	* app/gimpcontext.c: fixed some bad bugs introduced yesterday.

	* app/gradient_editor.[ch]: removed the public "create" function
	and create the editor implicitly on "set_gradient"

	* app/app_procs.c
	* app/apptypes.h
	* app/brush_edit.h
	* app/brush_select.c
	* app/commands.c
	* app/convert.c
	* app/devices.c
	* app/gimpbrushpipe.c
	* app/gimpcontainerview.h
	* app/gimpgradient.c
	* app/gimppattern.c
	* app/gradient_select.c
	* app/palette.c
	* app/pattern_select.c
	* app/pdb/brush_select_cmds.c
	* app/pdb/brushes_cmds.c
	* app/pdb/convert_cmds.c
	* app/pdb/gradient_select_cmds.c
	* app/pdb/gradients_cmds.c
	* app/pdb/palette_cmds.c
	* app/pdb/pattern_select_cmds.c
	* app/pdb/patterns_cmds.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb
	* tools/pdbgen/pdb/palette.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb: um, much stuff, mostly "changed
	accordingly" ;-)

2001-02-13  Michael Natterer  <mitch@gimp.org>

	* gimprc.in
	* user_install
	* user_install.bat
	* app/gimprc.[ch]
	* app/preferences_dialog.c: removed the "brush_vbr_path" variable,
	because all data types will be editable and saveable soon.

	* app/Makefile.am
	* app/apptypes.h
	* app/gimpdatafactory.[ch]: new object which holds a data list and
	knows how to create, edit, duplicate etc. the items in it. Will
	completely replace the brushes.[ch], patterns.[ch], ... files soon.

	* po/POTFILES.in
	* app/gimpdatacontainerview.[ch]: removed.
	* app/gimpdatafactoryview.[ch]: added.

	A view on the GimpDataFactory with a GUI for creating, editing,
	deleting etc. items (mostly unimplemented).

	* app/context_manager.[ch]: replaced the global data lists by global
	data factories.

	* app/brush_select.c
	* app/brushes.[ch]
	* app/commands.c
	* app/convert.c
	* app/devices.c
	* app/gimpbrush.[ch]
	* app/gimpbrushgenerated.c
	* app/gimpcontext.c
	* app/gimpdata.[ch]
	* app/gimpdatalist.[ch]
	* app/gimpdnd.c
	* app/gimpgradient.[ch]
	* app/gimppalette.[ch]
	* app/gimppattern.[ch]
	* app/gradient_editor.c
	* app/gradient_select.c
	* app/gradients.[ch]
	* app/indicator_area.c
	* app/palette.c
	* app/palette_import.c
	* app/palette_select.c
	* app/palettes.[ch]
	* app/pattern_select.c
	* app/patterns.[ch]
	* app/pdb/brush_select_cmds.c
	* app/pdb/brushes_cmds.c
	* app/pdb/convert_cmds.c
	* app/pdb/gradient_select_cmds.c
	* app/pdb/gradients_cmds.c
	* app/pdb/pattern_select_cmds.c
	* app/pdb/patterns_cmds.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb: changed accordingly.

2001-02-13  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* po/POTFILES.in
	* app/gimpdatacontainerview.[ch]: new widget which will replace the
	current brush, pattern, ... selections. To really use it, there
	needs to be a GimpDataFactory object (coming soon...)

	* app/commands.[ch]
	* app/menus.c: added test data container views.

	* app/paint_funcs_simd.S: #include the implementation with "", not <>

2001-02-13  Seth Burgess  <sjburges@gimp.org>

	* plug-ins/perl/Gimp/Lib.xs : made perl compilable again.  Didn't
	change to turn back on by default.
	
2001-02-13  Sven Neumann  <sven@gimp.org>

	* Makefile.am
	* configure.in
	* cursors/Makefile.am
	* docs/Makefile.am
	* pixmaps/Makefile.am: added Makefiles to cursors, docs and pixmaps
	directories

2001-02-13  Sven Neumann  <sven@gimp.org>

	* Makefile.am
	* pixmaps/refresh.xpm: new icon

2001-02-13  Michael Natterer  <mitch@gimp.org>

	* app/gradient_editor.[ch]
	* app/gradient_select.[ch]: use GimpContainerListView instead of
	cooking an own list.

	* app/gimpgradient.[ch]: removed the GdkPixmap from the gradient.

	* app/gimpcontainerlistview.c: connect the viewable's "name_changed"
	signal to the label.

	* app/gimpmarshal.[ch]
	* app/gimppreview.[ch]: new virtual function "get_size",

	* app/gimpgradientpreview.c: implement "get_size" and return a 3:1
	aspect ratio.

	* app/gradients.c
	* app/palette_select.[ch]
	* app/palettes.c: removed the dialog freeze/thaw functions.

	* app/brush_select.c
	* app/pattern_select.c
	* app/plug_in.c: stuff.

2001-02-12  Michael Natterer  <mitch@gimp.org>

	* app/brush_select.[ch]
	* app/pattern_select.[ch]: removed almost all code by using
	the GimpContainerGridView.

	* app/brushes.c
	* app/patterns.c: brush|pattern_select_freeze|thaw_all() don't
	exist any more.

	* app/devices.c: made it work again.

	* app/gimpgradientpreview.c: the gradient popup is 128 x 32 again.

	* app/plug_in.c: follow the brush and pattern dialog function
	renaming.

	* app/gimppalette.[ch]
	* app/gimppalettepreview.c: added a "Columns" attribute and show
	the popups accordingly.

	The palette file format has changed again. It now can have an
	optional "Columns: <n>" line after the palette's name.

	* data/palettes/Bgold.gpl
	* data/palettes/Borders.gpl
	* data/palettes/Cascade.gpl
	* data/palettes/China.gpl
	* data/palettes/Coldfire.gpl
	* data/palettes/Dark_pastels.gpl
	* data/palettes/Ega.gpl
	* data/palettes/Gold.gpl
	* data/palettes/Grayblue.gpl
	* data/palettes/Hilite.gpl
	* data/palettes/Kahki.gpl
	* data/palettes/Named_Colors.gpl
	* data/palettes/News3.gpl
	* data/palettes/Op2.gpl
	* data/palettes/Plasma.gpl
	* data/palettes/Visibone.gpl
	* data/palettes/Visibone_2.gpl
	* data/palettes/Web.gpl: added the "Columns" parameter where it
	makes sense and removed those ugly black colors which were hanging
	around as first color of many palettes.

2001-02-12  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am: took gimpcontextpreview.[ch] out of the build
	but still left the sources there as reference.

	* app/app_procs.c: initialize the render stuff before creating the
	toolbox (needed for the previews).

	* app/devices.c
	* app/indicator_area.c: use GimpPreviews instead of
	GimpContextPreviews.

	* app/context_manager.[ch]: create the global data lists here
	because they now must exist before any context is created.

	* app/brushes.[ch]
	* app/gradients.[ch]
	* app/palettes.[ch]
	* app/patterns.[ch]: removed them here.

	* app/gimpcontainer.[ch]: added a "freeze_count" and emit the
	"freeze" and "thaw" signals accordingly.

	* app/gimpcontext.[ch]: greatly simplified the way how the
	contexts connect to the data lists (simply keep them connected all
	the time). Also removed all those ugly explicit update functions
	because "thaw" callbacks do this job now.

	* app/gimpdata.c: a GimpData object now becomes dirty on
	"name_changed"; "dirty" now triggers "invalidate_preview" because
	the context does not dispatch these signals any more soon.

	* app/brush_select.c
	* app/convert.c
	* app/gimpdnd.c
	* app/gradient_editor.c
	* app/gradient_select.c
	* app/pattern_select.c
	* app/gradient_editor.c
	* app/gradient_select.c
	* app/gradients.[ch]
	* app/pdb/brush_select_cmds.c
	* app/pdb/brushes_cmds.c
	* app/pdb/convert_cmds.c
	* app/pdb/gradient_select_cmds.c
	* app/pdb/gradients_cmds.c
	* app/pdb/pattern_select_cmds.c
	* app/pdb/patterns_cmds.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb: changed accordingly.

2001-02-11  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h: added the datafile loader_func typedefs.

	* app/datafiles.h: removed from here.

	* app/gimpcontainer.[ch]: emit "freeze" and "thaw" signals to get
	rid of those blah_select_[freeze|thaw]_all() stuff.

	* app/gimpdatalist.[ch]: new function gimp_data_list_load() which
	takes a va_list of GimpDataObjectLoaderFuncs and file extensions
	and is almost a replacement for the four files below.

	* app/brushes.c
	* app/gradients.c
	* app/palettes.c
	* app/patterns.c: very simple now. It may be worth thinking about
	making all GimpData subclasses managed by a descriptive array in
	the context_manager.

2001-02-11  Michael Natterer  <mitch@gimp.org>

	Made a GimpContainer out of the palette list:

	* app/Makefile.am
	* app/palettes.[ch]: new files for the global palette list.

	* app/gimpgradientpreview.[ch]
	* app/gimppalettepreview.[ch]: new widgets.

	* app/gimppalette.[ch]: derive it from GimpData to get all the
	preview etc. stuff.

	* app/datafiles.[ch]: new function datafiles_check_extension(),
	added a "loader_data" parameter to datafiles_read_directories()
	and pass it to the loader function.

	* app/gimpcontext.[ch]: added the palette (not really used yet
	except by the test dialogs).

	* app/gimpdatalist.[ch]: new function gimp_data_list_save_and_clear()
	which does everything needed for patterns_free(), brushes_free() ...

	* app/gimpdnd.c: added palette DND.

	* app/app_procs.c
	* app/brushes.c
	* app/color_notebook.h
	* app/commands.c
	* app/convert.c
	* app/gimpbrush.h
	* app/gimpbrushpipe.h
	* app/gimpgradient.c
	* app/gimppattern.h
	* app/gimppreview.c
	* app/gradients.c
	* app/module_db.c
	* app/palette.[ch]
	* app/paletteP.h
	* app/palette_import.c
	* app/palette_select.[ch]
	* app/patterns.c
	* app/plug_in.c
	* app/pdb/convert_cmds.c
	* app/pdb/palette_cmds.c
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/palette.pdb: lotsa stuff: changed due to the above
	API changes, #define the file extensions in the GimpData subclasses'
	header files instead of hardcoding them in several places, ...

	* data/palettes/*: The same file format change as for the gradient
	files:

	- Save the palette name in a parsable form (as part of the file
	  format, not in a comment.
	- Removed unserscores from the palette names.
	- Added an extension (Gimp PaLettes are ".gpl" files now ;-)

2001-02-11  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h
	* app/gimpdata.[ch]: new abstract base class for everything
	(except images) which has a filename and can become dirty and must
	be saved.

	* app/gimpbrush.[ch]
	* app/gimpgradient.[ch]
	* app/gimppattern.[ch]: all derived from GimpData now.

	* app/gimpbrushgenerated.[ch]
	* app/brush_select.c
	* app/brushes.c
	* app/gimpbrushpipe.c
	* app/gradient_editor.c
	* app/gradients.c
	* app/patterns.c: removed lots of code duplication due to common
	file save magic.

	The gradient file format has changed: it now contains the
	gradient's name (no more ugly underscores). The files have the
	extension ".ggr".

	* app/gimpgradient.[ch]: save new gradients, load new and old
	gradients.

	* data/gradients/*: removed all old gradients and added the new
	ones.

2001-02-10  David Monniaux  <monniaux@genievre.ens.fr>

	MMX code for paint_funcs. Very partial so far.
	* acconfig.h
	* configure.in: detection of MMX-able assembler and compiler
	* app/Makefile.am
	* app/main.c: detects MMX and acts accordingly
	* app/paint_funcs.c
	* app/paint_funcs_simd.S: #include's appropriate file
	* app/arch/i386/mmx/paint_funcs_mmx.S
	* app/arch/i386/mmx/paint_funcs_mmx.S.m4

2001-02-10  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gradient.[ch]: renamed...

	* app/gradient_editor.[ch]: ...to this

	* app/gradient_select.c: changed #include

	* po/POTFILES.in: renamed the file here too

2001-02-10  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gradientP.h
	* app/gradient_header.h: removed.

	* app/gimpgradient.[ch]: new object -- bye bye "gradient_t"

	* app/gradients.[ch]: new files for managing the gradient list.

	* app/gradient.[ch]: contains only the gradient editor now (which
	still badly pokes around in the GimpGradient structure).

	* app/app_procs.c
	* app/apptypes.h
	* app/devices.c
	* app/gimpcontainerlistview.c
	* app/gimpcontext.[ch]
	* app/gimpcontextpreview.[ch]
	* app/gimpdnd.[ch]
	* app/gradient_select.[ch]
	* app/indicator_area.c
	* app/palette_import.c
	* app/pdb/gradient_select_cmds.c
	* app/pdb/gradients_cmds.c
	* app/tools/airbrush.c
	* app/tools/blend.c
	* app/tools/paint_core.c
	* app/tools/paintbrush.c
	* app/tools/pencil.c
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb: changed accordingly, some
	changes to the preview and view stuff.

	* app/gimppreview.[ch]: removed the "context" attribute again
	because it was overkill (a simple gtk_signal_connect_object does
	the same as doing the autoconnection magic inside the GimpPreview
	object).

	* app/commands.[ch]
	* app/menus.c: example views on the gradient container.

2001-02-09  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainergridview.[ch]
	* app/gimpcontainerlistview.[ch]
	* app/gimpcontainerview.[ch]: follow the GimpPreview API change
	and take only "size" instead of "width" and "height" in the
	constructor.

	* app/gimpdnd.[ch]: first attempt to hack GtkType based DND which
	speaks in terms of GimpViewable instead of Brush, Pattern, ...
	Added functions to remove DND callbacks (used by the multi-views).

	* app/gimppreview.[ch]: new function gimp_preview_set_size_full().

	* app/commands.c: updated the example dialogs to be DND aware.

	* app/gimpimage.c: fixed preview size calculation by ensuring a
	minimal width/height of 1 pixel.
	Reported by Dave Neary <dneary@eircom.net>

2001-02-09  Michael Natterer  <mitch@gimp.org>

	* app/gimppreview.[ch]: moved the constructor-parameter-overkill
	to the new function gimp_preview_new_full() and made the
	gimp_preview_new() interface simple.

	* app/gimpbrushpreview.c
	* app/gimppatternpreview.c: added DND support.

	* app/gimpdnd.c: use the new preview system.

	* app/gimpconstrainedhwrapbox.c: implement "size_allocate". Ok,
	this is silly -- I will write an own widget which does the
	"scrollable grid of whatever" stuff in one place...

	* app/commands.c
	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpimagepreview.c: follow the GimpPreview constructor change.

2001-02-09  Michael Natterer  <mitch@gimp.org>

	* app/commands.c: changed the test dialogs a bit.

	* app/gimpconstrainedhwrapbox.[ch]: should be called
	GimpHackedWrapBoxForContainerView now ;-)

	* app/gimpcontainergridview.[ch]
	* app/gimpcontainerlistview.[ch]: fixed the minimal size setting
	by getting the magic values from the relevan gtk widgets.
	Scroll to the active item if it not visible.

2001-02-08  Michael Natterer  <mitch@gimp.org>

	* app/gimppreview.[ch]: added an (unused) "context" argument
	and a "set_viewable" function.

	* app/gimpconstrainedhwrapbox.c: even more evil than before.

	* app/gimpbrushpreview.c
	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpcontainerview.c
	* app/gimpimagepreview.c
	* app/gimppatternpreview.c: fixed lots of forgotten signal handlers

	* app/commands.[ch]
	* app/menus.c: added "Multi View" dialogs.

2001-02-08  Michael Natterer  <mitch@gimp.org>

	* app/gimppreview.[ch]: added a "border" attribute. The border can
	have any color (which has no sane API yet...). Added "width" and
	"height" attributes and provide a "set_size" function.

	* app/gimpbrushpreview.c
	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpimagepreview.c
	* app/gimppatternpreview.c: changed accordingly, enabled
	highlighting of the selected item in the grid views.

2001-02-07  Michael Natterer  <mitch@gimp.org>

	* app/gimppreview.[ch]: allocate less temp_bufs by removing the
	"create_preview" virtual function and adding a "render" one.

	Implementations have to call the new public function
	gimp_preview_render_and_flush() to render their temp_bufs.
	This way, e.g. the GimpPatternPreview can render the preview
	directly from the pattern's mask.

	* app/gimpdrawablepreview.c
	* app/gimpimagepreview.c
	* app/gimppatternpreview.c: changed accordingly.

	* app/gimpbrushpreview.[ch]: same as above and added BrushPipe
	popup animation.

2001-02-07  Michael Natterer  <mitch@gimp.org>

	* app/gimppreview.[ch]
	* app/gimpbrushpreview.c
	* app/gimpcontainergridview.c
	* app/gimpcontainerlistview.c
	* app/gimpimagepreview.c
	* app/gimppatternpreview.c: added an "is_popup" parameter to the
	preview constructor so the subclasses can decide if to do special
	stuff like pipe animation.

2001-02-07  Daniel Egger  <egger@suse.de>

	* configure.in: Changed link order in gtkxmhtml check
	to fix bug #12653.

2001-02-07  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontext.[ch]: added "set_by_type", "get_by_type" and
	"changed_by_type" methods which take a GtkType and decide from
	that if to manipulate the Brush, Pattern etc.

	* app/gimpcontainerview.[ch]
	* app/gimpcontainergridview.[ch]
	* app/gimpcontainerlistview.[ch]: added a GimpContext to the views
	which is used to manage the active item.

	* app/commands.c: pass the user_context to the test views.

	* app/gimpbrushpreview.c
	* app/gimppatternpreview.c
	* app/gimppreview.[ch]: added a virtual "needs_popup" method which
	returns a boolean indicating if the viewable is already fully
	visible.

	* app/gimage.[ch]: removed gimage_foreach() and some other
	functions which can easily be done by gimp_container_foreach().
	Removed gimage_delete().

	* app/fileops.c
	* app/gdisplay.c
	* app/lc_dialog.c
	* app/nav_window.c
	* app/palette_import.c
	* app/preferences_dialog.c
	* app/xcf.c
	* app/pdb/image_cmds.c
	* tools/pdbgen/pdb/image.pdb: changed accordingly. Switched from
	"disp_count" refcounting to real GtkObject refcounting for
	GimpImages.

2001-02-07  Michael Natterer  <mitch@gimp.org>

	* app/gimpbrush.[ch]
	* app/gimpbrushpreview.c: moved the scale and pipe indicator
	rendering code from GimpBrush to GimpBrushPreview.
	Removed the "dirty" signal from GimpBrush and use
	"invalidate_preview" of the GimpViewable class.

	* app/brush_edit.c
	* app/brush_select.c
	* app/gimpbrushgenerated.c
	* app/gimpcontext.c
	* app/gimpcontextpreview.c
	* app/tools/paint_core.c: changed accordingly.

2001-02-07  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpimagepreview.[ch]: new object with own implementations
	of "create_preview" and "create_popup".

	* app/gimpdrawablepreview.c: stuff... still unused.

	* app/gimppreview.c: fixed idle rendering crashes, don't
	forget popups on GDK_2BUTTON_PRESS.

	* app/app_procs.c: gimpbrushlist.h doesn't exist any more.

	* app/gimpobject.h: removed the GimpObject typedef because it
	is in apptypes.h

2001-02-07  Hans Breuer <Hans@Breuer.org>

	* */makefile.msc : Gimp 1.3 for win32 (msc) builds and runs at 
	this short moment, it's a fast moving target nowadays :-)

	* app/app_procs.c
	* app/gimpbrush.c
	* app/gimpbrushpipe.c
	* app/gimppattern.c : make sure G_OS_WIN32 is defined (by glib.h 
	inclusion) before actually using it

	* app/plug_in.h 
	* app/datafiles.h : <time.h> for time_t

	* app/tile_swap.c : include <stdio.h> for SEEK_SET

	* app/gimpcontainer.c : use G_GNUC_FUNCTION instead of 
	__FUNCTION__ to allow compiling without gcc

	* app/dialog_handler.h : don't use conditional prototypes
	for gmodule exported function but include <gmodule.h> and
	use G_MODULE_EXPORT in prototype, too.

	* app/gimpobject.h : added typedef for GimpObject

	* libgimp/gimp.def : more exported symbols

	* libgimp/gimpcolorselector.h : #include <gmodule.h> for
	G_MODULE_EXPORT,  sane prototypes.

	* libgimp/gimpui.def : symbol export update, splitted to
	gimpwidgets.def

	* libgimpcolor/gimpcolor.def
	* libgimpmath/gimpmath.def
	* libgimpwidgets/gimpwidgets.def : updated

	* libgimpwidgets/libgimp-glue.c : new file which supports
	real dynamic linking on win32, against exported symbols from
	the application or libgimp. This allows to resolve the
	double dependency for currently 11 functions

2001-02-07  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpdrawable-preview.[ch]: new files formerly known as
	gimpdrawablepreview.[ch].

	This a new naming scheme for methods of objects which live outside
	their object's file. The old name implied a derived object (and
	is in fact now taken by a GimpPreview subclass, see below).

	Further candidates for renaming are e.g. gimpdrawable-invert.[ch],
	gimpimage-convert.[ch] etc.  Finaly, the main objects (image,
	drawable) will go to their own directories together with their
	subclasses.

	* app/apptypes.h: added typedefs for the new objects:

	* app/gimpbrushpreview.[ch]
	* app/gimppatternpreview.[ch]: new subclasses of GimpPreview.

	* app/gimpdrawablepreview.[ch]: contains a subclass of GimpPreview
	now.

	* app/gimpviewable.[ch]: renamed the virtual functions to
	"get_preview" and "get_new_preview" to avoid confusion with the
	new GimpPreview subclasses.

	* app/gimppreview.[ch]: virtualized "create_preview" and
	"create_popup".

	* app/gimpmarshal.[ch]: new marsaller for GimpPreview.

	* app/channels_dialog.c
	* app/fileops.c
	* app/gimpbrush.c
	* app/gimpdnd.c
	* app/gimpdrawable.c
	* app/gimpimage.c
	* app/gimppattern.c
	* app/layer_select.c
	* app/layers_dialog.c
	* app/lc_dialog.c
	* app/nav_window.c
	* app/palette_import.c
	* app/undo_history.c
	* app/pdb/drawable_cmds.c
	* app/pdb/image_cmds.c
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/image.pdb: changed accordingly.

2001-02-06  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainergridview.[ch]
	* app/gimpcontainerlistview.[ch]: added "min_items_x" and
	"min_items_y" parameters to the constructors.

	* app/gimppreview.[ch]: added event handling for "click" and
	"popup", show a dummy popup for testing.

	* app/commands.c: changed accordingly.

	* app/menus.c: added a separator and removed N_() from the test stuff.

2001-02-06  Simon Budig  <simon@gimp.org>

        * libgimpwidgets/gimpdialog.c

	fixed the documentation.

2001-02-06  Simon Budig  <simon@gimp.org>

	* libgimpwidgets/gimpdialog.c
	* app/tools/tool_options_dialog.c

	Implemented a way to connect the delete-event of a gimpdialog
	without adding an extra button. If you pass "_delete_event_"
	as button text (untranslated) the button will not be created.
	
	Removed the tool-options "Close" button. Lots of other Close-Buttons
	wait for their removal.

2001-02-06  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpconstrainedhwrapbox.[ch]: A bad hack on top of another
	hack: The GtkHWrapBox "size_request" method _always_ wants a
	maximal requisition height, which it of course gets from a
	container like the scrolled window, yielding in wrong vscrollbar
	calculation.

	* app/gimpbrush.c: create a nice preview with scale and pipe
	indicators.

	* app/gimpcontainergridview.[ch]: use the GimpConstrainedHWrapBox.

	* app/commands.c
	* app/gimpcontainerlistview.c
	* app/gimppreview.c: cleanup, fixed a crash in the preview idle
	rendering function.

2001-02-06  Sven Neumann  <sven@gimp.org>

	* data/brushes/hsparks.gih
	* data/brushes/vine.gih: seems we had forgotten to convert these
	to the new format.

2001-02-05  Jay Cox  <jaycox@gimp.org>

	* app/gimphistogram.c: Applied patches by Roel Schroeven
	<rschroev@yahoo.com> that fix histogram with mask calculation bug and
	median calculation bug.

2001-02-06  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainergridview.[ch]: add the spacing between the
	previews here instead of expecting an already bordered preview.
	Set the widget background to white.

	* app/gimppattern.c: removed the white border hack.

2001-02-06  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainergridview.[ch]
	* app/gimpcontainerlistview.[ch]
	* app/gimpcontainerview.[ch]: implemented "set_preview_size".

	* app/commands.c: added a preview size slider to the test dialogs.

2001-02-05  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpcontainergridview.[ch]: new widget providing a grid view
	in the style of the current brush and pattern selections.

	* app/gimpcontainerlistview.[ch]
	* app/gimppreview.[ch]: the constructors take "width" and "height"
	parameters now.

	* app/gimpviewable.c: if the viewable is not able to generate
	a static (cached) preview, create a new one and cache it ourselves.

	* app/gimppattern.c: produce a nice preview.

	* app/temp_buf.[ch]: changed temp_buf_copy_area() to take a
	destination offset instead of a border parameter. This function
	was not used at all before.

	* app/commands.[ch]
	* app/menus.c: test dialogs for the grid view.

2001-02-05  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainerlistview.[ch]
	* app/gimpcontainerview.[ch]
	* app/gimpmarshal.[ch]: moved the signal connecting stuff to the
	GimpContainerViewClass which has virtual functions for insert,
	remove and clear now which are implemented by the
	GimpContainerListViewClass.

2001-02-05  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainer.[ch]
	* app/gimplist.[ch]: made the "get_by_name" and the "by_index"
	access functions methods of the GimpContainerClass. The semantic
	of this index is somewhat unclear if we have e.g. a hash table
	implementation but the container needs to have an order for the
	ContainerView. Finally, the ordering will be a feature of the
	ContainerView.

	* app/gimpmarshal.[ch]: marshallers needed for the new methods.

	* app/brushes.[ch]
	* app/patterns.[ch]: the public global brush and pattern lists
	are GimpContainers now (they are really GimpLists of course).

	* app/brush_select.c
	* app/devices.c
	* app/gimpcontainerlistview.c
	* app/gimpcontext.c
	* app/gimpdnd.c
	* app/pattern_select.c
	* app/pdb/brush_select_cmds.c
	* app/pdb/brushes_cmds.c
	* app/pdb/pattern_select_cmds.c
	* app/pdb/patterns_cmds.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb: changed accordingly.

2001-02-05  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h: some new files and data types:

	* app/gimppreview.[ch]: new widgets which provides a view
	of a GimpViewable.

	* app/gimpcontainerview.[ch]: new abstract widget base class for
	views of GimpContainers of GimpViewables

	* app/gimpcontainerlistview.[ch]: (still) simple implementation of
	a list view of the container.

	* app/gimpbrush.[ch]
	* app/gimppattern.[ch]: provide dumb implementations of the
	GimpViewable's "preview" method.

	* app/image_render.c: quick bad hack to enable preview sizes which
	are != "preview_size": Always allocate data chunks for previews up
	to 256 pixels width.

	* app/drawable.c: emit the "incalidate_preview" signal from
	drawable_update(). This may cause useless updates at the moment
	but as we want to move from explicit updates to signal-driven
	model-view stuff it's the right thing (TM).

	* app/commands.[ch]
	* app/interface.c
	* app/menus.c: Added a "Test dialogs" menu to the Toolbox.

	* app/pdb/image_cmds.c
	* libgimp/gimpenums.h
	* plug-ins/script-fu/script-fu-constants.c
	* tools/pdbgen/enums.pl: propagated the new alpha channel stuff
	to the autogenerated files.

2001-02-05  Nick Lamb  <njl195@zepler.org.uk>

	* app/channels_dialog.c
	* app/gimpimage.c
	* app/gimpimage.h: Initial commit of "Alpha" transparency channel

2001-02-04  Nick Lamb  <njl195@zepler.org.uk>

	* app/patterns.c: Missing <string.h> again

2001-02-04  Nick Lamb  <njl195@zepler.org.uk>

	* app/brushes.c: New file == new missing includes! <string.h>

2001-02-04  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h
	* app/gimpviewable.[ch]: new object. Everything that can have a
	preview will be a GimpViewable. The virtual functions are
	"invalidate_preview", "preview" and "preview_new".

	* app/gimpmarshal.[ch]: new marshaller needed for the viewable.

	* app/gimpdrawable.[ch]
	* app/gimpimage.[ch]: derived from GimpViewable. Removed the
	preview stuff from the public interface.

	Made a single boolean out of GimpImage's "comp_preview_valid"
	array because we have only one composite preview.

	* app/gimplayer.c: made the preview stuff private.

	* app/gimppreviewcache.[ch]: removed gimp_preview_scale()...

	* app/temp_buf.[ch]: ...and added it as temp_buf_scale() here.

	* app/gimpdrawablepreview.[ch]: is a private method of
	GimpDrawable now.

	* app/channels_dialog.c
	* app/convert.c
	* app/drawable.c
	* app/fileops.c
	* app/floating_sel.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimpchannel.c
	* app/gimpcontainer.c
	* app/gimpdnd.c
	* app/layer_select.c
	* app/layers_dialog.c
	* app/lc_dialog.c
	* app/nav_window.c
	* app/palette_import.c
	* app/undo.c
	* app/undo_history.c
	* app/pdb/drawable_cmds.c
	* app/pdb/image_cmds.c
	* app/tools/crop.c
	* app/tools/edit_selection.c
	* app/tools/ink.c
	* app/tools/paint_core.c
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/image.pdb
	* po/POTFILES.in: changed accordingly.

2001-02-04  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimppattern.[ch]: new object.

	* app/apptypes.h: added GimpPattern, removed GPattern.

	* app/patterns.[ch]: contains only the "patterns_()" functions for
	the global pattern list, s/pattern_list/global_pattern_list/g

	* app/brushes.[ch]: s/brush_list/global_brush_list/g

	* app/pattern_select.[ch]
	* app/gimpcontext.[ch]: connect to the Patterns' and the pattern
	list's signals.

	* app/brush_select.[ch]
	* app/devices.c
	* app/disp_callbacks.[ch]
	* app/gimpbrush.c
	* app/gimpbrushgenerated.[ch]
	* app/gimpcontextpreview.[ch]
	* app/gimpdnd.[ch]
	* app/indicator_area.c
	* app/pdb/brush_select_cmds.c
	* app/pdb/brushes_cmds.c
	* app/pdb/pattern_select_cmds.c
	* app/pdb/patterns_cmds.c
	* app/tools/bucket_fill.c
	* app/tools/clone.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb
	* po/POTFILES.in: changed accordingly.

2001-02-04  Michael Natterer  <mitch@gimp.org>

	* app/gimpcontainer.[ch]: renamed gimp_container_lookup() back
	to gimp_container_have(). Virtualized the "add", "remove",
	"have" and "foreach" methods and removed the "children" list.

	* app/gimplist.[ch]: derived from GimpContainer now.

	* app/Makefile.am
	* app/gimpdatalist.[ch]: new object: an alphabetically sorted
	GimpList with unique names.

	* app/gimpbrushlist.[ch]: removed. It's job is done by the
	GimpDataList now.

	* app/brushes.[ch]: new files. Contains the "brushes_()" functions
	for the global brush list.

	* app/app_procs.c
	* app/apptypes.h
	* app/brush_select.[ch]
	* app/colormap_dialog.[ch]
	* app/context_manager.c
	* app/devices.c
	* app/gimpbrush.c
	* app/gimpcontext.c
	* app/gimpdnd.c
	* app/info_window.c
	* app/lc_dialog.c
	* app/module_db.c
	* app/nav_window.c
	* app/pdb/brush_select_cmds.c
	* app/pdb/brushes_cmds.c
	* app/tools/by_color_select.c
	* app/tools/paintbrush.c
	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* po/POTFILES.in: changed accordingly.

2001-02-04  Nick Lamb  <njl195@zepler.org.uk>

	* app/gimpdrawablepreview.c: add <stdlib.h> or <string.h> where needed
	* app/gimpobject.c
	* app/gimpui.c
	* app/image_new.c
	* app/layers_dialog.c
	* app/paint_funcs.c
	* app/palette.c
	* app/palette_import.c
	* app/palette_select.c
	* app/tile_manager.c
	* app/toolbox.c
	* app/user_install.c
	* app/tools/by_color_select.c
	* app/tools/curves.c
	* app/tools/measure.c
	* app/tools/shear_tool.c

2001-02-03  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpset.[ch]: removed.

	* app/gimpcontainer.[ch]: some minor fixes, cleanup.

	* app/context_manager.[ch]: made the "image_context" a GimpContainer
	and moved it here...

	* app/appenv.h
	* app/main.c: ...from here.

	* app/app_procs.c
	* app/colormap_dialog.[ch]
	* app/commands.c
	* app/gimage.c
	* app/gimpcontext.c
	* app/gimpimage.c
	* app/info_window.c
	* app/lc_dialog.c
	* app/lut_funcs.c
	* app/module_db.c
	* app/nav_window.c
	* app/palette_import.c
	* app/paths_dialog.c
	* app/pixel_region.c
	* app/scale.c
	* app/scroll.c
	* app/selection.c
	* app/temp_buf.c
	* app/undo.c
	* app/pdb/procedural_db.c
	* app/tools/by_color_select.c
	* app/tools/clone.c
	* app/tools/color_balance.c
	* app/tools/color_picker.c
	* app/tools/convolve.c
	* app/tools/crop.c
	* app/tools/curves.c
	* app/tools/paint_core.c
	* app/tools/transform_core.c: s/GimpSet/GimpContainer/g, removed
	many useless #include "appenv.h".

	* app/gimpdrawablepreview.c
	* app/gdisplay.c: found two badly crashing bugs i have introduced
	with my last changes here.

2001-02-03  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/apptypes.h

	* app/gimpcontainer.[ch]: new (yet unused and untested) object
	which will replace GimpSet, GimpList and GimpBrushList and be the
	container and signal proxy for all collections of GimpObjects.

2001-02-02  Michael Natterer  <mitch@gimp.org>

	* po/POTFILES.in: forgot to rename the files here.

2001-02-01  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpchannel.[ch]
	* app/gimplayer.[ch]: new files moved here by Yosh.

	* app/channel.[ch]
	* app/layer.[ch]: removed.

	* app/gdisplay.c: cleanup stuff.

	* app/[lotsa files].c
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/floating_sel.pdb
	* tools/pdbgen/pdb/layer.pdb: changed includes accordingly.

2001-01-31  Seth Burgess <sjburges@gimp.org>
	
	* plug-ins/perl/po/POTFILES.in : removed bilb/lib/Gimp.pm from list,
	as this is a file generated during the build!!

2001-01-30  Michael Natterer  <mitch@gimp.org>

	* app/image_render.[ch]: prefixed all global variables with
	"render_" (we had a global variable named "temp_buf", brrrr),
	general cleanup.

	* app/colormap_dialog.c
	* app/layers_dialog.c: changed accordingly.

2001-01-29  Michael Natterer  <mitch@gimp.org>

	* app/dialog_types.h: removed because it was unused.

	* app/Makefile.am: removed dialog_types.h, reordered the file list
	to group together what may go to "pixmaps", "widgets" and
	"lowlevel" (???) directories.

2001-01-29  Michael Natterer  <mitch@gimp.org>

	* app/channel.[ch]: removed channel_update() because channel.c
	should not call gdisplays_update(). Use drawable_update() and
	a subsequent gdisplays_update() instead.

	* app/qmask.c: do as described above.

	* app/channel_ops.c
	* app/channels_dialog.c
	* app/commands.c
	* app/convert.c
	* app/disp_callbacks.c
	* app/equalize.c
	* app/fileops.c
	* app/floating_sel.c
	* app/gdisplay.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimpdnd.c
	* app/gimpdrawablepreview.c
	* app/gimphistogram.c
	* app/gimplayermask.c
	* app/global_edit.c
	* app/histogramwidget.c
	* app/histogramwidget.h
	* app/image_map.c
	* app/image_new.c
	* app/invert.c
	* app/layer.c
	* app/layer_select.c
	* app/paths_dialog.c
	* app/plug_in.c
	* app/scan_convert.c
	* app/undo_history.c
	* app/xcf.c: include gimpdrawable.h instead of drawable.h where
	possible, removed useless includes, minor other cleanups.

2001-01-29  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpdrawablepreview.[ch]: new file with one set of functions...

	* app/channel.[ch]
	* app/layer.[ch]: ...instead of having everything duplicated three
	times here.

	* app/channels_dialog.c
	* app/floating_sel.c
	* app/floating_sel.h
	* app/gimpdnd.c
	* app/gimpimage.c
	* app/layer_select.c
	* app/layers_dialog.c
	* app/selection.c
	* app/pdb/drawable_cmds.c
	* tools/pdbgen/pdb/drawable.pdb: changed accordingly, cleanup.

2001-01-29  Sven Neumann  <sven@gimp.org>

	* HACKING: defined The GIMP Hackordnung (ACHTUNG!)

2001-01-29  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/undo_history.h: new file.

	* app/apptypes.h: removed the "Channel" typedef.

	* app/channel.[ch]: renamed all functions to gimp_channel_*()

	* app/channel_ops.c
	* app/channels_dialog.c
	* app/commands.c
	* app/disp_callbacks.c
	* app/gdisplay.c
	* app/gimage_mask.[ch]
	* app/gimpdnd.c
	* app/gimphistogram.c
	* app/gimpimage.[ch]
	* app/global_edit.c
	* app/layer.c
	* app/layers_dialog.c
	* app/qmask.c
	* app/scan_convert.c
	* app/scan_convert.h
	* app/toolbox.c
	* app/undo.[ch]
	* app/undo_history.c
	* app/xcf.[ch]
	* app/pdb/channel_cmds.c
	* app/pdb/color_cmds.c
	* app/pdb/drawable_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/pdb_glue.h
	* app/pdb/selection_cmds.c
	* app/pdb/tools_cmds.c
	* app/tools/bezier_select.c
	* app/tools/bezier_selectP.h
	* app/tools/blend.c
	* app/tools/bucket_fill.c
	* app/tools/by_color_select.c
	* app/tools/crop.c
	* app/tools/ellipse_select.c
	* app/tools/free_select.c
	* app/tools/fuzzy_select.c
	* app/tools/fuzzy_select.h
	* app/tools/iscissors.c
	* app/tools/rect_select.c
	* app/tools/text_tool.c
	* app/tools/transform_core.c
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/selection.pdb
	* tools/pdbgen/pdb/tools.pdb: changed accordingly.

2001-01-29  Michael Natterer  <mitch@gimp.org>

	* app/pdb/Makefile.am
	* app/pdb/pdb_glue.h: new file which contains the stuff that makes
	PDB code generation easier but is ugly when used in the app
	(see my comment in the log below).

	Contains:
	gimp_drawable_[layer|layer_mask|channel]()
	[channel|gimp_layer]_[set|get]_[name|tattoo]()

	* app/channel.[ch]
	* app/channels_dialog.c
	* app/gimpdrawable.h
	* app/gimpimage.c
	* app/gimplayermask.h
	* app/layer.c
	* app/layer.h
	* app/toolbox.c
	* app/undo.c
	* app/xcf.c
	* app/pdb/channel_cmds.c
	* app/pdb/drawable_cmds.c
	* app/pdb/layer_cmds.c
	* app/pdb/selection_cmds.c
	* app/tools/bezier_select.c
	* app/tools/bucket_fill.c
	* app/tools/by_color_select.c
	* app/tools/ellipse_select.c
	* app/tools/free_select.c
	* app/tools/fuzzy_select.c
	* app/tools/iscissors.c
	* app/tools/rect_select.c
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/layer.pdb
	* tools/pdbgen/pdb/selection.pdb: changed accordingly.

2001-01-29  Sven Neumann  <sven@gimp.org>

	* AUTHORS
	* app/authors.h
	* app/pdb/channel_cmds.c
	* app/pdb/internal_procs.c
	* app/pdb/selection_cmds.c
	* libgimp/gimpchannel_pdb.c
	* libgimp/gimpchannel_pdb.h
	* libgimp/gimpselection_pdb.c
	* libgimp/gimpselection_pdb.h
	* tools/authorsgen/contributors
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/selection.pdb: applied a patch from Adam Spiers 
	<adam@spiers.net> which adds two new PDB functions: selection_combine 
	and channel_combine_masks.

2001-01-29  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h: removed the "Layer" typedef.

	* app/layer.[ch]: removed the defines of the old function names.

	Don't implement methods of the parent class (get_name, get_tattoo, ...)
	but define them as macros. They will go to a separate "pdb_glue.h"
	header because they are used only by the PDB to simplify code
	generation (no application file should say gimp_layer_get_tattoo()
	but always gimp_drawable_get_tatoo()).

	* app/channel.h
	* app/channel_ops.c
	* app/channels_dialog.c
	* app/commands.c
	* app/convert.c
	* app/disp_callbacks.c
	* app/floating_sel.[ch]
	* app/gdisplay.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimage_mask.h
	* app/gimpdnd.c
	* app/gimpdrawable.h
	* app/gimpimage.[ch]
	* app/gimplayermask.h
	* app/global_edit.c
	* app/image_new.c
	* app/layer_select.c
	* app/layers_dialog.c
	* app/resize.c
	* app/undo.c
	* app/xcf.[ch]
	* app/pdb/drawable_cmds.c
	* app/pdb/floating_sel_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/layer_cmds.c
	* app/tools/bucket_fill.c
	* app/tools/by_color_select.c
	* app/tools/clone.c
	* app/tools/crop.c
	* app/tools/edit_selection.c
	* app/tools/ink.c
	* app/tools/move.c
	* app/tools/paint_core.c
	* app/tools/rect_select.c
	* app/tools/text_tool.c
	* app/tools/transform_core.c
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/floating_sel.pdb
	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/layer.pdb: changed accordingly, cleanup.

2001-01-28  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimplayermask.[ch]: new files cut out of layer.[ch]. Renamed
	all functions to gimp_layes_mask_*(). removed artefacts like
	the ref/unref functions.

	* app/apptypes.h: removed the "LayerMask" typedef.

	* app/layer.[ch]: removed the layer mask stuff and renamed all
	functions to gimp_layer_*(). Added temporary typedefs for the old
	function names. The layer mask preview stuff is still there (should
	probably go to new layer_preview.{ch] files).

	* app/gimpimage.[ch]: added
	gimp_image_invalidate_[layer|channel]_previews() formerly known as
	[layer|channel]_invalidate_previews().

	* app/channel.[ch]: moved channel_layer_alpha() and 
	channel_layer_mask() here because they are methods of the Channel.

	* app/channel_ops.c
	* app/convert.c
	* app/disp_callbacks.c
	* app/fileops.c
	* app/floating_sel.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimpdnd.c
	* app/global_edit.c
	* app/layers_dialog.c
	* app/preferences_dialog.c
	* app/toolbox.c
	* app/undo.c
	* app/xcf.c
	* app/pdb/drawable_cmds.c
	* app/pdb/image_cmds.c
	* app/pdb/layer_cmds.c
	* app/tools/crop.c
	* app/tools/text_tool.c
	* app/tools/transform_core.c
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/drawable.pdb: changed accordingly, cleanup.

2001-01-26  Daniel Egger  <egger@suse.de>

	* plug-ins/common/iwarp.c: Cleaned up code and
	implemented 2 small optimisations.

2001-01-26  Daniel Egger  <egger@suse.de>

	* libgimpmath/gimpvector.c:
	* libgimpmath/gimpvector.h: Added pass-by-value functions
	to allow code simplifications and functionchaining.

Thu Jan 25 10:22:39 PST 2001 Manish Singh <yosh@gimp.org>

	* tools/pdbgen/pdb/channel.pdb: resurrected channel_set_color

2001-01-25  Michael Natterer  <mitch@gimp.org>

	* libgimp/Makefile.am
	* libgimp/gimp.h
	* libgimp/gimpcompat.h: removed.

	The GIMP 1.0 API is not supported any more !!!

	* plug-ins/print/print-image-gimp.c
	* plug-ins/print/print.c
	* plug-ins/print/print_gimp.h: a quick fix for old compat cruft.
	This is temporary and will be replaced by Gimp-Print's development
	version.

	* plug-ins/xjt/xjpeg.c: use GimpRGB.

2001-01-25  Sven Neumann  <sven@gimp.org>

	* app/libgimp_glue.[ch]: cleanup

	* app/pdb/channel_cmds.c
	* app/pdb/palette_cmds.c
	* app/pdb/tools_cmds.c
	* tools/pdbgen/app.pl
	* tools/pdbgen/lib.pl
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/palette.pdb
	* tools/pdbgen/pdb/tools.pdb: fixed pdbgen code for color type. Seems
	to actually work now.

	* TODO.xml: updated

	* plug-ins/Makefile.am: disabled build of gimp-perl until it has 
	catched up with the API changes in libgimp 

2001-01-25  Sven Neumann  <sven@gimp.org>

	* libgimpwidgets/gimpwidgets.c (gimp_mem_size_entry_new): merged fix 
	from gimp-1-2 branch 

2001-01-25  Sven Neumann  <sven@gimp.org>

	* tools/pdbgen/lib.pl
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/palette.pdb
	* tools/pdbgen/pdb/tools.pdb: changed these with the help of Yosh. 
	PDB functions take GimpRGB as color type now.

	* app/plug_in.c
	* app/pdb/channel_cmds.c
	* app/pdb/internal_procs.c
	* app/pdb/palette_cmds.c
	* app/pdb/procedural_db.[ch]
	* app/pdb/tools_cmds.c
	* libgimp/gimp.[ch]
	* libgimp/gimpchannel.[ch]
	* libgimp/gimpchannel_pdb.[ch]
	* libgimp/gimppalette_pdb.[ch]
	* libgimp/gimpprotocol.[ch]
	* libgimp/gimptools_pdb.[ch]: incremented Gimp protocol version
	and changed color type from array of chars to GimpRGB.

	* libgimp/Makefile.am
	* libgimp/gimppalette.[ch]: removed these files again 

	* app/libgimp_glue.[ch]
	* libgimpwidgets/gimpcolorbutton.c
	* plug-ins/Lighting/lighting_main.c
	* plug-ins/Lighting/lighting_preview.c
	* plug-ins/MapObject/mapobject_image.c
	* plug-ins/MapObject/mapobject_main.c
	* plug-ins/MapObject/mapobject_preview.c
	* plug-ins/common/apply_lens.c
	* plug-ins/common/blinds.c
	* plug-ins/common/borderaverage.c
	* plug-ins/common/checkerboard.c
	* plug-ins/common/colorify.c
	* plug-ins/common/colortoalpha.c
	* plug-ins/common/cubism.c
	* plug-ins/common/exchange.c
	* plug-ins/common/film.c
	* plug-ins/common/gif.c
	* plug-ins/common/grid.c
	* plug-ins/common/mapcolor.c
	* plug-ins/common/mblur.c
	* plug-ins/common/nova.c
	* plug-ins/common/papertile.c
	* plug-ins/common/png.c
	* plug-ins/common/polar.c
	* plug-ins/common/psd.c
	* plug-ins/common/semiflatten.c
	* plug-ins/common/sinus.c
	* plug-ins/common/sparkle.c
	* plug-ins/common/tiff.c
	* plug-ins/common/vpropagate.c
	* plug-ins/common/warp.c
	* plug-ins/common/whirlpinch.c
	* plug-ins/gap/gap_filter_iterators.c
	* plug-ins/gap/gap_mov_dialog.c
	* plug-ins/gdyntext/gdyntext.c
	* plug-ins/gfig/gfig.c
	* plug-ins/gfli/gfli.c
	* plug-ins/ifscompose/ifscompose.c
	* plug-ins/maze/handy.c
	* plug-ins/mosaic/mosaic.c
	* plug-ins/pagecurl/pagecurl.c
	* plug-ins/script-fu/script-fu-scripts.c
	* plug-ins/script-fu/script-fu.c
	* plug-ins/xjt/xjt.c: changed accordingly. A few plug-ins need
	to be looked at more closely after this change. I tried to put 
	FIXME comments into those.

2001-01-24  Michael Natterer  <mitch@gimp.org>

	* Makefile.am
	* configure.in
	* gimptool.in: added the new library below.

	* libgimpwidgets/Makefile.am
	* libgimpwidgets/gimpchainbutton.[ch]
	* libgimpwidgets/gimpcolorarea.[ch]
	* libgimpwidgets/gimpcolorbutton.[ch]
	* libgimpwidgets/gimpdialog.[ch]
	* libgimpwidgets/gimpfileselection.[ch]
	* libgimpwidgets/gimphelpui.[ch]
	* libgimpwidgets/gimppatheditor.[ch]
	* libgimpwidgets/gimppixmap.[ch]
	* libgimpwidgets/gimpquerybox.[ch]
	* libgimpwidgets/gimpsizeentry.[ch]
	* libgimpwidgets/gimpunitmenu.[ch]
	* libgimpwidgets/gimpwidgets.[ch]
	* libgimpwidgets/gimpwidgets.def
	* libgimpwidgets/gimpwidgetstypes.h: new shared library.

	Currently there are some ugly dependencies into libgimp. These
	will be removed and go to a "libgimpglue" library which will be
	a library for functions which share a common interface between
	plug-ins and the app but have different implementations.

	Include "libgimp/gimpunit.h" from "libgimpwidgets/gimpwidgetstypes.h"
	to simulate this upcoming separation.

	* libgimp/Makefile.am
	* libgimp/gimpchainbutton.[ch]
	* libgimp/gimpcolorarea.[ch]
	* libgimp/gimpcolorbutton.[ch]
	* libgimp/gimpdialog.[ch]
	* libgimp/gimpfileselection.[ch]
	* libgimp/gimphelpui.[ch]
	* libgimp/gimppatheditor.[ch]
	* libgimp/gimppixmap.[ch]
	* libgimp/gimpquerybox.[ch]
	* libgimp/gimpsizeentry.[ch]
	* libgimp/gimpunitmenu.[ch]
	* libgimp/gimpwidgets.[ch]: removed from here.

	* libgimp/gimpui.h
	* libgimp/gimpuitypes.h
	* libgimp/makefile.mingw.in
	* libgimp/makefile.msc: changed accordingly.

	* app/[all ui files]
	* app/pdb/palette_cmds.c
	* app/pdb/tools_cmds.c
	* tools/pdbgen/pdb/palette.pdb
	* tools/pdbgen/pdb/tools.pdb: #include "libgimpwidgets/gimpwidgets.h"
	and removed useless includes.

	* app/apptypes.h: #include "libgimpwidgets/gimpwidgetstypes.h"

	* app/Makefile.am
	* plug-ins/[all makefiles which link against libgimpui]:
	link against libgimpwidgets.la

	* po-libgimp/POTFILES.in: changed file locations.

2001-01-24  Simon Budig  <simon@gimp.org>

	* plug-ins/common/colortoalpha.c: wrapped some actions in a
	gimp_undo_push_group_start/end, so you dont have to undo
	two steps when the plugin adds an alpha channel.

2001-01-24  Michael Natterer  <mitch@gimp.org>

	* libgimpwidgets/.cvsignore
	* libgimpwidgets/Makefile.am
	* libgimpwidgets/makefile.mingw.in
	* libgimpwidgets/makefile.msc: library stub. Please ignore for now :)

2001-01-24  Sven Neumann  <sven@gimp.org>

	* app/paint_funcs.c: brought the array used for optimization back in
	sync with the LayerModeEffects enum. This was causing really strange
	rendering errors. Started to clean up the file up and removed the 
	unused layer_mode names.
	
	* app/tile.[ch]
	* plug-ins/common/colortoalpha.c: small cleanups

	* po/POTFILES.in: removed app/paint_funcs.c

2001-01-24  Sven Neumann  <sven@gimp.org>

	* app/tools/airbrush.c
	* app/tools/by_color_select.c
	* app/tools/color_picker.c: include gimpcolor/gimpcolor.h

	* libgimpcolor/gimprgb.c: optimized compositing functions.
	
	* plug-ins/Lighting/lighting_preview.c
	* plug-ins/MapObject/mapobject_preview.c: use gimp_rgb_composite 
	functions instead of doing the blending manually

	* plug-ins/MapObject/map_object_shade.c: fixed a rendering bug when
	transparent_background == FALSE
	
2001-01-24  Michael Natterer  <mitch@gimp.org>

	* Makefile.am
	* configure.in
	* gimptool.in: added stuff for the new library below.

	* libgimpmath/.cvsignore
	* libgimpmath/Makefile.am
	* libgimpmath/gimpmath.def
	* libgimpmath/gimpmath.h
	* libgimpmath/gimpmathtypes.h
	* libgimpmath/gimpmatrix.c
	* libgimpmath/gimpmatrix.h
	* libgimpmath/gimpvector.c
	* libgimpmath/gimpvector.h
	* libgimpmath/makefile.mingw.in
	* libgimpmath/makefile.msc: new shared library. Depends on glib only.

	* libgimp/Makefile.am
	* libgimp/gimp.def
	* libgimp/gimp.h: removed the math stuff.

	* libgimp/gimpmath.h
	* libgimp/gimpmatrix.[ch]
	* libgimp/gimpvector.[ch]: removed.

	* app/Makefile.am
	* plug-ins/Lighting/Makefile.am
	* plug-ins/MapObject/Makefile.am
	* plug-ins/pagecurl/Makefile.am: link against libgimpmath.la

	* app/[many files]
	* libgimpcolor/gimpcolorspace.c
	* libgimpcolor/gimprgb.c
	* libgimp/gimpadaptivesupersample.c
	* libgimp/gimpbilinear.c
	* libgimp/gimpwidgets.c
	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c
	* plug-ins/libgck/gck/gckcolor.c
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/image.pdb: include "libgimpmath/gimpmath.h",
	removed the remaining includes of the old color stuff.

2001-01-23  Michael Natterer  <mitch@gimp.org>

	* Makefile.am
	* configure.in
	* gimptool.in: added stuff for the new library below.

	* libgimpcolor/.cvsignore
	* libgimpcolor/Makefile.am
	* libgimpcolor/gimpcolor.h
	* libgimpcolor/gimpcolorspace.c
	* libgimpcolor/gimpcolorspace.h
	* libgimpcolor/gimpcolortypes.h
	* libgimpcolor/gimphsv.c
	* libgimpcolor/gimphsv.h
	* libgimpcolor/gimprgb.c
	* libgimpcolor/gimprgb.h: new shared library which both the app
	and plug-ins link against. The library depends only on glib.

	* libgimpcolor/gimpcolor.def
	* libgimpcolor/makefile.mingw.in
	* libgimpcolor/makefile.msc: added Win32 build files which
	definitely don't work.

	* libgimp/Makefile.am
	* libgimp/gimpcolor.[ch]
	* libgimp/gimpcolorspace.[ch]: removed.

	* libgimp/gimp.h
	* libgimp/gimpadaptivesupersample.c
	* libgimp/gimpbilinear.c
	* libgimp/gimppalette.c
	* libgimp/gimptypes.h: include the stuff from libgimpcolor.

	Plug-Ins don't need to include <libgimpcolor/gimpcolor.h>
	explicitely. LibGimp depends on libgimpcolor and thus also includes
	it's headers.

	* libgimp/gimp.def
	* libgimp/makefile.mingw.in: fiddled around with Win32 stuff...

	* app/Makefile.am: link against libgimpcolor.la

	* app/apptypes.h: include "libgimpcolor/gimpcolortypes.h"

	* app/asupsample.c
	* app/channels_dialog.c
	* app/colormap_dialog.c
	* app/commands.c
	* app/convert.c
	* app/devices.c
	* app/disp_callbacks.c
	* app/drawable.c
	* app/gimpcontext.c
	* app/gimpdnd.c
	* app/gimpimage.c
	* app/gimppalette.c
	* app/gimprc.c
	* app/gradient.c
	* app/libgimp_glue.c
	* app/palette.c
	* app/palette_import.c
	* app/qmask.c
	* app/xcf.c
	* app/tools/paint_core.c
	* app/tools/paintbrush.c
	* app/tools/pencil.c: include "libgimpcolor/gimpcolor.h" before all
	gimp includes because it's a standalone library.

	* plug-ins/FractalExplorer/Makefile.am
	* plug-ins/Lighting/Makefile.am
	* plug-ins/MapObject/Makefile.am
	* plug-ins/bmp/Makefile.am
	* plug-ins/common/Makefile.am
	* plug-ins/common/mkgen.pl
	* plug-ins/dbbrowser/Makefile.am
	* plug-ins/faxg3/Makefile.am
	* plug-ins/fits/Makefile.am
	* plug-ins/flame/Makefile.am
	* plug-ins/fp/Makefile.am
	* plug-ins/gap/Makefile.am
	* plug-ins/gdyntext/Makefile.am
	* plug-ins/gfig/Makefile.am
	* plug-ins/gflare/Makefile.am
	* plug-ins/gfli/Makefile.am
	* plug-ins/gimpressionist/Makefile.am
	* plug-ins/helpbrowser/Makefile.am
	* plug-ins/ifscompose/Makefile.am
	* plug-ins/imagemap/Makefile.am
	* plug-ins/maze/Makefile.am
	* plug-ins/mosaic/Makefile.am
	* plug-ins/pagecurl/Makefile.am
	* plug-ins/print/Makefile.am
	* plug-ins/rcm/Makefile.am
	* plug-ins/script-fu/Makefile.am
	* plug-ins/sel2path/Makefile.am
	* plug-ins/sgi/Makefile.am
	* plug-ins/webbrowser/Makefile.am
	* plug-ins/xjt/Makefile.am: add libgimpcolor.la to LDADD.

	* INSTALL: don't recommend to --disable-shared for development.

	* TODO.xml: increased some percentages, added plug-in help stuff.

2001-01-23  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/libgimp_glue.[ch]: new files containing stuff needed for
	linking libgimp stuff against the app. This file is not needed
	at all for the app itself and should never be included.

	* app/gimpcontext.[ch]: removed from here.

	* libgimp/Makefile.am
	* libgimp/gimp.h
	* libgimp/gimppalette.[ch]: new files for the PDB wrapping
	gimp_palette_*_rgb() stuff.

	* libgimp/gimpcolor.[ch]: removed the PDB dependency from here.

2001-01-23  Sven Neumann  <sven@gimp.org>

	* app/paint_funcs.c
	* app/pixel_processor.c
	* app/tile.c
	* app/tile_cache.c
	* app/tile_manager.c
	* app/tile_pvt.h
	* app/tile_swap.[ch]: cleanups, indentation

2001-01-23  Sven Neumann  <sven@gimp.org>

	* app/convert.c
	* app/floating_sel.c
	* app/gimage_mask.c
	* app/gimpimage.c
	* app/global_edit.c
	* app/image_map.c
	* app/image_new.c
	* app/layer.c
	* app/paint_funcs.c
	* app/pixel_region.c
	* app/tile_manager.c
	* app/tile_manager.h
	* app/tile_manager_pvt.h
	* app/undo.c
	* app/xcf.c
	* app/pdb/tools_cmds.c
	* app/tools/flip_tool.c
	* app/tools/perspective_tool.c
	* app/tools/rotate_tool.c
	* app/tools/scale_tool.c
	* app/tools/shear_tool.c
	* app/tools/text_tool.c
	* app/tools/transform_core.c
	* tools/pdbgen/pdb/tools.pdb: made all files execpt xcf.c use the
	TileManager accessor functions instead of accessing the TileManager
	struct directly.

2001-01-23  Sven Neumann  <sven@gimp.org>

	* TODO.xml: updated, added sections about libgck and script-fu

2001-01-23  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/edit_selection.[ch]: removed.

	* app/tools/Makefile.am
	* app/tools/edit_selection.[ch]: added.

	* po/POTFILES.in: changed.

2001-01-23  Michael Natterer  <mitch@gimp.org>

	* libgimp/Makefile.am
	* libgimp/gimp.h
	* libgimp/gimpadaptivesupersample.[ch]
	* libgimp/gimpbilinear.[ch]: new files cut out of LibGCK.

	* plug-ins/libgck/gck/gck.h
	* plug-ins/libgck/gck/gckcolor.c: removed the bilinear and
	supersample code.

	* app/apptypes.h
	* app/asupsample.[ch]
	* app/tools/blend.c: made the adaptive_supersample interface the
	same as in libgimp but don't use the libgimp function yet.

	The libgimp function takes total transparancy into account when
	weighting the 4 resulting RGBA values, the app function always
	weights them equally. Please have a look at the code.

	* plug-ins/Lighting/lighting_image.c
	* plug-ins/MapObject/mapobject_apply.c
	* plug-ins/MapObject/mapobject_image.[ch]: changed accordingly.

	* app/disp_callbacks.c: paranoia cleanups.

2001-01-22  Sven Neumann  <sven@gimp.org>

	* app/gdisplay.c
	* app/gdisplay_ops.c
	* app/info_window.c
	* app/layer.c
	* app/menus.c
	* app/nav_window.c
	* app/path.c
	* app/scroll.[ch]: removed inclusion of superfluous headers and
	cleaned up the source a little.

2001-01-22  Michael Natterer  <mitch@gimp.org>

	* app/tools/Makefile.am
	* app/tools/tool_options_dialog.[ch]: new files for the tool
	options dialog.

	* app/tools/tools.[ch]: removed from here.

	* app/app_procs.c
	* app/commands.c
	* app/toolbox.c
	* po/POTFILES.in: adjusted.

2001-01-22  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/selection_options.h: removed.

	* app/tools/Makefile.am
	* app/tools/selection_options.h: added.

	* app/tools/selection_options.c
	* app/tools/paint_options.c: new files cut out of tool_options.c

	* app/tools/tool_options.c: removed the paint & selection
	options code.

	* app/tools/tool_options.h
	* app/tools/paint_options.h: cleanup.

	* po/POTFILES.in: added selection_options.c and paint_options.c

2001-01-22  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/toolbox.[ch]: new files containing most of the code
	from app/interface.[ch]

	* app/interface.[ch]: only contains create_display_shell() now.
	Needs to be somehow merged with other arbitrarily named display
	files around.

	* app/app_procs.c
	* app/menus.c
	* po/POTFILES.in: changed accordingly.

	* app/asupsample.c
	* app/gradient.c
	* app/tile.c: cleanup.

2001-01-22  Sven Neumann  <sven@gimp.org>

	* configure.in
	* app/Makefile.am
	* app/tools/Makefile.am: moved all tool sources to app/tools

	* app/app_procs.c
	* app/brush_select.c
	* app/commands.c
	* app/context_manager.c
	* app/convert.c
	* app/cursorutil.c
	* app/devices.c
	* app/disp_callbacks.c
	* app/edit_selection.c
	* app/gdisplay.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimpbrush.c
	* app/gimpbrushgenerated.c
	* app/gimpbrushpipe.c
	* app/gimpdnd.c
	* app/gimprc.c
	* app/global_edit.c
	* app/info_window.c
	* app/interface.c
	* app/menus.c
	* app/path.c
	* app/paths_dialog.c
	* app/paths_dialogP.h
	* app/scale.c
	* app/scroll.c
	* app/undo.c
	* app/pdb/color_cmds.c
	* app/pdb/text_tool_cmds.c
	* app/pdb/tools_cmds.c
	* po/POTFILES.in
	* tools/kernelgen.c
	* tools/pdbgen/Makefile.am
	* tools/pdbgen/enums.pl
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/text_tool.pdb
	* tools/pdbgen/pdb/tools.pdb: changed accordingly	

2001-01-22  Daniel Egger  <egger@suse.de>

	* libgimp/gimpcolor.c: #include "gimppalette_pdb.h"
	to shut up the compiler.

Sun Jan 21 15:23:27 PST 2001 Manish Singh <yosh@gimp.org>

	* tools/pdbgen/enumgen.pl: handle subdirs

2001-01-21  Simon Budig  <simon@gimp.org>

	* app/pdb/README: Added another warning about autogenerated files

2001-01-21  Sven Neumann  <sven@gimp.org>

	* tools/pdbgen/app.pl: changed destdir for app-side PDB wrappers to
	app/pdb

	* app/Makefile.am: don't create libgimpim.a in app.

	* configure.in
	* app/pdb/Makefile.am
	* app/pdb/internal_procs.[ch]
	* app/pdb/procedural_db.[ch]
	* app/pdb/*_cmds.c: moved PDB functions into their own subdirectory.

	* app/internal_procs.[ch]
	* app/procedural_db.[ch]
	* app/*_cmds.c: removed here

	* app/app_procs.c
	* app/batch.c
	* app/bezier_select.c
	* app/brush_select.c
	* app/bucket_fill.c
	* app/colormap_dialog.c
	* app/fileops.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimphelp.c
	* app/gradient_select.c
	* app/info_window.c
	* app/invert.c
	* app/lc_dialog.c
	* app/menus.c
	* app/nav_window.c
	* app/palette_import.c
	* app/paths_dialog.c
	* app/pattern_select.c
	* app/plug_in.h
	* app/text_tool.c
	* app/xcf.c
	* po/POTFILES.in: changed accordingly
	
2001-01-21  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/palette_import.[ch]: moved the palette_import dialog to
	it's own file.

	* app/gimage.c
	* app/palette.[ch]
	* app/paletteP.h: changed accordingly.

2001-01-21  Simon Budig  <simon@gimp.org>

	* modules/colorsel_triangle.c: Fixed the "disappearing
	triangle" bug. The triangle happens to be more triangular
	now too...   :-)

2001-01-21  Sven Neumann  <sven@gimp.org>

	* plug-ins/script-fu/Makefile.am: removed interp_md5.[ch] from
	the build because it was not used at all.

	* plug-ins/script-fu/script-fu-console.c
	* plug-ins/script-fu/script-fu-scripts.c
	* plug-ins/script-fu/script-fu-server.c
	* plug-ins/script-fu/script-fu.c: even more pedantic indentation

2001-01-21  Michael Natterer  <mitch@gimp.org>

	* app/palette_entries.h: removed.
	* app/gimppalette.[ch]: new object derived from GimpObject. Just
	used as a container at the moment (no signals or stuff used).

	* app/palette.[ch]: changed almost every line except in the
	import_dialog part.

	* app/Makefile.am
	* app/apptypes.h
	* app/convert.[ch]
	* app/gimpdnd.h
	* app/paletteP.h
	* app/palette_select.[ch]
	* app/convert_cmds.c
	* tools/pdbgen/pdb/convert.pdb: changed accordingly.

	* app/gimpdrawable.c: set klass->removed to NULL.

2001-01-21  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.[ch]: added a "title" parameter to the
	constructor. Pass a pointer to the ColorNotebook to the callback.
	Added a _get_color() function.

	* app/color_panel.[ch]: added a "title" parameter which is used
	for the notebook.

	* app/channels_dialog.c
	* app/color_area.c
	* app/colormap_dialog.c
	* app/convert.c
	* app/palette_select.c
	* app/qmask.c: changed the calls to color_notebook_new(),
	color_panel_new() and the ColorNotebook callbacks.

	* app/gradient.c: use a ColorNotebook instead of GtkColorSelection.

	* app/palette.c
	* app/palette_entries.h: use GimpRGB to store the color in the
	PaletteEntry.

	* po/POTFILES.in: added app/color_area.c

2001-01-20  Michael Natterer  <mitch@gimp.org>

	* app/gradient.[ch]: made gradient_get_color_at() use GimpRGB.

	* app/airbrush.c
	* app/blend.c
	* app/gimpcontextpreview.c
	* app/gradient_select.c
	* app/paint_core.[ch]
	* app/paintbrush.c
	* app/palette.c
	* app/pencil.c

	* app/gradients_cmds.c
	* app/gradient_select_cmds.c
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb: changed accordingly.

2001-01-20  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.[ch]
	* app/gimpcontext.[ch]
	* app/gimpdnd.h: made the _set_color() and _drop_color() functions
	take a "const GimpRGB *" parameter.

	* app/by_color_select.c
	* app/channels_dialog.c
	* app/color_area.c
	* app/color_panel.c
	* app/color_picker.c
	* app/color_select.c
	* app/colormap_dialog.c
	* app/disp_callbacks.[ch]
	* app/gimpimage.h
	* app/palette.c: changed accordingly.

	* app/gradient.c
	* app/gradientP.h
	* app/gradient_header.h: use GimpRGB internally.

2001-01-20  Michael Natterer  <mitch@gimp.org>

	* app/gimpdrawable.[ch]: made gimp_drawable_fill() use GimpRGB,
	added some "const", delete unused function, reordered some
	functions.

	* app/drawable.c
	* app/qmask.c: follow the change.

2001-01-19  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/appenums.h
	* app/apptypes.h: moved all enums from apptypes.h to the new file
	appenums.h

	* tools/pdbgen/Makefile.am
	* tools/pdbgen/app.pl
	* tools/pdbgen/enums.pl: changed accordingly. Removed some files
	from the list of files to scan for enums.

	* TODO.xml: added two minor UI issues.

2001-01-18  Sven Neumann  <sven@gimp.org>

	* plug-ins/common/gqbist.c: fixed typo, adjusted coding style

2001-01-17  Daniel Egger  <egger@suse.de>

	* PLUGIN_MAINTAINERS: Entered Jens Christian Restemeier as maintainer
	as wished.

	* plug-ins/common/gqbist.c: Applied a patch by Jens Christian 
	Restemeier <jrestemeier@currantbun.com> which fixes a calculus bug, 
	adds antialiasing and beautifies the code quite a bit.

2001-01-17  Sven Neumann  <sven@gimp.org>

	* INSTALL: adjusted version numbers, updated, added warning
	
	* configure.in: changed .gimp to .gimp-1.3

2001-01-17  Michael Natterer  <mitch@gimp.org>

	* app/gimprc.c: factored the color parsing code out to the new
	function parse_color() and made it parse RGB, RGBA, HSV and HSVA
	colors.

	* app/color_notebook.c
	* app/devices.c
	* app/session.c: changed accordingly.

2001-01-16  Sven Neumann  <sven@gimp.org>

	* app/color_notebook.c: fixed my last change

	* libgimp/gimpcolorarea.c: swapped opaque and transparent areas
	
2001-01-16  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolorspace.c: fixed RGB to HSV routine

	* app/color_notebook.c: tweaked dialog layout a little, disabled
	toggle_buttons if the colorselector does not implement the set_channel
	method.

	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c: removed empty set_channel methods

2001-01-16  Sven Neumann  <sven@gimp.org>

	* app/devices.c: don't show the alpha value of fore/background colors

2001-01-16  Michael Natterer  <mitch@gimp.org>

	* app/color_area.c
	* app/color_notebook.[ch]
	* app/color_panel.c
	* app/gimprc.c
	* app/session.c: store the color history in sessionrc.

	* app/channels_dialog.c: tweaked the "new channel" and "channel
	atributes" dialogs a bit.

Mon Jan 15 17:22:30 PST 2001 Manish Singh <yosh@gimp.org>

	* app/fileops.c: correct spelling of "lose" in revert dialog

2001-01-16  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.c: added a global color history of 16 colors.
	The "Add" button uses neither LRU nor pure right-shift order but
	something in between. The history is scheduled to go to sessionrc.

2001-01-15  Sven Neumann  <sven@gimp.org>

	* app/devices.c: use a GimpColorArea for the foreground color in
	the Device Status dialog and added a background color

2001-01-15  Sven Neumann  <sven@gimp.org>

	* app/color_picker.c: enable drags from and disable drops to
	the ColorArea in the color_info dialog. Changed the cursor_update
	function so it only displays the bad cursor when outside the image.

2001-01-15  Michael Natterer  <mitch@gimp.org>

	* app/devices.c
	* app/gimprc.c: save the foreground and background color as array
	of RGBA doubles in "devicerc".

2001-01-15  Sven Neumann  <sven@gimp.org>

	* app/color_notebook.c: make use of GimpColorAreas. Added two
	buttons to set the color to black or white.

2001-01-15  Michael Natterer  <mitch@gimp.org>

	* modules/colorsel_water.c: the bottom position of the scale
	represents the minimal pressure now. Also removed the pressure
	value display because it's rather a matter of "more" or "less"
	than of an exact value.

2001-01-15  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.c
	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c: tweaked dialog layout a bit.

	* modules/colorsel_water.c: removed all widgets except the color
	selector itself (the history and the "Reset" button will go
	to the ColorNotebook).

2001-01-15  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.[ch]
	* app/color_select.c
	* libgimp/gimpcolorselector.h
	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c: use GimpRGB and GimpHSV.

	* libgimp/gimpcolor.c
	* libgimp/gimpcolorspace.[ch]: All rgb_to_hsv functions:

	if r == g == b the difference between the max and min value
	is 0 and we should avoid to divide by it ;-)

2001-01-15  Sven Neumann  <sven@gimp.org>

	* plug-ins/gdyntext/gdyntext.[ch]
	* plug-ins/gdyntext/gdyntext_ui.c
	* plug-ins/gdyntext/gdyntextcompat.[ch]: use GimpRGB

2001-01-15  Sven Neumann  <sven@gimp.org>

	* app/color_panel.c
	* libgimp/gimpcolorbutton.c
	* plug-ins/common/borderaverage.c
	* plug-ins/common/grid.c
	* plug-ins/common/polar.c
	* plug-ins/common/whirlpinch.c: cleaned up after myself

2001-01-15  Sven Neumann  <sven@gimp.org>

	* app/color_panel.[ch]: rewritten as proper widget derived from 
	GimpColorButton

	* app/channels_dialog.c
	* app/color_picker.c
	* app/qmask.c: use new GimpColorPanel widget

	* libgimp/gimpcolorarea.[ch]
	* libgimp/gimpcolorbutton.[ch]: some changes needed to derive from
	GimpColorButton

	* plug-ins/Lighting/lighting_ui.c
	* plug-ins/MapObject/mapobject_ui.c
	* plug-ins/common/colorify.c
	* plug-ins/common/colortoalpha.c
	* plug-ins/common/exchange.c
	* plug-ins/common/film.c
	* plug-ins/common/grid.c
	* plug-ins/common/mapcolor.c
	* plug-ins/common/nova.c
	* plug-ins/common/papertile.c
	* plug-ins/common/sinus.c
	* plug-ins/gdyntext/gdyntext_ui.c
	* plug-ins/ifscompose/ifscompose.c
	* plug-ins/script-fu/script-fu-scripts.c: follow API changes of
	GimpColorButton and GimpColorArea

2001-01-15  Michael Natterer  <mitch@gimp.org>

	* app/channel.[ch]
	* app/gimpimage.[ch]
	* app/layer.[ch]: use GimpRGB for the Channel's, the QuickMask's
	and the LayerMask's color.

	* app/channel_cmds.c
	* app/channel_ops.c
	* app/channels_dialog.c
	* app/qmask.c
	* app/xcf.c
	* tools/pdbgen/pdb/channel.pdb: changed accordingly.

2001-01-15  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.[ch]
	* app/color_panel.[ch]
	* app/gimpcontext.[ch]
	* app/gimpdnd.[ch]: use GimpRGB instead of a random selection out of
	guchar, gint, guchar[], blah...

	* app/blend.c
	* app/by_color_select.c
	* app/channel_ops.c
	* app/channels_dialog.c
	* app/color_area.c
	* app/color_picker.c
	* app/color_select.c
	* app/colormap_dialog.c
	* app/commands.c
	* app/devices.[ch]
	* app/disp_callbacks.[ch]
	* app/drawable.c
	* app/gimpimage.c
	* app/gimprc.c
	* app/gradient.c
	* app/paint_core.c
	* app/palette.c
	* app/palette_cmds.c
	* app/qmask.c
	* tools/pdbgen/pdb/palette.pdb: changed accordingly.

2001-01-15  Simon Budig  <simon@gimp.org>

	* app/apptypes.h
	I broke the Toolbox. Now it works again. The ToolType-enum *must*
	match the order in the tool_info-Array.

2001-01-15  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolor.[ch]: added function gimp_rgb_intensity_uchar()

	* libgimp/gimpcolorbutton.c
	* plug-ins/common/apply_lens.c
	* plug-ins/common/blinds.c
	* plug-ins/common/borderaverage.c
	* plug-ins/common/checkerboard.c
	* plug-ins/common/cubism.c
	* plug-ins/common/gif.c
	* plug-ins/common/grid.c
	* plug-ins/common/mblur.c
	* plug-ins/common/papertile.c
	* plug-ins/common/png.c
	* plug-ins/common/polar.c
	* plug-ins/common/semiflatten.c
	* plug-ins/common/sparkle.c
	* plug-ins/common/vpropagate.c
	* plug-ins/common/warp.c
	* plug-ins/common/whirlpinch.c
	* plug-ins/gap/gap_mov_dialog.c
	* plug-ins/gdyntext/gdyntext.c
	* plug-ins/gfig/gfig.c
	* plug-ins/ifscompose/ifscompose.c
	* plug-ins/maze/handy.c
	* plug-ins/mosaic/mosaic.c
	* plug-ins/pagecurl/pagecurl.c: replaced all occurences of 
	gimp_palette_[get|set]_[back|fore]ground() with the respective
	gimp_palette_[get|set]_[back|fore]ground_rgb() functions.

2001-01-14  Simon Budig  <simon@gimp.org>

	* app/tools.c:
	Reordered some tools. It is IMHO more logical to group the
	"paint-style" and the "blur/smudge"-Tools together.
	The Ordering up to now was a "historical" ordering: Not good...

	I am thinking about grouping the "Non-image modifying"-tools
	(Magnify, Colorpicker, Measure tool) together...
	
2001-01-14  Michael Natterer  <mitch@gimp.org>

	* app/channel.[ch]
	* app/drawable.[ch]
	* app/gdisplay.[ch]
	* app/gimpdrawable.[ch]
	* app/layer.[ch]:

	- Removed all "typedef drawable_function gimp_drawable_function".
	- Renamed all *_get_ID() functions to *_get_by_ID().
	- For symmetry reasons, renamed drawable_ID() to gimp_drawable_get_ID().
	- Removed the *_get_ID() functions of GimpLayer, GimpLayerMask
	  and GimpChannel.

	* app/airbrush.c
	* app/bezier_select.c
	* app/blend.c
	* app/brightness_contrast.c
	* app/bucket_fill.c
	* app/by_color_select.c
	* app/clone.c
	* app/color_balance.c
	* app/color_picker.c
	* app/convert.c
	* app/convolve.c
	* app/crop.c
	* app/curves.c
	* app/desaturate.c
	* app/dodgeburn.c
	* app/edit_selection.c
	* app/eraser.c
	* app/fileops.c
	* app/flip_tool.c
	* app/floating_sel.c
	* app/fuzzy_select.c
	* app/gimage.c
	* app/gimage_mask.c
	* app/gimphistogram.c
	* app/gimpimage.c
	* app/global_edit.c
	* app/histogram_tool.c
	* app/hue_saturation.c
	* app/image_map.c
	* app/ink.c
	* app/invert.c
	* app/layer_select.c
	* app/layers_dialog.c
	* app/levels.c
	* app/paint_core.c
	* app/paintbrush.c
	* app/pencil.c
	* app/plug_in.c
	* app/posterize.c
	* app/scan_convert.c
	* app/smudge.c
	* app/text_tool.c
	* app/threshold.c
	* app/transform_core.c
	* app/undo.c
	* app/undo_history.c

	* app/channel_cmds.c
	* app/channel_ops_cmds.c
	* app/color_cmds.c
	* app/display_cmds.c
	* app/drawable_cmds.c
	* app/edit_cmds.c
	* app/floating_sel_cmds.c
	* app/image_cmds.c
	* app/layer_cmds.c
	* app/parasite_cmds.c
	* app/selection_cmds.c
	* app/text_tool_cmds.c
	* app/tools_cmds.c
	* libgimp/gimpdrawable_pdb.c
	* tools/pdbgen/pdb.pl
	* tools/pdbgen/pdb/channel_ops.pdb
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/edit.pdb
	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/selection.pdb
	* tools/pdbgen/pdb/tools.pdb: changed accordingly.

2001-01-14  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolor.[ch]: added GimpHSV type and functions and
	gimp_rgb_composite functions

	* libgimp/gimpcolorbutton.c: indentation

	* libgimp/gimpcolorspace.[ch]: added GimpRGB <-> GimpHSV conversion 
	routines

	* libgimp/gimpwidgets.[ch]: removed gimp_color_update_uchar function

	* plug-ins/Lighting/lighting_main.[ch]
	* plug-ins/Lighting/lighting_preview.c
	* plug-ins/Lighting/lighting_shade.c
	* plug-ins/MapObject/mapobject_image.c
	* plug-ins/MapObject/mapobject_main.[ch]
	* plug-ins/MapObject/mapobject_shade.c
	* plug-ins/common/mapcolor.c
	* plug-ins/common/nova.c
	* plug-ins/common/papertile.c
	* plug-ins/common/sinus.c
	* plug-ins/ifscompose/ifscompose.c
	* plug-ins/script-fu/script-fu-scripts.c: use GimpRGB and GimpHSV 

2001-01-14  Michael Natterer  <mitch@gimp.org>

	* app/channel.[ch]
	* app/gimpdrawable.[ch]
	* app/layer.[ch]: moved the "removed" signal from GimpChannel and
	GimpLayer to GimpDrawable.

	* app/gimpimage.[ch]: changed accordingly.

2001-01-14  Michael Natterer  <mitch@gimp.org>

	* app/docindex.c
	* app/fileops.c
	* app/gdisplay.c
	* app/gimpimage.[ch]:

	Removed the "has_filename" boolean from GimpImage:

	- to get the filename, ask for GimpObjects's name.
	- gimp_image_filename() returns the *display* filename (and will be
	  renamed to gimp_image_display_name() soon), i.e. returns
	  "Unnamed" if object->name == NULL.
	- no need any more to check if the filename is the "" string because
	  GimpImage overrides GimpObject's "name_changed" method and
	  sets the name to NULL if it was "".

2001-01-14  Sven Neumann  <sven@gimp.org>

	Merged fixes from gimp-1-2:

	* app/menus.c
	* app/plug-in.c: added some sanity checks for passed string pointers
	to various public functions in an attempt to fix bug #37622.

	* plug-ins/common/sharpen.c: applied a patch from Jerome Zago 
        <jzago@ifhamy.insa-lyon.fr> that fixes a longstanding bug in the
        sharpen filter which sometimes got the last line wrong. 
	Fixes bug #34155.
	
2001-01-14  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h
	* app/brush_edit.c
	* app/brush_select.c
	* app/brushes_cmds.c
	* app/channel.h
	* app/colormap_dialog.c
	* app/datafiles.[ch]
	* app/devices.c
	* app/docindex.c
	* app/fileops.c
	* app/gdisplay.c
	* app/gimage.c
	* app/gimpbrush.[ch]
	* app/gimpbrushgenerated.[ch]
	* app/gimpbrushlist.[ch]
	* app/gimpbrushpipe.[ch]
	* app/gimpcontext.[ch]
	* app/gimpcontextpreview.c
	* app/gimpdnd.c
	* app/gimpdrawable.h
	* app/gimpimage.[ch]
	* app/gimplist.h
	* app/gimpobject.h
	* app/gimpset.[ch]
	* app/gradient.c
	* app/info_window.c
	* app/layer.[ch]
	* app/module_db.c
	* app/palette.[ch]
	* app/patterns.[ch]
	* app/plug_in.[ch]
	* app/undo_history.c
	* app/xcf.c
	* tools/pdbgen/pdb/brushes.pdb

	- Removed the "name" argument from all objects and use
	  GimpObject's name.
	- Use the same code in all "uniquefy name" functions (this
	  functionality will be a method of the "GimpContainer" class).
	- Renamed the parent instances of all objects to "parent instance".
	- Added missing instance and class cast macros.
	- Changed some "gchar *" to "const gchar *" parameters.

2001-01-12  Sven Neumann  <sven@gimp.org>

	* TODO.xml: updated status

	* app/gimpcontext.c: added temporary functions to make it compile

	* app/pixel_processor.c: include tile.h when ENABLE_MP is defined

	* libgimp/gimpcolor.[ch]: added more GimpRGB functions

	* plug-ins/common/aa.c: merged fix from gimp-1-2
	
	* plug-ins/common/colorify.c
	* plug-ins/common/colortoalpha.c
	* plug-ins/common/exchange.c
	* plug-ins/common/film.c
	* plug-ins/common/grid.c: use GimpRGB whereever possible. 
	Still work in progress.

2001-01-11  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolorarea.c: added antialiasing

2001-01-11  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolorbutton.[ch]: allow width/height of the color_area
	to be set to negative values so the GimpColorButton can be set up
	resizeable.
	
2001-01-11  Sven Neumann  <sven@gimp.org>

	* README: changed for gimp-1.3

2001-01-11  Valek Filippov  <frob@df.ru>

	* plug-ins/script-fu.c: changed INIT_I18N() to INIT_I18N_UI().

2001-01-10  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolorarea.[ch]: finished new GimpColorArea widget which
	uses GimpRGB and handles DND and alpha channel.

	* libgimp/gimpcolorbutton.[ch]: use GimpColorArea. The API of the 
	GimpColorButton has changed!

	* libgimp/gimpwidgets.[ch]: added temporary function 
	gimp_color_update_uchar() to ease migration of plug-ins to GimpRGB. 
	This function will go away.
	
	* plug-ins/Lighting/lighting_main.h
	* plug-ins/Lighting/lighting_ui.c
	* plug-ins/MapObject/mapobject_main.h
	* plug-ins/MapObject/mapobject_ui.c
	* plug-ins/common/colorify.c
	* plug-ins/common/colortoalpha.c
	* plug-ins/common/exchange.c
	* plug-ins/common/film.c
	* plug-ins/common/grid.c
	* plug-ins/common/mapcolor.c
	* plug-ins/common/nova.c
	* plug-ins/common/papertile.c
	* plug-ins/common/sinus.c
	* plug-ins/gdyntext/gdyntext_ui.c
	* plug-ins/ifscompose/ifscompose.[ch]
	* plug-ins/ifscompose/ifscompose_storage.c
	* plug-ins/ifscompose/ifscompose_utils.c
	* plug-ins/script-fu/script-fu-scripts.c: use new GimpColorArea and
	GimpColorButton. Started to introduce GimpRGB color type. This change
	might have broken some of these plug-ins. This is work in progress.

	* libgimp/Makefile.am: added GimpColorArea and GimpColorButton to 
	libgimpi.
	
	* app/gimpcontext.[ch]: added gimp_palette_get_[fore|back]ground() 
	functions so the app can link against libgimp/gimpcolorbutton.o.
	These functions will go away.

	* app/gimpdnd.c: use a GimpColorArea for DND
	
2001-01-10  Michael Natterer  <mitch@gimp.org>

	* app/gimpdrawable.[ch]: removed the "name" parameter and use
	GimpObject's name instead.

	* app/channel.c
	* app/channel_ops.c
	* app/channels_dialog.c
	* app/drawable.h
	* app/gimpimage.c
	* app/interface.c
	* app/layer.c
	* app/layer_select.c
	* app/layers_dialog.c
	* app/qmask.c
	* app/undo.c
	* app/xcf.c: changed accordingly, cleanup.

2001-01-10  Michael Natterer  <mitch@gimp.org>

	* app/gimpbrushlist.c
	* app/gimpdrawable.c: forgot to remove #include "gimpsignal.h"

	* app/gimpobject.[ch]: added a "name" argument (not used yet).

2001-01-10  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/gimpsignal.[ch]: removed.
	* app/gimpmarshal.[ch]: added.

	* app/channel.[ch]
	* app/gimpbrush.[ch]
	* app/gimpbrushgenerated.c
	* app/gimpbrushlist.[ch]
	* app/gimpbrushpipe.[ch]
	* app/gimpcontext.c
	* app/gimpdrawable.c
	* app/gimpimage.c
	* app/gimplist.[ch]
	* app/gimpobject.[ch]
	* app/gimpset.[ch]
	* app/layer.c
	* app/layers_dialog.c
	* app/module_db.c
	* app/parasitelist.[ch]: removed gimp_signal_new() and
	GIMP_TYPE_INIT(). Fixed lots of object related uglyness.

2001-01-09  Sven Neumann  <sven@gimp.org>

	Merged fix from gimp-1-2:
	
	* app/gimpbrushlist.c
	* app/gradient.c
	* app/palette.c
	* app/patterns.c: check for NULL pointers before doing strcmp on
	default names. The default names for brushes, patterns, ... can 
	be NULL if they were not set in a readable gimprc file.

	* app/gimprc.c: warn the user if the systemwide gimprc couldn't be
	read.

2001-01-09  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.c: Show the "Alpha" scale only when needed.

	* libgimp/gimpcolorarea.[ch]: fixed typos.

2001-01-09  Sven Neumann  <sven@gimp.org>

	* TODO.xml: add more stuff

2001-01-09  Sven Neumann  <sven@gimp.org>

	* app/apptypes.h
	* app/brush_select_cmds.c
	* app/brushes_cmds.c
	* app/layer_cmds.c
	* app/layers_dialog.c
	* app/paint_funcs.c
	* app/tool_options.c
	* app/tools_cmds.c
	* libgimp/gimpenums.h
	* plug-ins/script-fu/script-fu-constants.c
	* tools/pdbgen/enums.pl: applied patch from Oliver Lavery 
	<oliver@zeroknowledge.com> that adds new blending modes 
	(Dodge/Burn/Hardlight). Please play with these new modes 
	and check if they are useful and well-implemented.

2001-01-09  Sven Neumann  <sven@gimp.org>

	* HACKING: added notice about autogenerated files.

2001-01-09  Sven Neumann  <sven@gimp.org>

	* libgimp/gimpcolorarea.[ch]: added a new simple widget which
	provides a color preview area capable of DND. It will be used 
	in the GimpColorButton and in the color_selectors.

	* libgimp/Makefile.am
	* libgimp/gimpui.h
	* libgimp/gimpuitypes.h: include the new files

	* libgimp/gimpcolor.[ch]: use proper names instead of abbreviations

	* app/asupsample.c
	* plug-ins/Lighting/lighting_preview.c
	* plug-ins/Lighting/lighting_shade.c
	* plug-ins/MapObject/mapobject_preview.c
	* plug-ins/MapObject/mapobject_shade.c
	* plug-ins/libgck/gck/gckcolor.c: changed accordingly

2001-01-09  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.[ch]
	* app/color_select.c: moved the scales and the toggle butttons out
	of the notebook. Added an "Aplha" scale (the opacity is not yet
	shown in the color area). Removed the ColorNotebook structure from
	the header.

	* app/color_area.c: the ColorNotebook struct is no longer public.

	* libgimp/gimpcolorselector.h
	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c: changed the ColorSelector module
	interface again: Pass H, S, V, R, G, B and A in all functions
	and callbacks. Added a "set_channel" method because the channel
	toggles are outside the notebook now. This needs more work...

2001-01-08  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.[ch]
	* app/color_select.c: moved the "old" and "new" color areas from the
	notebook to the action_area.

	* TODO.xml: updated.

	* app/color_area.c
	* app/color_panel.c
	* app/colormap_dialog.c
	* app/palette.c
	* libgimp/gimpcolorselector.h
	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c: removed the "set_current" parameter all
	over the place because it was always TRUE and not used in the modules
	at all.

2001-01-08  Michael Natterer  <mitch@gimp.org>

	* app/color_notebook.c
	* app/color_select.c
	* libgimp/gimpcolorselector.h: more cleanup before chopping it up.

2001-01-08  Michael Natterer  <mitch@gimp.org>

	Removed GCG:

	* app/colormap_dialog.gc
	* app/colormap_dialog.i.[ch]
	* app/colormap_dialog.p.h
	* app/colormap_dialog.t.h
	* app/gimp.gh
	* tools/gcg/*: removed.

	* app/colormap_dialog.[ch]: moved all the colormap_dialog stuff
	here and cleaned up the autogenerated code.

	* autogen.sh
	* configure.in
	* app/Makefile.am
	* app/app_procs.c
	* app/apptypes.h
	* app/color_notebook.h
	* app/commands.c
	* app/gimpset.h
	* app/interface.c
	* po/POTFILES.in
	* tools/Makefile.am: changed accordingly, cleanup.

	* libgimp/gimpunitmenu.c: s/class/klass/

2001-01-07  Michael Natterer  <mitch@gimp.org>

	* app/by_color_select.c
	* app/channels_dialog.c
	* app/color_area.c
	* app/color_notebook.[ch]
	* app/color_panel.[ch]
	* app/color_picker.c
	* app/color_select.c
	* app/colormap_dialog.i.c
	* app/devices.c
	* app/disp_callbacks.[ch]
	* app/gimpdnd.[ch]
	* app/palette.c
	* app/qmask.c

	* libgimp/gimpcolorselector.h

	* modules/colorsel_gtk.c
	* modules/colorsel_triangle.c
	* modules/colorsel_water.c: made the color_notebook, the color_area
	and DND speak in terms of RGBA instead of RGB. The alpha value is
	not used yet, only the API changed. Everything should work exactly
	as before.

2001-01-07  Michael Natterer  <mitch@gimp.org>

	* TODO.xml: add "Cleanup GIMP's color selectors".

2001-01-07  Michael Natterer  <mitch@gimp.org>

	* app/bezier_select.c
	* app/bezier_selectP.h: removed the obscure unused "extend" variable
	from the Bezier Tool structure.

2001-01-07  Michael Natterer  <mitch@gimp.org>

	* TODO.xml: added an item to optionally change the image window's
	background.

	* app/preferences_dialog.c: "Disable Tearoff Menus" was not saved
	to disk.

2001-01-04  Asbjorn Pettersen  <asbjornP@dualog.no>

	* modules/gimpmodregister.h: add #include <libgimp/gimptypes.h>
	* plug-ins/common/bz2.c (load_image): fix bug loading bz2 files (OS/2)

2001-01-04  Sven Neumann  <sven@gimp.org>

	* plug-ins/script-fu/scripts/title-header.scm: merged fix from 1.2

2001-01-03  Michael Natterer  <mitch@gimp.org>

	* app/levels.c: reverted the behaviour of the "Reset" button back
	to resetting the current channel only. Resetting all channels was
	broken and IMHO cannot work the way it was implemented.

2001-01-03  Michael Natterer  <mitch@gimp.org>

	* app/plug_in_cmds.c
	* app/procedural_db_cmds.c
	* tools/pdbgen/pdb/plug_in.pdb
	* tools/pdbgen/pdb/procedural_db.pdb
	* tools/pdbgen/app.pl: conditionally include <regex.h> or
	"regexrepl.h", depending on HAVE_GLIBC_REGEX.

2001-01-03  Daniel Egger  <egger@suse.de>

	* app/plug_in_cmds.c:
	* app/procedural_db_cmds.c:
	* plug-ins/script-fu/Makefile.am:
	* plug-ins/script-fu/interp_regex.c:
	* plug-ins/script-fu/regexrepl.c: Conditionally compile
	regex if not available in glibc.
	
	* plug-ins/script-fu/regex.c:
	* plug-ins/script-fu/regex.h: Renamed files to regexrepl.[ch].

2001-01-03  Daniel Egger  <egger@suse.de>

	* configure.in: Extended the glibc regexp check and enabled
	substitution for Makefiles.
	
	* app/Makefile.am: Compile regexp only if not in glibc.
	
	* app/plug_in_cmds.c: 
	* app/procedural_db_cmds.c:
	* app/regexrepl.c: Include the correct local headerfile 
	if no new glibc with regexp is available.
	
	* app/regex.c:
	* app/regex.h: Moved into regexprepl.[ch] to avoid nameclashes. 

2001-01-02  Daniel Egger  <egger@suse.de>

	* acconfig.h:
	* configure.in: Added a check for a glibc compliant
	regex implementation.

2001-01-02  Simon Budig  <simon@gimp.org>

	* app/paint_core.c: use floor() before casting to gint when 
	calculating the current brush coordinates. Fixes the jagged brush 
	stroke when stroking a path that leaves the image at the top or left
	edge (bug #6043).
	
2001-01-02  Daniel Egger  <egger@suse.de>

	* app/clone.c:
	* app/gimpimage.c:
	* app/temp_buf.c: Use the new _clear function and more cleanups.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/temp_buf.[ch]: temp_buf_data_clear(): the temp_buf's size is
	(width * height * bytes). Cleanups.

	* app/fileops.c: removed a debugging g_print().

2001-01-02  Daniel Egger  <egger@suse.de>

	* app/temp_buf.c:
	* app/temp_buf.h: Add a new function "temp_buf_data_clear" to
	get a nulled chunk of memory.
	
	* app/iscissors.c: Use it here instead of two expensive for
	loops. Clean up the source a little.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/bezier_select.c
	* app/bezier_selectP.h
	* app/selection_options.h: moved the integer "extend" variable from
	SelectionOptions to the BezierSelect structure because it does not
	have a UI widget. Also initialize it with "0" (was used
	uninitialized before). I have no idea what it does.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/selection_options.h
	* app/tool_options.c: made a correct tool toption out of
	"Interactive" (added a default value and the "Reset" function,
	set unused pointers to NULL).

	* app/iscissors.c: fixed indentation and spacing.

2001-01-02  Daniel Egger  <egger@suse.de>

	* app/iscissors.c:
	* app/selection_options.h:
	* app/tool_options.c: Applied patch by laramieleavitt@onetel.net.uk
	to add an interactive update to the iscissors tool.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/gimphelp.c (gimp_idle_help): s/welcome.html/introduction.html/.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/gimprc.[ch]
	* app/menus.[ch]
	* app/preferences_dialog.c: added a preferences option to disable
	tearoff menus. Cleanup in preferences.

	* TODO.xml: done.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/commands.c: some nicer prototypes.

	* app/fileops.c: oops, forgot to gtk_widget_show() the open_options.

2001-01-02  Michael Natterer  <mitch@gimp.org>

	* app/commands.[ch]
	* app/fileops.[ch]
	* app/gdisplay.c
	* app/menus.c: Implemented "Save a Copy as..." which saves the image
	without changing it's filename.

	* app/layers_dialogP.h: export layers_dialog_layer_merge_query()
	here instead of defining it in commands.c

	* TODO.xml: mark this entry as done :)

2001-01-01  Michael Natterer  <mitch@gimp.org>

	* TODO.xml: added a TODO item for "Save a Copy..."

2001-01-01  Michael Natterer  <mitch@gimp.org>

	* plug-ins/libgck/gck/gck.h
	* plug-ins/libgck/gck/gckcolor.c: removed the GckRGB color type
	and all it's functions.

	* libgimp/Makefile.am
	* libgimp/gimpcolor.[ch]: new files containing the new GimpRGB color
	type and assorted functions.

	* libgimp/gimpcolorspace.[ch]: colorspace conversion routines for
	the new GimpRGB type. Also taken from LibGCK.

	* libgimp/gimp.h
	* libgimp/gimptypes.h: #include "gimpcolor.h". It's ugly to include
	it in both files but unavoidable to follow our new "*.c" file include
	policy. This will go away as libgimp will be chopped up into pieces
	anyway.

	* app/apptypes.h
	* app/asupsample.[ch]
	* app/blend.c
	* app/color_transfer.h
	* app/gradient_header.h: removed "color_t" and use GimpRGB instead.

	* plug-ins/Lighting/lighting_apply.c
	* plug-ins/Lighting/lighting_image.c
	* plug-ins/Lighting/lighting_image.h
	* plug-ins/Lighting/lighting_main.c
	* plug-ins/Lighting/lighting_main.h
	* plug-ins/Lighting/lighting_preview.c
	* plug-ins/Lighting/lighting_shade.c
	* plug-ins/Lighting/lighting_shade.h
	* plug-ins/MapObject/mapobject_apply.c
	* plug-ins/MapObject/mapobject_image.c
	* plug-ins/MapObject/mapobject_image.h
	* plug-ins/MapObject/mapobject_main.c
	* plug-ins/MapObject/mapobject_main.h
	* plug-ins/MapObject/mapobject_preview.c
	* plug-ins/MapObject/mapobject_shade.c
	* plug-ins/MapObject/mapobject_shade.h
	* modules/colorsel_triangle.c: s/GckRGB/GimpRGB/g

	* plug-ins/gdyntext/gdyntextcompat.h: check also for GIMP's minor
	version when deciding if to add a missing PDB wrapper.
	(All this compat cruft including libgimp/gimpcompat.h should go
	away ASAP)

2000-12-31  Michael Natterer  <mitch@gimp.org>

	More preparation for LibGCK removal:

	* libgimp/gimpcolorspace.[ch]: added a "_int" suffix to all functions
	operating on 3 gint pointers, just like the gdouble functions have
	a "_double" suffix.

	* app/color_balance.c
	* app/hue_saturation.c
	* app/paint_funcs.c
	* modules/colorsel_triangle.c
	* plug-ins/common/CML_explorer.c
	* plug-ins/common/scatter_hsv.c
	* plug-ins/common/sparkle.c
	* plug-ins/common/vinvert.c
	* plug-ins/gflare/gflare.c: changed accordingly.

2000-12-31  Sven Neumann  <sven@gimp.org>
            Simon Budig <simon@gimp.org>
	
	* app/gimpbrush.c
	* plug-ins/common/gih.c: explicitely cast offset to (off_t) when 
	seeking back. Should fix the problems reading grayscale BrushPipes 
	on IRIX.

2000-12-31  Michael Natterer  <mitch@gimp.org>

	* app/apptypes.h: cleaned up a bit.

	* app/asupsample.[ch]
	* app/blend.[ch]
	* app/channel.h
	* app/gimpprogress.[ch]
	* app/layer.h
	* app/perspective_tool.c
	* app/plug_in.h
	* app/rotate_tool.c
	* app/scale_tool.c
	* app/shear_tool.c
	* app/transform_core.[ch]: s/gimp_progress/GimpProgress/g and some
	changes related to the apptypes.h cleanup.

2000-12-31  Michael Natterer  <mitch@gimp.org>

	* app/airbrush.[ch]
	* app/bezier_select.c
	* app/bezier_selectP.h
	* app/blend.[ch]
	* app/boundary.h
	* app/brightness_contrast.[ch]
	* app/bucket_fill.c
	* app/by_color_select.c
	* app/clone.[ch]
	* app/color_balance.c
	* app/color_picker.c
	* app/commands.c
	* app/convolve.[ch]
	* app/crop.c
	* app/crop.h
	* app/curves.c
	* app/dodgeburn.[ch]
	* app/edit_selection.[ch]
	* app/ellipse_select.c
	* app/eraser.[ch]
	* app/flip_tool.[ch]
	* app/free_select.[ch]
	* app/fuzzy_select.[ch]
	* app/gdisplay.c
	* app/gimage.c
	* app/histogram_tool.[ch]
	* app/hue_saturation.[ch]
	* app/image_map.[ch]
	* app/ink.[ch]
	* app/iscissors.c
	* app/levels.c
	* app/magnify.[ch]
	* app/move.c
	* app/nav_window.[ch]
	* app/paint_core.[ch]
	* app/paintbrush.[ch]
	* app/path_bezier.[ch]
	* app/path_tool.c
	* app/pencil.[ch]
	* app/perspective_tool.[ch]
	* app/posterize.c
	* app/rect_select.[ch]
	* app/rotate_tool.[ch]
	* app/scale_tool.[ch]
	* app/selection.[ch]
	* app/shear_tool.[ch]
	* app/smudge.[ch]
	* app/text_tool.[ch]
	* app/threshold.c
	* app/tools.[ch]
	* app/transform_core.[ch]: removed the "gdisp_ptr" madness and
	useless casts all over the place. Introduced a "PaintState" enum
	instead of #define's. Various cleanups.

2000-12-30  Michael Natterer  <mitch@gimp.org>

	One more 17C3 commit ...

	* plug-ins/libgck/gck/gck.h
	* plug-ins/libgck/gck/gckcolor.c: removed unused stuff.

	* plug-ins/Lighting/lighting_apply.c
	* plug-ins/Lighting/lighting_image.[ch]
	* plug-ins/Lighting/lighting_main.c
	* plug-ins/Lighting/lighting_preview.[ch]
	* plug-ins/Lighting/lighting_shade.c
	* plug-ins/Lighting/lighting_ui.c
	* plug-ins/MapObject/mapobject_apply.c
	* plug-ins/MapObject/mapobject_image.[ch]
	* plug-ins/MapObject/mapobject_main.c
	* plug-ins/MapObject/mapobject_preview.c
	* plug-ins/MapObject/mapobject_shade.[ch]
	* plug-ins/MapObject/mapobject_ui.c: cleanups in preparation for
	removal of LibGCK.

2000-12-30  Michael Natterer  <mitch@gimp.org>

	* app/gimage.[ch]: removed all the
	"typedef gimage_function gimp_image_function" stuff so we can clearly
	see what is really a GImage function.
	Removed gimage_get_ID(). Use pdb_id_to_image() instead.

	* app/airbrush.c
	* app/desaturate.c
	* app/disp_callbacks.c
	* app/equalize.c
	* app/fileops.c
	* app/floating_sel.c
	* app/gdisplay_ops.c
	* app/gimpdrawable.c
	* app/global_edit.c
	* app/image_map.c
	* app/invert.c
	* app/lc_dialog.c
	* app/paths_dialog.c
	* app/plug_in.c
	* app/xcf.c

	* app/color_cmds.c
	* app/convert_cmds.c
	* app/image_cmds.c
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/image.pdb: changed accordingly.

2000-12-29  Sven Neumann  <sven@gimp.org>

	* TODO.xml: more things to do

2000-12-29  Michael Natterer  <mitch@gimp.org>

	* app/Makefile.am
	* app/channel_pvt.h
	* app/drawable_pvt.h
	* app/gdisplayF.h
	* app/gimpdrawableP.h
	* app/gimpimageP.h
	* app/layer_pvt.h
	* app/toolsF.h: removed these files.

	* app/apptypes.h
	* tools/pdbgen/enums.pl: added tons of opaque typedefs and enums.

	* tools/pdbgen/pdb/brush_select.pdb
	* tools/pdbgen/pdb/brushes.pdb
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/color.pdb
	* tools/pdbgen/pdb/convert.pdb
	* tools/pdbgen/pdb/display.pdb
	* tools/pdbgen/pdb/drawable.pdb
	* tools/pdbgen/pdb/fileops.pdb
	* tools/pdbgen/pdb/gradient_select.pdb
	* tools/pdbgen/pdb/gradients.pdb
	* tools/pdbgen/pdb/help.pdb
	* tools/pdbgen/pdb/image.pdb
	* tools/pdbgen/pdb/layer.pdb
	* tools/pdbgen/pdb/pattern_select.pdb
	* tools/pdbgen/pdb/patterns.pdb
	* tools/pdbgen/pdb/selection.pdb
	* tools/pdbgen/pdb/tools.pdb
	* app/*: chainsaw #include cleanup:

	- Never (never!!) include stuff in header files except where we
	  need access to structures' contents (like derived objects).
	- Added prototypes and proper formating in many files.
	- The #include order in *all* *.c files is as follows:

	#include "config.h"

	#include <system stuff>

	#include <gtk/gtk.h>

	#include "apptypes.h"

	#include "gimp stuff"

	#include "libgimp stuff"

	#include "libgimp/gimpintl.h"

	By following this scheme we can easily see a file's dependencies
	from it's #include's and can grep for the inclusion to find out
	where a file is used.

	* tools/pdbgen/app.pl: changed to follow the include scheme above.

	* libgimp/Makefile.am
	* libgimp/gimpuitypes.h: new file, included from libgimp/gimpui.h
	and from app/apptypes.h.

	* libgimp/gimpcolorbutton.[ch]
	* libgimp/gimpdialog.[ch]
	* libgimp/gimphelpui.[ch]
	* libgimp/gimpparasite.[ch]
	* libgimp/gimppatheditor.[ch]
	* libgimp/gimpprotocol.c
	* libgimp/gimpquerybox.[ch]
	* libgimp/gimpsizeentry.[ch]
	* libgimp/gimptypes.h
	* libgimp/gimpui.h
	* libgimp/gimpunit.h
	* libgimp/gimpunitmenu.[ch]
	* libgimp/gimpwidgets.[ch]: changed accordingly.

	* plug-ins/FractalExplorer/Dialogs.c
	* plug-ins/gdyntext/message_window.c
	* plug-ins/imagemap/imap_default_dialog.c
	* plug-ins/imagemap/imap_file.c: these files used to include
	"libgimp/gimpui.h" without including "libgimp/gimp.h". This is
	no longer possible because the libgimpui headers don't include
	"libgimp/gimpunit.h" any more.

2000-12-29  Asbjorn Pettersen  <asbjornP@dualog.no>

	* app/module_db.c: OS/2 fix. remove gimp_color_display_register(),,

2000-12-29  Simon Budig  <simon@gimp.org>

	* modules/colorsel_triangle.c   Fixed the same 16->8bit conversion
	bug as in gimp-1-2 and removed duplicated code.

2000-12-28  Simon Budig  <simon@gimp.org>

	* gimp_splash.ppm     A new splash...
	* gimp1_2_splash.ppm  A new file for the old splash

	* modules/colorsel_triangle.c   Fixed a warning.
	
2000-12-28  Simon Budig  <simon@gimp.org>

	* modules/colorsel_triangle.c
	Cleanup, indentation madness, first steps towards a one-click
	color-selector.
	
2000-12-28  Sven Neumann  <sven@gimp.org>

	* app/channel.c
	* app/layer.c: use gtk_object_sink() instead of gtk_object_unref()
	when deleting a layer or channel since only floating objects should
	be destroyed this way. A layer or channel that has been attached
	to an image shall never be deleted.
	
	* app/layer_cmds.c
	* libgimp/gimplayer_pdb.c
	* tools/pdbgen/pdb/layer.pdb: reenabled the gimp_layer_delete() PDB
	function since it might be useful under rare circumstances.
	
2000-12-28  Sven Neumann  <sven@gimp.org>

	* app/commands.c
	* app/layer_select.[ch]: small new feature: display a layer preview
	popup when switching the active layer using PageUp/PageDown. Could
	need a little tweaking...
	
2000-12-28  Michael Natterer  <mitch@gimp.org>

	* app/channel.[ch]
	* app/drawable.h
	* app/gimpdrawable.[ch]
	* app/gimpdrawableP.h
	* app/gimpimage.[ch]
	* app/gimpimageP.h
	* app/layer.[ch]
	* app/layer_pvt.h: started a major cleanup of all image/drawable
	files. Added tons of "const GimpImage *" declarations and properly
	formated the headers.

	* app/bezier_select.c
	* app/channels_dialog.c
	* app/crop.c
	* app/fileops.[ch]
	* app/fuzzy_select.c
	* app/gdisplay.c
	* app/layers_dialog.c
	* app/move.c
	* app/paint_funcs.[ch]
	* app/qmask.c
	* app/undo.c: changed accordingly plus the usual portion of coding
	style paranoia. This is not finished but Sven promised to buy me
	a beer if I commit now ;)

2000-12-28  Sven Neumann  <sven@gimp.org>

	* app/boundaryF.h
	* app/gdisplayP.h
	* app/gimplistP.h
	* app/gimplutP.h
	* app/gimpsetP.h
	* app/parasitelistP.h
	* app/pixel_regionP.h: removed these files

	* app/Makefile.am
	* app/apptypes.h
	* app/boundary.[ch]
	* app/floating_sel.h
	* app/gdisplay.c
	* app/gimplist.h
	* app/gimplut.[ch]
	* app/gimpset.[ch]
	* app/parasitelist.[ch]
	* app/pixel_processor.c
	* app/pixel_region.[ch]: moved structure definitions into the
	normal headers, various cleanups

2000-12-28  Sven Neumann  <sven@gimp.org>

	* app/channel_cmds.c
	* app/layer_cmds.c
	* libgimp/gimpchannel_pdb.c
	* libgimp/gimplayer_pdb.c
	* plug-ins/common/warp.c
	* plug-ins/gap/gap_exchange_image.c
	* plug-ins/gap/gap_range_ops.c
	* plug-ins/perl/examples/bricks
	* plug-ins/perl/examples/glowing_steel
	* tools/pdbgen/pdb/channel.pdb
	* tools/pdbgen/pdb/layer.pdb:

	Two of the gimp-perl scripts used to call gimp_layer_delete() after
	gimp_image_remove_layer(). This will fail since the layer is already 
	scheduled for destruction by removing it from the associated image or
	by deleting that image. It is thus dangerous and superfluous to export
	this feature through the PDB. The gimp_layer_delete() is hereby
	obsolete and does nothing any longer. I have removed the code calling
	it from all over the place (it was commented out in almost all places).

	The PDB help for gimp_channel_delete() now explicetly tells the user 
	about the proper usage of the procedure.
	
2000-12-28  Michael Natterer  <mitch@gimp.org>

	* app/bezier_select.[ch]
	* app/bezier_selectP.h: massive cleanup (prototypes, indentation, ...)

2000-12-28  Michael Natterer  <mitch@gimp.org>

	* app/measure.c: cleanup, proper prototypes, ...

2000-12-27  Michael Natterer  <mitch@gimp.org>

	* plug-ins/common/csource.c: the size of the string holding the
	image data was one byte too short (we forgot the trailing '\0').
	Reported by <goswin.brederlow@student.uni-tuebingen.de>

2000-12-27  Sven Neumann  <sven@gimp.org>

	* TODO.xml
	* docs/make-todo: new files. TODO.xml is a first start on a roadmap
	towards gimp-1.4. All new features and major changes need to be 
	defined here to be accepted into the gimp-1.3 branch.

2000-12-27  Michael Natterer  <mitch@gimp.org>

	* app/gimpimage.c: gimp_image_merge_layers(): apply the layer mask
	only if layer->apply_mask is TRUE, cleanup.

2000-12-27  Simon Budig  <simon@gimp.org>

	* plug-ins/mosaic/mosaic.c
	* plug-ins/script-fu/scripts/textured-logo.scm
	Implemented a toggle to ask the user, if he wants to allow some
	tiles to be split in two pieces. This enables perfect hexagonal/
	squared/octagonal tiles. Changed the PDB-Interface and changed the
	script using this plug-in.

2000-12-27  Michael Natterer  <mitch@gimp.org>

	* app/gimage.h
	* app/gimpimage.[ch]: implemented gimp_image_get_layer_by_index(),
	small cleanups.

	* app/commands.c
	* app/layers_dialog.c: use the new function instead of accessing
	the layer list directly.

2000-12-27  Michael Natterer  <mitch@gimp.org>

	* app/layers_dialog.c: layers_dialog_scroll_index(): don't fiddle
	around with magic numbers when calculating the layer widget's
	height but simply ask one of them for it's allocation.  Fixes
	positioning when the preview is smaller than the layer widget list
	item.

2000-12-27  Tomas Ogren  <stric@ing.umu.se>

	* plug-ins/ifscompose/ifscompose_storage.c: Remove the last comma in
	  an enum, xlc barfs

Tue Dec 26 11:10:23 PST 2000 Manish Singh <yosh@gimp.org>

	* app/patterns.c: fix fd leak on loading

Sun Dec 24 23:18:32 PST 2000 Manish Singh <yosh@gimp.org>

	* Made 1.2.0 release
