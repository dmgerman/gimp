begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* LIBGIMP - The GIMP Library   * Copyright (C) 1995-1997 Peter Mattis and Spencer Kimball                  *  * This library is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public  * License as published by the Free Software Foundation; either  * version 2 of the License, or (at your option) any later version.  *   * This library is distributed in the hope that it will be useful,   * but WITHOUT ANY WARRANTY; without even the implied warranty of   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    * Library General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the  * Free Software Foundation, Inc., 59 Temple Place - Suite 330,  * Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__GIMP_COLOR_H__
end_ifndef

begin_define
DECL|macro|__GIMP_COLOR_H__
define|#
directive|define
name|__GIMP_COLOR_H__
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* __cplusplus */
comment|/* For information look into the C source or the html documentation */
comment|/*  RGB and RGBA color types and operations taken from LibGCK  */
DECL|typedef|GimpRGB
typedef|typedef
name|struct
name|_GimpRGB
name|GimpRGB
typedef|;
DECL|struct|_GimpRGB
struct|struct
name|_GimpRGB
block|{
DECL|member|r
DECL|member|g
DECL|member|b
DECL|member|a
name|gdouble
name|r
decl_stmt|,
name|g
decl_stmt|,
name|b
decl_stmt|,
name|a
decl_stmt|;
block|}
struct|;
DECL|typedef|GimpHSV
typedef|typedef
name|struct
name|_GimpHSV
name|GimpHSV
typedef|;
DECL|struct|_GimpHSV
struct|struct
name|_GimpHSV
block|{
DECL|member|h
DECL|member|s
DECL|member|v
DECL|member|a
name|gdouble
name|h
decl_stmt|,
name|s
decl_stmt|,
name|v
decl_stmt|,
name|a
decl_stmt|;
block|}
struct|;
typedef|typedef
enum|enum
DECL|enum|__anon297ee60f0103
block|{
DECL|enumerator|GIMP_RGB_COMPOSITE_NONE
name|GIMP_RGB_COMPOSITE_NONE
init|=
literal|0
block|,
DECL|enumerator|GIMP_RGB_COMPOSITE_NORMAL
name|GIMP_RGB_COMPOSITE_NORMAL
block|,
DECL|enumerator|GIMP_RGB_COMPOSITE_BEHIND
name|GIMP_RGB_COMPOSITE_BEHIND
DECL|typedef|GimpRGBCompositeMode
block|}
name|GimpRGBCompositeMode
typedef|;
name|void
name|gimp_rgb_set
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
name|gdouble
name|r
parameter_list|,
name|gdouble
name|g
parameter_list|,
name|gdouble
name|b
parameter_list|)
function_decl|;
name|void
name|gimp_rgb_set_alpha
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
name|gdouble
name|a
parameter_list|)
function_decl|;
name|void
name|gimp_rgb_set_uchar
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
name|guchar
name|r
parameter_list|,
name|guchar
name|g
parameter_list|,
name|guchar
name|b
parameter_list|)
function_decl|;
name|void
name|gimp_rgb_get_uchar
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
name|guchar
modifier|*
name|r
parameter_list|,
name|guchar
modifier|*
name|g
parameter_list|,
name|guchar
modifier|*
name|b
parameter_list|)
function_decl|;
name|void
name|gimp_rgb_add
parameter_list|(
name|GimpRGB
modifier|*
name|rgb1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgb2
parameter_list|)
function_decl|;
name|void
name|gimp_rgb_subtract
parameter_list|(
name|GimpRGB
modifier|*
name|rgb1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgb2
parameter_list|)
function_decl|;
name|void
name|gimp_rgb_multiply
parameter_list|(
name|GimpRGB
modifier|*
name|rgb1
parameter_list|,
name|gdouble
name|factor
parameter_list|)
function_decl|;
name|gdouble
name|gimp_rgb_distance
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgb2
parameter_list|)
function_decl|;
name|gdouble
name|gimp_rgb_max
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
name|gdouble
name|gimp_rgb_min
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
name|void
name|gimp_rgb_clamp
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
name|void
name|gimp_rgb_gamma
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
name|gdouble
name|gamma
parameter_list|)
function_decl|;
name|gdouble
name|gimp_rgb_intensity
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
name|void
name|gimp_rgb_composite
parameter_list|(
name|GimpRGB
modifier|*
name|color1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|color2
parameter_list|,
name|GimpRGBCompositeMode
name|mode
parameter_list|)
function_decl|;
name|void
name|gimp_rgba_set
parameter_list|(
name|GimpRGB
modifier|*
name|rgba
parameter_list|,
name|gdouble
name|r
parameter_list|,
name|gdouble
name|g
parameter_list|,
name|gdouble
name|b
parameter_list|,
name|gdouble
name|a
parameter_list|)
function_decl|;
name|void
name|gimp_rgba_set_uchar
parameter_list|(
name|GimpRGB
modifier|*
name|rgba
parameter_list|,
name|guchar
name|r
parameter_list|,
name|guchar
name|g
parameter_list|,
name|guchar
name|b
parameter_list|,
name|guchar
name|a
parameter_list|)
function_decl|;
name|void
name|gimp_rgba_get_uchar
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgba
parameter_list|,
name|guchar
modifier|*
name|r
parameter_list|,
name|guchar
modifier|*
name|g
parameter_list|,
name|guchar
modifier|*
name|b
parameter_list|,
name|guchar
modifier|*
name|a
parameter_list|)
function_decl|;
name|void
name|gimp_rgba_add
parameter_list|(
name|GimpRGB
modifier|*
name|rgba1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgba2
parameter_list|)
function_decl|;
name|void
name|gimp_rgba_subtract
parameter_list|(
name|GimpRGB
modifier|*
name|rgba1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgba2
parameter_list|)
function_decl|;
name|void
name|gimp_rgba_multiply
parameter_list|(
name|GimpRGB
modifier|*
name|rgba
parameter_list|,
name|gdouble
name|factor
parameter_list|)
function_decl|;
name|gdouble
name|gimp_rgba_distance
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgba1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgba2
parameter_list|)
function_decl|;
name|void
name|gimp_hsv_set
parameter_list|(
name|GimpHSV
modifier|*
name|hsv
parameter_list|,
name|gdouble
name|h
parameter_list|,
name|gdouble
name|s
parameter_list|,
name|gdouble
name|v
parameter_list|)
function_decl|;
name|void
name|gimp_hsv_clamp
parameter_list|(
name|GimpHSV
modifier|*
name|hsv
parameter_list|)
function_decl|;
name|void
name|gimp_hsva_set
parameter_list|(
name|GimpHSV
modifier|*
name|hsva
parameter_list|,
name|gdouble
name|h
parameter_list|,
name|gdouble
name|s
parameter_list|,
name|gdouble
name|v
parameter_list|,
name|gdouble
name|a
parameter_list|)
function_decl|;
comment|/*  These will become the default one day  */
name|gboolean
name|gimp_palette_set_foreground_rgb
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
name|gboolean
name|gimp_palette_get_foreground_rgb
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
name|gboolean
name|gimp_palette_set_background_rgb
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
name|gboolean
name|gimp_palette_get_background_rgb
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __cplusplus */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __GIMP_COLOR_H__ */
end_comment

end_unit

