begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 1995 Spencer Kimball and Peter Mattis  *  * This is a plug-in for the GIMP.  *  * Generates images containing vector type drawings.  *  * Copyright (C) 1997 Andy Thomas  alt@picnic.demon.co.uk  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  *   */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__GFIG_H__
end_ifndef

begin_define
DECL|macro|__GFIG_H__
define|#
directive|define
name|__GFIG_H__
end_define

begin_include
include|#
directive|include
file|"gfig_dobject.h"
end_include

begin_define
DECL|macro|MAX_LOAD_LINE
define|#
directive|define
name|MAX_LOAD_LINE
value|256
end_define

begin_decl_stmt
specifier|extern
name|gint
name|line_no
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|gint
name|preview_width
decl_stmt|,
name|preview_height
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|gint
name|drawing_pic
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|gint
name|need_to_scale
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|gint32
name|gfig_image
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|gint32
name|gfig_drawable
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|GdkGC
modifier|*
name|gfig_gc
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|gdouble
name|scale_x_factor
decl_stmt|,
name|scale_y_factor
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|GtkWidget
modifier|*
name|gfig_preview
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|GtkWidget
modifier|*
name|pic_preview
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|Dobject
modifier|*
name|tmp_line
decl_stmt|;
end_decl_stmt

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon299242d80103
block|{
DECL|enumerator|RECT_GRID
name|RECT_GRID
init|=
literal|0
block|,
DECL|enumerator|POLAR_GRID
name|POLAR_GRID
block|,
DECL|enumerator|ISO_GRID
name|ISO_GRID
DECL|typedef|GridType
block|}
name|GridType
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
DECL|struct|__anon299242d80208
block|{
DECL|member|gridspacing
name|gint
name|gridspacing
decl_stmt|;
DECL|member|gridtype
name|GridType
name|gridtype
decl_stmt|;
DECL|member|drawgrid
name|gboolean
name|drawgrid
decl_stmt|;
DECL|member|snap2grid
name|gboolean
name|snap2grid
decl_stmt|;
DECL|member|lockongrid
name|gboolean
name|lockongrid
decl_stmt|;
DECL|member|showcontrol
name|gboolean
name|showcontrol
decl_stmt|;
DECL|typedef|GfigOpts
block|}
name|GfigOpts
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon299242d80303
block|{
DECL|enumerator|ADD
name|ADD
init|=
literal|0
block|,
DECL|enumerator|SUBTRACT
name|SUBTRACT
block|,
DECL|enumerator|REPLACE
name|REPLACE
block|,
DECL|enumerator|INTERSECT
name|INTERSECT
DECL|typedef|SelectionType
block|}
name|SelectionType
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon299242d80403
block|{
DECL|enumerator|ARC_SEGMENT
name|ARC_SEGMENT
init|=
literal|0
block|,
DECL|enumerator|ARC_SECTOR
name|ARC_SECTOR
DECL|typedef|ArcType
block|}
name|ArcType
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon299242d80503
block|{
DECL|enumerator|FILL_FOREGROUND
name|FILL_FOREGROUND
init|=
literal|0
block|,
DECL|enumerator|FILL_BACKGROUND
name|FILL_BACKGROUND
block|,
DECL|enumerator|FILL_PATTERN
name|FILL_PATTERN
DECL|typedef|FillType
block|}
name|FillType
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon299242d80603
block|{
DECL|enumerator|FILL_EACH
name|FILL_EACH
init|=
literal|0
block|,
DECL|enumerator|FILL_AFTER
name|FILL_AFTER
DECL|typedef|FillWhen
block|}
name|FillWhen
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
DECL|struct|__anon299242d80708
block|{
DECL|member|type
name|SelectionType
name|type
decl_stmt|;
comment|/* ADD etc .. */
DECL|member|antia
name|gint
name|antia
decl_stmt|;
comment|/* Boolean for Antia */
DECL|member|feather
name|gint
name|feather
decl_stmt|;
comment|/* Feather it ? */
DECL|member|feather_radius
name|gdouble
name|feather_radius
decl_stmt|;
comment|/* Radius to feather */
DECL|member|as_pie
name|ArcType
name|as_pie
decl_stmt|;
comment|/* Arc type selection segment/sector */
DECL|member|fill_type
name|FillType
name|fill_type
decl_stmt|;
comment|/* Fill type for selection */
DECL|member|fill_when
name|FillWhen
name|fill_when
decl_stmt|;
comment|/* Fill on each selection or after all? */
DECL|member|fill_opacity
name|gdouble
name|fill_opacity
decl_stmt|;
comment|/* You can guess this one */
DECL|typedef|selection_option
block|}
name|selection_option
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon299242d80803
block|{
DECL|enumerator|ORIGINAL_LAYER
name|ORIGINAL_LAYER
init|=
literal|0
block|,
DECL|enumerator|SINGLE_LAYER
name|SINGLE_LAYER
block|,
DECL|enumerator|MULTI_LAYER
name|MULTI_LAYER
DECL|typedef|DrawonLayers
block|}
name|DrawonLayers
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon299242d80903
block|{
DECL|enumerator|LAYER_TRANS_BG
name|LAYER_TRANS_BG
init|=
literal|0
block|,
DECL|enumerator|LAYER_BG_BG
name|LAYER_BG_BG
block|,
DECL|enumerator|LAYER_FG_BG
name|LAYER_FG_BG
block|,
DECL|enumerator|LAYER_WHITE_BG
name|LAYER_WHITE_BG
block|,
DECL|enumerator|LAYER_COPY_BG
name|LAYER_COPY_BG
DECL|typedef|LayersBGType
block|}
name|LayersBGType
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon299242d80a03
block|{
DECL|enumerator|PAINT_BRUSH_TYPE
name|PAINT_BRUSH_TYPE
init|=
literal|0
block|,
DECL|enumerator|PAINT_SELECTION_TYPE
name|PAINT_SELECTION_TYPE
block|,
DECL|enumerator|PAINT_SELECTION_FILL_TYPE
name|PAINT_SELECTION_FILL_TYPE
DECL|typedef|PaintType
block|}
name|PaintType
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon299242d80b03
block|{
DECL|enumerator|BRUSH_BRUSH_TYPE
name|BRUSH_BRUSH_TYPE
init|=
literal|0
block|,
DECL|enumerator|BRUSH_PENCIL_TYPE
name|BRUSH_PENCIL_TYPE
block|,
DECL|enumerator|BRUSH_AIRBRUSH_TYPE
name|BRUSH_AIRBRUSH_TYPE
block|,
DECL|enumerator|BRUSH_PATTERN_TYPE
name|BRUSH_PATTERN_TYPE
DECL|typedef|BrushType
block|}
name|BrushType
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
DECL|struct|__anon299242d80c08
block|{
DECL|member|opts
name|GfigOpts
name|opts
decl_stmt|;
DECL|member|showimage
name|gboolean
name|showimage
decl_stmt|;
DECL|member|maxundo
name|gint
name|maxundo
decl_stmt|;
DECL|member|showpos
name|gboolean
name|showpos
decl_stmt|;
DECL|member|brushfade
name|gdouble
name|brushfade
decl_stmt|;
DECL|member|brushgradient
name|gdouble
name|brushgradient
decl_stmt|;
DECL|member|airbrushpressure
name|gdouble
name|airbrushpressure
decl_stmt|;
DECL|member|onlayers
name|DrawonLayers
name|onlayers
decl_stmt|;
DECL|member|onlayerbg
name|LayersBGType
name|onlayerbg
decl_stmt|;
DECL|member|painttype
name|PaintType
name|painttype
decl_stmt|;
DECL|member|reverselines
name|gboolean
name|reverselines
decl_stmt|;
DECL|member|scaletoimage
name|gboolean
name|scaletoimage
decl_stmt|;
DECL|member|scaletoimagefp
name|gdouble
name|scaletoimagefp
decl_stmt|;
DECL|member|approxcircles
name|gboolean
name|approxcircles
decl_stmt|;
DECL|member|brshtype
name|BrushType
name|brshtype
decl_stmt|;
DECL|member|otype
name|DobjType
name|otype
decl_stmt|;
DECL|typedef|SelectItVals
block|}
name|SelectItVals
typedef|;
end_typedef

begin_typedef
DECL|struct|DAllObjs
typedef|typedef
struct|struct
name|DAllObjs
block|{
DECL|member|next
name|struct
name|DAllObjs
modifier|*
name|next
decl_stmt|;
DECL|member|obj
name|Dobject
modifier|*
name|obj
decl_stmt|;
comment|/* Object on list */
DECL|typedef|DAllObjs
block|}
name|DAllObjs
typedef|;
end_typedef

begin_typedef
DECL|struct|DFigObj
typedef|typedef
struct|struct
name|DFigObj
block|{
DECL|member|name
name|gchar
modifier|*
name|name
decl_stmt|;
comment|/* Trailing name of file  */
DECL|member|filename
name|gchar
modifier|*
name|filename
decl_stmt|;
comment|/* Filename itself */
DECL|member|draw_name
name|gchar
modifier|*
name|draw_name
decl_stmt|;
comment|/* Name of the drawing */
DECL|member|version
name|gfloat
name|version
decl_stmt|;
comment|/* Version number of data file */
DECL|member|opts
name|GfigOpts
name|opts
decl_stmt|;
comment|/* Options enforced when fig saved */
DECL|member|obj_list
name|DAllObjs
modifier|*
name|obj_list
decl_stmt|;
comment|/* Objects that make up this list */
DECL|member|obj_status
name|gint
name|obj_status
decl_stmt|;
comment|/* See above for possible values */
DECL|member|list_item
name|GtkWidget
modifier|*
name|list_item
decl_stmt|;
DECL|member|label_widget
name|GtkWidget
modifier|*
name|label_widget
decl_stmt|;
DECL|member|pixmap_widget
name|GtkWidget
modifier|*
name|pixmap_widget
decl_stmt|;
DECL|typedef|GFigObj
block|}
name|GFigObj
typedef|;
end_typedef

begin_decl_stmt
specifier|extern
name|GFigObj
modifier|*
name|current_obj
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|selection_option
name|selopt
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|SelectItVals
name|selvals
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|add_to_all_obj
parameter_list|(
name|GFigObj
modifier|*
name|fobj
parameter_list|,
name|Dobject
modifier|*
name|obj
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gchar
modifier|*
name|get_line
parameter_list|(
name|gchar
modifier|*
name|buf
parameter_list|,
name|gint
name|s
parameter_list|,
name|FILE
modifier|*
name|from
parameter_list|,
name|gint
name|init
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|gfig_scale_x
parameter_list|(
name|gint
name|x
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|gfig_scale_y
parameter_list|(
name|gint
name|y
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|scale_to_xy
parameter_list|(
name|gdouble
modifier|*
name|list
parameter_list|,
name|gint
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|scale_to_original_xy
parameter_list|(
name|gdouble
modifier|*
name|list
parameter_list|,
name|gint
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|adjust_pic_coords
parameter_list|(
name|gint
name|coord
parameter_list|,
name|gint
name|ratio
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|reverse_pairs_list
parameter_list|(
name|gdouble
modifier|*
name|list
parameter_list|,
name|gint
name|size
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gfig_paint
parameter_list|(
name|BrushType
name|brush_type
parameter_list|,
name|gint32
name|drawable_ID
parameter_list|,
name|gint
name|seg_count
parameter_list|,
name|gdouble
name|line_pnts
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|draw_circle
parameter_list|(
name|GdkPoint
modifier|*
name|p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|draw_sqr
parameter_list|(
name|GdkPoint
modifier|*
name|p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|num_sides_dialog
parameter_list|(
name|gchar
modifier|*
name|d_title
parameter_list|,
name|gint
modifier|*
name|num_sides
parameter_list|,
name|gint
modifier|*
name|which_way
parameter_list|,
name|gint
name|adj_min
parameter_list|,
name|gint
name|adj_max
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __GFIG_H__ */
end_comment

end_unit

