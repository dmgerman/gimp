begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* Scheme In One Defun, but in C this time.   *                        COPYRIGHT (c) 1988-1992 BY                        *  *        PARADIGM ASSOCIATES INCORPORATED, CAMBRIDGE, MASSACHUSETTS.       *  *        See the source file SLIB.C for more information.                  *   Declarations which are private to SLIB.C internals.  However, some of these should be moved to siod.h   $Id$   */
end_comment

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|tkbuffer
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|LISP
name|heap
decl_stmt|,
name|heap_end
decl_stmt|,
name|heap_org
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|LISP
name|sym_t
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|long
name|siod_verbose_level
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|siod_lib
decl_stmt|;
end_decl_stmt

begin_struct
DECL|struct|user_type_hooks
struct|struct
name|user_type_hooks
block|{
DECL|member|gc_relocate
name|LISP
function_decl|(
modifier|*
name|gc_relocate
function_decl|)
parameter_list|(
name|LISP
parameter_list|)
function_decl|;
DECL|member|gc_scan
name|void
function_decl|(
modifier|*
name|gc_scan
function_decl|)
parameter_list|(
name|LISP
parameter_list|)
function_decl|;
DECL|member|gc_mark
name|LISP
function_decl|(
modifier|*
name|gc_mark
function_decl|)
parameter_list|(
name|LISP
parameter_list|)
function_decl|;
DECL|member|gc_free
name|void
function_decl|(
modifier|*
name|gc_free
function_decl|)
parameter_list|(
name|LISP
parameter_list|)
function_decl|;
DECL|member|prin1
name|void
function_decl|(
modifier|*
name|prin1
function_decl|)
parameter_list|(
name|LISP
parameter_list|,
name|struct
name|gen_printio
modifier|*
parameter_list|)
function_decl|;
DECL|member|leval
name|LISP
function_decl|(
modifier|*
name|leval
function_decl|)
parameter_list|(
name|LISP
parameter_list|,
name|LISP
modifier|*
parameter_list|,
name|LISP
modifier|*
parameter_list|)
function_decl|;
DECL|member|c_sxhash
name|long
function_decl|(
modifier|*
name|c_sxhash
function_decl|)
parameter_list|(
name|LISP
parameter_list|,
name|long
parameter_list|)
function_decl|;
DECL|member|fast_print
name|LISP
function_decl|(
modifier|*
name|fast_print
function_decl|)
parameter_list|(
name|LISP
parameter_list|,
name|LISP
parameter_list|)
function_decl|;
DECL|member|fast_read
name|LISP
function_decl|(
modifier|*
name|fast_read
function_decl|)
parameter_list|(
name|int
parameter_list|,
name|LISP
parameter_list|)
function_decl|;
DECL|member|equal
name|LISP
function_decl|(
modifier|*
name|equal
function_decl|)
parameter_list|(
name|LISP
parameter_list|,
name|LISP
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_struct
DECL|struct|catch_frame
struct|struct
name|catch_frame
block|{
DECL|member|tag
name|LISP
name|tag
decl_stmt|;
DECL|member|retval
name|LISP
name|retval
decl_stmt|;
DECL|member|cframe
name|jmp_buf
name|cframe
decl_stmt|;
DECL|member|next
name|struct
name|catch_frame
modifier|*
name|next
decl_stmt|;
block|}
struct|;
end_struct

begin_decl_stmt
specifier|extern
name|struct
name|catch_frame
modifier|*
name|catch_framep
decl_stmt|;
end_decl_stmt

begin_struct
DECL|struct|gc_protected
struct|struct
name|gc_protected
block|{
DECL|member|location
name|LISP
modifier|*
name|location
decl_stmt|;
DECL|member|length
name|long
name|length
decl_stmt|;
DECL|member|next
name|struct
name|gc_protected
modifier|*
name|next
decl_stmt|;
block|}
struct|;
end_struct

begin_define
DECL|macro|NEWCELL (_into,_type)
define|#
directive|define
name|NEWCELL
parameter_list|(
name|_into
parameter_list|,
name|_type
parameter_list|)
define|\
value|{if (gc_kind_copying == 1)            \    {if ((_into = heap)>= heap_end)   \       gc_fatal_error();               \     heap = _into+1;}                  \  else                                 \    {if NULLP(freelist)                \       gc_for_newcell();               \     _into = freelist;                 \     freelist = CDR(freelist);         \     ++gc_cells_allocated;}            \  (*_into).gc_mark = 0;                \  (*_into).type = (short) _type;}
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|THINK_C
end_ifdef

begin_decl_stmt
specifier|extern
name|int
name|ipoll_counter
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|full_interrupt_poll
parameter_list|(
name|int
modifier|*
name|counter
parameter_list|)
function_decl|;
end_function_decl

begin_define
DECL|macro|INTERRUPT_CHECK ()
define|#
directive|define
name|INTERRUPT_CHECK
parameter_list|()
value|if (--ipoll_counter< 0) full_interrupt_poll(&ipoll_counter)
end_define

begin_else
else|#
directive|else
end_else

begin_define
DECL|macro|INTERRUPT_CHECK ()
define|#
directive|define
name|INTERRUPT_CHECK
parameter_list|()
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|stack_limit_ptr
decl_stmt|;
end_decl_stmt

begin_define
DECL|macro|STACK_LIMIT (_ptr,_amt)
define|#
directive|define
name|STACK_LIMIT
parameter_list|(
name|_ptr
parameter_list|,
name|_amt
parameter_list|)
value|(((char *)_ptr) - (_amt))
end_define

begin_define
DECL|macro|STACK_CHECK (_ptr)
define|#
directive|define
name|STACK_CHECK
parameter_list|(
name|_ptr
parameter_list|)
define|\
value|if (((char *) (_ptr))< stack_limit_ptr) err_stack((char *) _ptr);
end_define

begin_function_decl
name|void
name|err_stack
parameter_list|(
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_if
if|#
directive|if
name|defined
argument_list|(
name|VMS
argument_list|)
operator|&&
name|defined
argument_list|(
name|VAX
argument_list|)
end_if

begin_define
DECL|macro|SIG_restargs
define|#
directive|define
name|SIG_restargs
value|,...
end_define

begin_else
else|#
directive|else
end_else

begin_define
DECL|macro|SIG_restargs
define|#
directive|define
name|SIG_restargs
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_function_decl
name|void
name|handle_sigfpe
parameter_list|(
name|int
name|sig
name|SIG_restargs
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|handle_sigint
parameter_list|(
name|int
name|sig
name|SIG_restargs
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|err_ctrl_c
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|double
name|myruntime
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|fput_st
parameter_list|(
name|FILE
modifier|*
name|f
parameter_list|,
name|char
modifier|*
name|st
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|put_st
parameter_list|(
name|char
modifier|*
name|st
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|grepl_puts
parameter_list|(
name|char
modifier|*
parameter_list|,
name|void
function_decl|(
modifier|*
function_decl|)
parameter_list|(
name|char
modifier|*
parameter_list|)
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gc_fatal_error
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|gen_intern
parameter_list|(
name|char
modifier|*
name|name
parameter_list|,
name|long
name|copyp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|scan_registers
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|init_storage_1
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|struct
name|user_type_hooks
modifier|*
name|get_user_type_hooks
parameter_list|(
name|long
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|get_newspace
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|scan_newspace
parameter_list|(
name|LISP
name|newspace
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|free_oldspace
parameter_list|(
name|LISP
name|space
parameter_list|,
name|LISP
name|end
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gc_stop_and_copy
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gc_for_newcell
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gc_mark_and_sweep
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gc_ms_stats_start
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gc_ms_stats_end
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gc_mark
parameter_list|(
name|LISP
name|ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mark_protected_registers
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mark_locations
parameter_list|(
name|LISP
modifier|*
name|start
parameter_list|,
name|LISP
modifier|*
name|end
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|mark_locations_array
parameter_list|(
name|LISP
modifier|*
name|x
parameter_list|,
name|long
name|n
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gc_sweep
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_args
parameter_list|(
name|LISP
name|l
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|extend_env
parameter_list|(
name|LISP
name|actuals
parameter_list|,
name|LISP
name|formals
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|envlookup
parameter_list|(
name|LISP
name|var
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|setvar
parameter_list|(
name|LISP
name|var
parameter_list|,
name|LISP
name|val
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_setq
parameter_list|(
name|LISP
name|args
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|syntax_define
parameter_list|(
name|LISP
name|args
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_define
parameter_list|(
name|LISP
name|args
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_if
parameter_list|(
name|LISP
modifier|*
name|pform
parameter_list|,
name|LISP
modifier|*
name|penv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_lambda
parameter_list|(
name|LISP
name|args
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_progn
parameter_list|(
name|LISP
modifier|*
name|pform
parameter_list|,
name|LISP
modifier|*
name|penv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_or
parameter_list|(
name|LISP
modifier|*
name|pform
parameter_list|,
name|LISP
modifier|*
name|penv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_and
parameter_list|(
name|LISP
modifier|*
name|pform
parameter_list|,
name|LISP
modifier|*
name|penv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_catch_1
parameter_list|(
name|LISP
name|forms
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_catch
parameter_list|(
name|LISP
name|args
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|lthrow
parameter_list|(
name|LISP
name|tag
parameter_list|,
name|LISP
name|value
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_let
parameter_list|(
name|LISP
modifier|*
name|pform
parameter_list|,
name|LISP
modifier|*
name|penv
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|reverse
parameter_list|(
name|LISP
name|l
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|let_macro
parameter_list|(
name|LISP
name|form
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_quote
parameter_list|(
name|LISP
name|args
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_tenv
parameter_list|(
name|LISP
name|args
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|flush_ws
parameter_list|(
name|struct
name|gen_readio
modifier|*
name|f
parameter_list|,
name|char
modifier|*
name|eoferr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|f_getc
parameter_list|(
name|FILE
modifier|*
name|f
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|f_ungetc
parameter_list|(
name|int
name|c
parameter_list|,
name|FILE
modifier|*
name|f
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|lreadr
parameter_list|(
name|struct
name|gen_readio
modifier|*
name|f
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|lreadparen
parameter_list|(
name|struct
name|gen_readio
modifier|*
name|f
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|arglchk
parameter_list|(
name|LISP
name|x
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|init_storage_a1
parameter_list|(
name|long
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|init_storage_a
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|array_gc_relocate
parameter_list|(
name|LISP
name|ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|array_gc_scan
parameter_list|(
name|LISP
name|ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|array_gc_mark
parameter_list|(
name|LISP
name|ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|array_gc_free
parameter_list|(
name|LISP
name|ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|array_prin1
parameter_list|(
name|LISP
name|ptr
parameter_list|,
name|struct
name|gen_printio
modifier|*
name|f
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|array_sxhaxh
parameter_list|(
name|LISP
parameter_list|,
name|long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|array_fast_print
parameter_list|(
name|LISP
parameter_list|,
name|LISP
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|array_fast_read
parameter_list|(
name|int
parameter_list|,
name|LISP
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|array_equal
parameter_list|(
name|LISP
parameter_list|,
name|LISP
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|array_sxhash
parameter_list|(
name|LISP
parameter_list|,
name|long
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|rfs_getc
parameter_list|(
name|unsigned
name|char
modifier|*
modifier|*
name|p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|rfs_ungetc
parameter_list|(
name|unsigned
name|char
name|c
parameter_list|,
name|unsigned
name|char
modifier|*
modifier|*
name|p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|err1_aset1
parameter_list|(
name|LISP
name|i
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|err2_aset1
parameter_list|(
name|LISP
name|v
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|lreadstring
parameter_list|(
name|struct
name|gen_readio
modifier|*
name|f
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|lreadsharp
parameter_list|(
name|struct
name|gen_readio
modifier|*
name|f
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|file_gc_free
parameter_list|(
name|LISP
name|ptr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|file_prin1
parameter_list|(
name|LISP
name|ptr
parameter_list|,
name|struct
name|gen_printio
modifier|*
name|f
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|fopen_c
parameter_list|(
name|char
modifier|*
name|name
parameter_list|,
name|char
modifier|*
name|how
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|fopen_cg
parameter_list|(
name|FILE
modifier|*
function_decl|(
modifier|*
function_decl|)
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|,
specifier|const
name|char
modifier|*
parameter_list|)
parameter_list|,
name|char
modifier|*
parameter_list|,
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|fopen_l
parameter_list|(
name|LISP
name|name
parameter_list|,
name|LISP
name|how
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|fclose_l
parameter_list|(
name|LISP
name|p
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|lftell
parameter_list|(
name|LISP
name|file
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|lfseek
parameter_list|(
name|LISP
name|file
parameter_list|,
name|LISP
name|offset
parameter_list|,
name|LISP
name|direction
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|lfread
parameter_list|(
name|LISP
name|size
parameter_list|,
name|LISP
name|file
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|lfwrite
parameter_list|(
name|LISP
name|string
parameter_list|,
name|LISP
name|file
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|leval_while
parameter_list|(
name|LISP
name|args
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|init_subrs_a
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|init_subrs_1
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|href_index
parameter_list|(
name|LISP
name|table
parameter_list|,
name|LISP
name|key
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|put_long
parameter_list|(
name|long
parameter_list|,
name|FILE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|get_long
parameter_list|(
name|FILE
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|fast_print_table
parameter_list|(
name|LISP
name|obj
parameter_list|,
name|LISP
name|table
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|stack_limit
parameter_list|(
name|LISP
parameter_list|,
name|LISP
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|err0
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|pr
parameter_list|(
name|LISP
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|prp
parameter_list|(
name|LISP
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|closure_code
parameter_list|(
name|LISP
name|exp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|closure_env
parameter_list|(
name|LISP
name|exp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|lwhile
parameter_list|(
name|LISP
name|form
parameter_list|,
name|LISP
name|env
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|nlength
parameter_list|(
name|LISP
name|obj
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|llength
parameter_list|(
name|LISP
name|obj
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gc_kind_check
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|allocate_aheap
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|looks_pointerp
parameter_list|(
name|LISP
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|nactive_heaps
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|long
name|freelist_length
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|gc_info
parameter_list|(
name|LISP
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|LISP
name|err_closure_code
parameter_list|(
name|LISP
name|tmp
parameter_list|)
function_decl|;
end_function_decl

end_unit

