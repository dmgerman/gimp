begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * GIMP Dynamic Text -- This is a plug-in for The GIMP 1.0  * Copyright (C) 1998,1999,2000 Marco Lamberto<lm@geocities.com>  * Web page: http://www.geocities.com/Tokyo/1474/gimp/  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  *  * $Id$  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|_FONT_SELECTION_H_
end_ifndef

begin_define
DECL|macro|_FONT_SELECTION_H_
define|#
directive|define
name|_FONT_SELECTION_H_
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
comment|/* __cplusplus */
DECL|macro|FONT_SELECTION (obj)
define|#
directive|define
name|FONT_SELECTION
parameter_list|(
name|obj
parameter_list|)
value|GTK_CHECK_CAST(obj, font_selection_get_type(), FontSelection)
DECL|macro|FONT_SELECTION_CLASS (klass)
define|#
directive|define
name|FONT_SELECTION_CLASS
parameter_list|(
name|klass
parameter_list|)
value|GTK_CHECK_CLASS_CAST(klass, font_selection_get_type(), FontSelectionClass)
DECL|macro|IS_FONT_SELECTION (obj)
define|#
directive|define
name|IS_FONT_SELECTION
parameter_list|(
name|obj
parameter_list|)
value|GTK_CHECK_TYPE(obj, font_selection_get_type())
DECL|typedef|FontSelection
typedef|typedef
name|struct
name|_FontSelection
name|FontSelection
typedef|;
DECL|typedef|FontSelectionClass
typedef|typedef
name|struct
name|_FontSelectionClass
name|FontSelectionClass
typedef|;
typedef|typedef
enum|enum
DECL|enum|__anon298b6b530103
block|{
DECL|enumerator|FONT_METRIC_PIXELS
name|FONT_METRIC_PIXELS
init|=
literal|0
block|,
DECL|enumerator|FONT_METRIC_POINTS
name|FONT_METRIC_POINTS
init|=
literal|1
DECL|typedef|FontMetricType
block|}
name|FontMetricType
typedef|;
DECL|struct|_FontSelection
struct|struct
name|_FontSelection
block|{
DECL|member|hbox
name|GtkVBox
name|hbox
decl_stmt|;
DECL|member|font_selection
name|GtkWidget
modifier|*
name|font_selection
decl_stmt|;
DECL|member|font_family
name|GtkWidget
modifier|*
name|font_family
decl_stmt|;
DECL|member|font_style
name|GtkWidget
modifier|*
name|font_style
decl_stmt|;
DECL|member|font_size
name|GtkWidget
modifier|*
name|font_size
decl_stmt|;
DECL|member|font_metric
name|GtkWidget
modifier|*
name|font_metric
decl_stmt|;
DECL|member|font_names_hash
name|GHashTable
modifier|*
name|font_names_hash
decl_stmt|;
DECL|member|font_styles_hash
name|GHashTable
modifier|*
name|font_styles_hash
decl_stmt|;
DECL|member|skip_fs_events
name|gboolean
name|skip_fs_events
decl_stmt|;
block|}
struct|;
DECL|struct|_FontSelectionClass
struct|struct
name|_FontSelectionClass
block|{
DECL|member|parent_class
name|GtkHBoxClass
name|parent_class
decl_stmt|;
DECL|member|font_changed
name|void
function_decl|(
modifier|*
name|font_changed
function_decl|)
parameter_list|(
name|FontSelection
modifier|*
name|fs
parameter_list|)
function_decl|;
block|}
struct|;
name|guint
name|font_selection_get_type
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|GtkWidget
modifier|*
name|font_selection_new
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|gboolean
name|font_selection_set_font_name
parameter_list|(
name|FontSelection
modifier|*
name|fs
parameter_list|,
specifier|const
name|gchar
modifier|*
name|fontname
parameter_list|)
function_decl|;
name|GdkFont
modifier|*
name|font_selection_get_font
parameter_list|(
name|FontSelection
modifier|*
name|fs
parameter_list|)
function_decl|;
name|gchar
modifier|*
name|font_selection_get_font_name
parameter_list|(
name|FontSelection
modifier|*
name|fs
parameter_list|)
function_decl|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __cplusplus */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* _FONT_SELECTION_H_ */
end_comment

begin_comment
comment|/* vim: set ts=2 sw=2 tw=79 ai nowrap: */
end_comment

end_unit

