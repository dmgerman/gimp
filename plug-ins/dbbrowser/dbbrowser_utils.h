begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* The GIMP -- an image manipulation program  * Copyright (C) 1995 Spencer Kimball and Peter Mattis  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_comment
comment|/*     dbbrowser_utils.h    0.08  26th sept 97  by Thomas NOEL<thomas@minet.net>  */
end_comment

begin_comment
comment|/* configuration */
end_comment

begin_define
DECL|macro|DBL_LIST_WIDTH
define|#
directive|define
name|DBL_LIST_WIDTH
value|220
end_define

begin_define
DECL|macro|DBL_WIDTH
define|#
directive|define
name|DBL_WIDTH
value|DBL_LIST_WIDTH+400
end_define

begin_define
DECL|macro|DBL_HEIGHT
define|#
directive|define
name|DBL_HEIGHT
value|250
end_define

begin_comment
comment|/* end of configuration */
end_comment

begin_include
include|#
directive|include
file|<stdlib.h>
end_include

begin_include
include|#
directive|include
file|<string.h>
end_include

begin_include
include|#
directive|include
file|"gtk/gtk.h"
end_include

begin_include
include|#
directive|include
file|"libgimp/gimp.h"
end_include

begin_include
include|#
directive|include
file|"dbbrowser.h"
end_include

begin_typedef
DECL|struct|__anon27f2ce400108
typedef|typedef
struct|struct
block|{
DECL|member|label
name|gchar
modifier|*
name|label
decl_stmt|;
DECL|member|func
name|gchar
modifier|*
name|func
decl_stmt|;
DECL|typedef|ListEntry_t
block|}
name|ListEntry_t
typedef|;
end_typedef

begin_typedef
DECL|struct|__anon27f2ce400208
typedef|typedef
struct|struct
block|{
DECL|member|dlg
name|GtkWidget
modifier|*
name|dlg
decl_stmt|;
DECL|member|search_entry
name|GtkWidget
modifier|*
name|search_entry
decl_stmt|;
DECL|member|name_button
name|GtkWidget
modifier|*
name|name_button
decl_stmt|;
DECL|member|blurb_button
name|GtkWidget
modifier|*
name|blurb_button
decl_stmt|;
DECL|member|descr_scroll
name|GtkWidget
modifier|*
name|descr_scroll
decl_stmt|;
DECL|member|descr_table
name|GtkWidget
modifier|*
name|descr_table
decl_stmt|;
DECL|member|clist
name|GtkWidget
modifier|*
name|clist
decl_stmt|;
DECL|member|scrolled_win
name|GtkWidget
modifier|*
name|scrolled_win
decl_stmt|;
comment|/* the currently selected procedure */
DECL|member|selected_proc_name
name|gchar
modifier|*
name|selected_proc_name
decl_stmt|;
DECL|member|selected_scheme_proc_name
name|gchar
modifier|*
name|selected_scheme_proc_name
decl_stmt|;
DECL|member|selected_proc_blurb
name|gchar
modifier|*
name|selected_proc_blurb
decl_stmt|;
DECL|member|selected_proc_help
name|gchar
modifier|*
name|selected_proc_help
decl_stmt|;
DECL|member|selected_proc_author
name|gchar
modifier|*
name|selected_proc_author
decl_stmt|;
DECL|member|selected_proc_copyright
name|gchar
modifier|*
name|selected_proc_copyright
decl_stmt|;
DECL|member|selected_proc_date
name|gchar
modifier|*
name|selected_proc_date
decl_stmt|;
DECL|member|selected_proc_type
name|int
name|selected_proc_type
decl_stmt|;
DECL|member|selected_nparams
name|int
name|selected_nparams
decl_stmt|;
DECL|member|selected_nreturn_vals
name|int
name|selected_nreturn_vals
decl_stmt|;
DECL|member|selected_params
name|GParamDef
modifier|*
name|selected_params
decl_stmt|;
DECL|member|selected_return_vals
name|GParamDef
modifier|*
name|selected_return_vals
decl_stmt|;
DECL|member|apply_callback
name|void
function_decl|(
modifier|*
name|apply_callback
function_decl|)
parameter_list|(
name|gchar
modifier|*
name|selected_proc_name
parameter_list|,
name|gchar
modifier|*
name|selected_scheme_proc_name
parameter_list|,
name|gchar
modifier|*
name|selected_proc_blurb
parameter_list|,
name|gchar
modifier|*
name|selected_proc_help
parameter_list|,
name|gchar
modifier|*
name|selected_proc_author
parameter_list|,
name|gchar
modifier|*
name|selected_proc_copyright
parameter_list|,
name|gchar
modifier|*
name|selected_proc_date
parameter_list|,
name|int
name|selected_proc_type
parameter_list|,
name|int
name|selected_nparams
parameter_list|,
name|int
name|selected_nreturn_vals
parameter_list|,
name|GParamDef
modifier|*
name|selected_params
parameter_list|,
name|GParamDef
modifier|*
name|selected_return_vals
parameter_list|)
function_decl|;
DECL|typedef|dbbrowser_t
block|}
name|dbbrowser_t
typedef|;
end_typedef

begin_comment
comment|/* local functions */
end_comment

begin_function_decl
specifier|static
name|void
name|dialog_apply_callback
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|,
name|gpointer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|gint
name|procedure_select_callback
parameter_list|(
name|GtkWidget
modifier|*
name|widget
parameter_list|,
name|gint
name|row
parameter_list|,
name|gint
name|column
parameter_list|,
name|GdkEventButton
modifier|*
name|bevent
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|dialog_search_callback
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|,
name|gpointer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|dialog_select
parameter_list|(
name|dbbrowser_t
modifier|*
name|dbbrowser
parameter_list|,
name|gchar
modifier|*
name|proc_name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|dialog_close_callback
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|,
name|gpointer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|void
name|convert_string
parameter_list|(
name|gchar
modifier|*
name|str
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|static
name|gchar
modifier|*
name|GParamType2char
parameter_list|(
name|GParamType
name|t
parameter_list|)
function_decl|;
end_function_decl

end_unit

