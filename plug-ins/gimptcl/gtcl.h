begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/***************************************************  * file: gtcl.h  *  * Copyright (c) 1996 Eric L. Hernes (erich@rrnet.com)  * All rights reserved.  *  * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions  * are met:  * 1. Redistributions of source code must retain the above copyright  *    notice, this list of conditions and the following disclaimer.  * 2. The name of the author may not be used to endorse or promote products  *    derived from this software withough specific prior written permission  *  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *  * $Id$  */
end_comment

begin_function_decl
name|int
name|Gtcl_PDBInit
parameter_list|(
name|Tcl_Interp
modifier|*
name|interp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|Gtcl_ConstInit
parameter_list|(
name|Tcl_Interp
modifier|*
name|interp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|Gtcl_GimpRunProc
parameter_list|(
name|ClientData
name|data
parameter_list|,
name|Tcl_Interp
modifier|*
name|interp
parameter_list|,
name|int
name|ac
parameter_list|,
name|char
modifier|*
name|av
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|Gtcl_QueryDBProc
parameter_list|(
name|ClientData
name|data
parameter_list|,
name|Tcl_Interp
modifier|*
name|interp
parameter_list|,
name|int
name|ac
parameter_list|,
name|char
modifier|*
name|av
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|Gtcl_QueryDB
parameter_list|(
name|ClientData
name|data
parameter_list|,
name|Tcl_Interp
modifier|*
name|interp
parameter_list|,
name|int
name|ac
parameter_list|,
name|char
modifier|*
name|av
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|Gtcl_InstallProc
parameter_list|(
name|ClientData
name|data
parameter_list|,
name|Tcl_Interp
modifier|*
name|interp
parameter_list|,
name|int
name|ac
parameter_list|,
name|char
modifier|*
name|av
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|Gtcl_GimpMain
parameter_list|(
name|ClientData
name|data
parameter_list|,
name|Tcl_Interp
modifier|*
name|interp
parameter_list|,
name|int
name|ac
parameter_list|,
name|char
modifier|*
name|av
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|Gtcl_SetData
parameter_list|(
name|ClientData
name|data
parameter_list|,
name|Tcl_Interp
modifier|*
name|interp
parameter_list|,
name|int
name|ac
parameter_list|,
name|char
modifier|*
name|av
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|Gtcl_GetData
parameter_list|(
name|ClientData
name|data
parameter_list|,
name|Tcl_Interp
modifier|*
name|interp
parameter_list|,
name|int
name|ac
parameter_list|,
name|char
modifier|*
name|av
index|[]
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|Argv_to_GParam
parameter_list|(
name|Tcl_Interp
modifier|*
name|interp
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
name|ac
parameter_list|,
name|char
modifier|*
modifier|*
name|av
parameter_list|,
name|GParam
modifier|*
name|parr
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|int
name|GParam_to_Argv
parameter_list|(
name|Tcl_Interp
modifier|*
name|interp
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
name|ac
parameter_list|,
name|GParam
modifier|*
name|vals
parameter_list|,
name|char
modifier|*
modifier|*
name|av
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gtcl_addconst
parameter_list|(
name|Tcl_Interp
modifier|*
name|interp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cvtfrom
parameter_list|(
name|char
modifier|*
name|str
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|cvtto
parameter_list|(
name|char
modifier|*
name|str
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|GtclConst
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|GtclProcs
decl_stmt|;
end_decl_stmt

begin_define
DECL|macro|debugging
define|#
directive|define
name|debugging
value|1
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|debugging
end_ifdef

begin_decl_stmt
specifier|extern
name|int
name|debuglevel
decl_stmt|;
end_decl_stmt

begin_define
DECL|macro|DPRINTF (l,m)
define|#
directive|define
name|DPRINTF
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|)
value|if(debuglevel>=l) fprintf m
end_define

begin_else
else|#
directive|else
end_else

begin_define
DECL|macro|DPRINTF (l,m)
define|#
directive|define
name|DPRINTF
parameter_list|(
name|l
parameter_list|,
name|m
parameter_list|)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_ifdef
ifdef|#
directive|ifdef
name|__linux__
end_ifdef

begin_define
DECL|macro|Tcl_Free
define|#
directive|define
name|Tcl_Free
value|free
end_define

begin_endif
endif|#
directive|endif
end_endif

end_unit

