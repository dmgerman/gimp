begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* GIMP - The GNU Image Manipulation Program  * Copyright (C) 1995 Spencer Kimball and Peter Mattis  *  * Magnification-win32.h  * Copyright (C) 2018 Gil Eliyahu  *  * This program is free software: you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program.  If not, see<https://www.gnu.org/licenses/>.  */
end_comment

begin_include
include|#
directive|include
file|<winapifamily.h>
end_include

begin_pragma
pragma|#
directive|pragma
name|region
name|Desktop
name|Family
end_pragma

begin_if
if|#
directive|if
name|WINAPI_FAMILY_PARTITION
argument_list|(
name|WINAPI_PARTITION_DESKTOP
argument_list|)
end_if

begin_ifndef
ifndef|#
directive|ifndef
name|__wincodec_h__
end_ifndef

begin_include
include|#
directive|include
file|<wincodec.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_define
DECL|macro|WC_MAGNIFIERA
define|#
directive|define
name|WC_MAGNIFIERA
value|"Magnifier"
end_define

begin_define
DECL|macro|WC_MAGNIFIERW
define|#
directive|define
name|WC_MAGNIFIERW
value|L"Magnifier"
end_define

begin_ifdef
ifdef|#
directive|ifdef
name|UNICODE
end_ifdef

begin_define
DECL|macro|WC_MAGNIFIER
define|#
directive|define
name|WC_MAGNIFIER
value|WC_MAGNIFIERW
end_define

begin_else
else|#
directive|else
end_else

begin_define
DECL|macro|WC_MAGNIFIER
define|#
directive|define
name|WC_MAGNIFIER
value|WC_MAGNIFIERA
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_else
else|#
directive|else
end_else

begin_define
DECL|macro|WC_MAGNIFIER
define|#
directive|define
name|WC_MAGNIFIER
value|"Magnifier"
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* Magnifier Window Styles */
end_comment

begin_define
DECL|macro|MS_SHOWMAGNIFIEDCURSOR
define|#
directive|define
name|MS_SHOWMAGNIFIEDCURSOR
value|0x0001L
end_define

begin_define
DECL|macro|MS_CLIPAROUNDCURSOR
define|#
directive|define
name|MS_CLIPAROUNDCURSOR
value|0x0002L
end_define

begin_define
DECL|macro|MS_INVERTCOLORS
define|#
directive|define
name|MS_INVERTCOLORS
value|0x0004L
end_define

begin_comment
comment|/* Filter Modes */
end_comment

begin_define
DECL|macro|MW_FILTERMODE_EXCLUDE
define|#
directive|define
name|MW_FILTERMODE_EXCLUDE
value|0
end_define

begin_define
DECL|macro|MW_FILTERMODE_INCLUDE
define|#
directive|define
name|MW_FILTERMODE_INCLUDE
value|1
end_define

begin_comment
comment|/* Structures */
end_comment

begin_typedef
DECL|struct|tagMAGTRANSFORM
typedef|typedef
struct|struct
name|tagMAGTRANSFORM
block|{
DECL|member|v
name|float
name|v
index|[
literal|3
index|]
index|[
literal|3
index|]
decl_stmt|;
DECL|typedef|MAGTRANSFORM
DECL|typedef|PMAGTRANSFORM
block|}
name|MAGTRANSFORM
operator|,
typedef|*
name|PMAGTRANSFORM
typedef|;
end_typedef

begin_typedef
DECL|struct|tagMAGIMAGEHEADER
typedef|typedef
struct|struct
name|tagMAGIMAGEHEADER
block|{
DECL|member|width
name|UINT
name|width
decl_stmt|;
DECL|member|height
name|UINT
name|height
decl_stmt|;
DECL|member|format
name|WICPixelFormatGUID
name|format
decl_stmt|;
DECL|member|stride
name|UINT
name|stride
decl_stmt|;
DECL|member|offset
name|UINT
name|offset
decl_stmt|;
DECL|member|cbSize
name|SIZE_T
name|cbSize
decl_stmt|;
DECL|typedef|MAGIMAGEHEADER
DECL|typedef|PMAGIMAGEHEADER
block|}
name|MAGIMAGEHEADER
operator|,
typedef|*
name|PMAGIMAGEHEADER
typedef|;
end_typedef

begin_typedef
DECL|struct|tagMAGCOLOREFFECT
typedef|typedef
struct|struct
name|tagMAGCOLOREFFECT
block|{
DECL|member|transform
name|float
name|transform
index|[
literal|5
index|]
index|[
literal|5
index|]
decl_stmt|;
DECL|typedef|MAGCOLOREFFECT
DECL|typedef|PMAGCOLOREFFECT
block|}
name|MAGCOLOREFFECT
operator|,
typedef|*
name|PMAGCOLOREFFECT
typedef|;
end_typedef

begin_comment
comment|/* Proptypes for the public functions */
end_comment

begin_typedef
DECL|typedef|MAGINITIALIZE
typedef|typedef
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|MAGINITIALIZE
function_decl|)
parameter_list|()
function_decl|;
end_typedef

begin_decl_stmt
DECL|variable|MagInitialize
name|MAGINITIALIZE
name|MagInitialize
decl_stmt|;
end_decl_stmt

begin_typedef
DECL|typedef|MAGUNINITIALIZE
typedef|typedef
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|MAGUNINITIALIZE
function_decl|)
parameter_list|()
function_decl|;
end_typedef

begin_decl_stmt
DECL|variable|MagUninitialize
name|MAGUNINITIALIZE
name|MagUninitialize
decl_stmt|;
end_decl_stmt

begin_typedef
DECL|typedef|MAGSETWINDOWSOURCE
typedef|typedef
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|MAGSETWINDOWSOURCE
function_decl|)
parameter_list|(
name|HWND
parameter_list|,
name|RECT
parameter_list|)
function_decl|;
end_typedef

begin_decl_stmt
DECL|variable|MagSetWindowSource
name|MAGSETWINDOWSOURCE
name|MagSetWindowSource
decl_stmt|;
end_decl_stmt

begin_typedef
DECL|typedef|MAGSETWINDOWFILTERLIST
typedef|typedef
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|MAGSETWINDOWFILTERLIST
function_decl|)
parameter_list|(
name|HWND
parameter_list|,
name|DWORD
parameter_list|,
name|int
parameter_list|,
name|HWND
modifier|*
parameter_list|)
function_decl|;
end_typedef

begin_decl_stmt
DECL|variable|MagSetWindowFilterList
name|MAGSETWINDOWFILTERLIST
name|MagSetWindowFilterList
decl_stmt|;
end_decl_stmt

begin_typedef
DECL|typedef|MagImageScalingCallback
typedef|typedef
name|BOOL
function_decl|(
name|CALLBACK
modifier|*
name|MagImageScalingCallback
function_decl|)
parameter_list|(
name|HWND
name|hwnd
parameter_list|,
name|void
modifier|*
name|srcdata
parameter_list|,
name|MAGIMAGEHEADER
name|srcheader
parameter_list|,
name|void
modifier|*
name|destdata
parameter_list|,
name|MAGIMAGEHEADER
name|destheader
parameter_list|,
name|RECT
name|unclipped
parameter_list|,
name|RECT
name|clipped
parameter_list|,
name|HRGN
name|dirty
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|MAGSETIMAGESCALINGCALLBACK
typedef|typedef
name|BOOL
function_decl|(
name|WINAPI
modifier|*
name|MAGSETIMAGESCALINGCALLBACK
function_decl|)
parameter_list|(
name|HWND
parameter_list|,
name|MagImageScalingCallback
parameter_list|)
function_decl|;
end_typedef

begin_decl_stmt
DECL|variable|MagSetImageScalingCallback
name|MAGSETIMAGESCALINGCALLBACK
name|MagSetImageScalingCallback
decl_stmt|;
end_decl_stmt

begin_comment
comment|/* Library DLL */
end_comment

begin_decl_stmt
DECL|variable|magnificationLibrary
specifier|static
name|HINSTANCE
name|magnificationLibrary
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|UnLoadMagnificationLibrary
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|BOOL
name|LoadMagnificationLibrary
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function
DECL|function|UnLoadMagnificationLibrary ()
name|void
name|UnLoadMagnificationLibrary
parameter_list|()
block|{
if|if
condition|(
operator|!
name|magnificationLibrary
condition|)
return|return;
name|FreeLibrary
argument_list|(
name|magnificationLibrary
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
DECL|function|LoadMagnificationLibrary ()
name|BOOL
name|LoadMagnificationLibrary
parameter_list|()
block|{
if|if
condition|(
name|magnificationLibrary
condition|)
return|return
name|TRUE
return|;
name|magnificationLibrary
operator|=
name|LoadLibrary
argument_list|(
literal|"Magnification"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|magnificationLibrary
condition|)
return|return
name|FALSE
return|;
name|MagInitialize
operator|=
operator|(
name|MAGINITIALIZE
operator|)
name|GetProcAddress
argument_list|(
name|magnificationLibrary
argument_list|,
literal|"MagInitialize"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|MagInitialize
condition|)
block|{
name|UnLoadMagnificationLibrary
argument_list|()
expr_stmt|;
return|return
name|FALSE
return|;
block|}
name|MagUninitialize
operator|=
operator|(
name|MAGUNINITIALIZE
operator|)
name|GetProcAddress
argument_list|(
name|magnificationLibrary
argument_list|,
literal|"MagUninitialize"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|MagUninitialize
condition|)
block|{
name|UnLoadMagnificationLibrary
argument_list|()
expr_stmt|;
return|return
name|FALSE
return|;
block|}
name|MagSetWindowSource
operator|=
operator|(
name|MAGSETWINDOWSOURCE
operator|)
name|GetProcAddress
argument_list|(
name|magnificationLibrary
argument_list|,
literal|"MagSetWindowSource"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|MagSetWindowSource
condition|)
block|{
name|UnLoadMagnificationLibrary
argument_list|()
expr_stmt|;
return|return
name|FALSE
return|;
block|}
name|MagSetWindowFilterList
operator|=
operator|(
name|MAGSETWINDOWFILTERLIST
operator|)
name|GetProcAddress
argument_list|(
name|magnificationLibrary
argument_list|,
literal|"MagSetWindowFilterList"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|MagSetWindowFilterList
condition|)
block|{
name|UnLoadMagnificationLibrary
argument_list|()
expr_stmt|;
return|return
name|FALSE
return|;
block|}
name|MagSetImageScalingCallback
operator|=
operator|(
name|MAGSETIMAGESCALINGCALLBACK
operator|)
name|GetProcAddress
argument_list|(
name|magnificationLibrary
argument_list|,
literal|"MagSetImageScalingCallback"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|MagSetImageScalingCallback
condition|)
block|{
name|UnLoadMagnificationLibrary
argument_list|()
expr_stmt|;
return|return
name|FALSE
return|;
block|}
return|return
name|TRUE
return|;
block|}
end_function

end_unit

