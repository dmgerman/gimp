begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/*  * "$Id$"  *  *   Print plug-in header file for the GIMP.  *  *   Copyright 1997-2000 Michael Sweet (mike@easysw.com) and  *	Robert Krawitz (rlk@alum.mit.edu)  *  *   This program is free software; you can redistribute it and/or modify it  *   under the terms of the GNU General Public License as published by the Free  *   Software Foundation; either version 2 of the License, or (at your option)  *   any later version.  *  *   This program is distributed in the hope that it will be useful, but  *   WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY  *   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License  *   for more details.  *  *   You should have received a copy of the GNU General Public License  *   along with this program; if not, write to the Free Software  *   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  *  * Revision History:  *  *   See ChangeLog  */
end_comment

begin_comment
comment|/*  * This file must include only standard C header files.  The core code must  * compile on generic platforms that don't support glib, gimp, gtk, etc.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|PRINT_HEADER
end_ifndef

begin_define
DECL|macro|PRINT_HEADER
define|#
directive|define
name|PRINT_HEADER
end_define

begin_comment
comment|/*  * Include necessary header files...  */
end_comment

begin_include
include|#
directive|include
file|<stdio.h>
end_include

begin_include
include|#
directive|include
file|<stdlib.h>
end_include

begin_include
include|#
directive|include
file|<string.h>
end_include

begin_include
include|#
directive|include
file|<errno.h>
end_include

begin_comment
comment|/*  * Constants...  */
end_comment

begin_define
DECL|macro|OUTPUT_GRAY
define|#
directive|define
name|OUTPUT_GRAY
value|0
end_define

begin_comment
DECL|macro|OUTPUT_GRAY
comment|/* Grayscale output */
end_comment

begin_define
DECL|macro|OUTPUT_COLOR
define|#
directive|define
name|OUTPUT_COLOR
value|1
end_define

begin_comment
DECL|macro|OUTPUT_COLOR
comment|/* Color output */
end_comment

begin_define
DECL|macro|OUTPUT_GRAY_COLOR
define|#
directive|define
name|OUTPUT_GRAY_COLOR
value|2
end_define

begin_comment
DECL|macro|OUTPUT_GRAY_COLOR
comment|/* Grayscale output using color */
end_comment

begin_define
DECL|macro|ORIENT_AUTO
define|#
directive|define
name|ORIENT_AUTO
value|-1
end_define

begin_comment
DECL|macro|ORIENT_AUTO
comment|/* Best orientation */
end_comment

begin_define
DECL|macro|ORIENT_PORTRAIT
define|#
directive|define
name|ORIENT_PORTRAIT
value|0
end_define

begin_comment
DECL|macro|ORIENT_PORTRAIT
comment|/* Portrait orientation */
end_comment

begin_define
DECL|macro|ORIENT_LANDSCAPE
define|#
directive|define
name|ORIENT_LANDSCAPE
value|1
end_define

begin_comment
DECL|macro|ORIENT_LANDSCAPE
comment|/* Landscape orientation */
end_comment

begin_define
DECL|macro|ORIENT_UPSIDEDOWN
define|#
directive|define
name|ORIENT_UPSIDEDOWN
value|2
end_define

begin_comment
DECL|macro|ORIENT_UPSIDEDOWN
comment|/* Reverse portrait orientation */
end_comment

begin_define
DECL|macro|ORIENT_SEASCAPE
define|#
directive|define
name|ORIENT_SEASCAPE
value|3
end_define

begin_comment
DECL|macro|ORIENT_SEASCAPE
comment|/* Reverse landscape orientation */
end_comment

begin_define
DECL|macro|MAX_CARRIAGE_WIDTH
define|#
directive|define
name|MAX_CARRIAGE_WIDTH
value|80
end_define

begin_comment
DECL|macro|MAX_CARRIAGE_WIDTH
comment|/* This really needs to go away */
end_comment

begin_comment
comment|/* For now, this is wide enough for 4B ISO */
end_comment

begin_define
DECL|macro|IMAGE_LINE_ART
define|#
directive|define
name|IMAGE_LINE_ART
value|0
end_define

begin_define
DECL|macro|IMAGE_SOLID_TONE
define|#
directive|define
name|IMAGE_SOLID_TONE
value|1
end_define

begin_define
DECL|macro|IMAGE_CONTINUOUS
define|#
directive|define
name|IMAGE_CONTINUOUS
value|2
end_define

begin_define
DECL|macro|IMAGE_MONOCHROME
define|#
directive|define
name|IMAGE_MONOCHROME
value|3
end_define

begin_define
DECL|macro|NIMAGE_TYPES
define|#
directive|define
name|NIMAGE_TYPES
value|4
end_define

begin_comment
comment|/* Uncomment the next line to get performance statistics:  * look for QUANT(#) in the code. At the end of escp2-print  * run, it will print out how long and how many time did   * certain pieces of code take. Of course, don't forget about  * overhead of call to gettimeofday - it's not zero.  * If you need more detailed performance stats, just put  * QUANT() calls in the interesting spots in the code */
end_comment

begin_comment
comment|/*#define QUANTIFY*/
end_comment

begin_ifdef
ifdef|#
directive|ifdef
name|QUANTIFY
end_ifdef

begin_include
include|#
directive|include
file|<assert.h>
end_include

begin_include
include|#
directive|include
file|<sys/time.h>
end_include

begin_include
include|#
directive|include
file|<unistd.h>
end_include

begin_else
else|#
directive|else
end_else

begin_define
DECL|macro|QUANT (n)
define|#
directive|define
name|QUANT
parameter_list|(
name|n
parameter_list|)
end_define

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  * Printer driver control structure.  See "print.c" for the actual list...  */
end_comment

begin_typedef
typedef|typedef
struct|struct
comment|/* Plug-in variables */
DECL|struct|__anon289c5ce20108
block|{
DECL|member|output_to
name|char
name|output_to
index|[
literal|256
index|]
decl_stmt|,
comment|/* Name of file or command to print to */
DECL|member|driver
name|driver
index|[
literal|64
index|]
decl_stmt|,
comment|/* Name of printer "driver" */
DECL|member|ppd_file
name|ppd_file
index|[
literal|256
index|]
decl_stmt|;
comment|/* PPD file */
DECL|member|output_type
name|int
name|output_type
decl_stmt|;
comment|/* Color or grayscale output */
DECL|member|resolution
name|char
name|resolution
index|[
literal|64
index|]
decl_stmt|,
comment|/* Resolution */
DECL|member|media_size
name|media_size
index|[
literal|64
index|]
decl_stmt|,
comment|/* Media size */
DECL|member|media_type
name|media_type
index|[
literal|64
index|]
decl_stmt|,
comment|/* Media type */
DECL|member|media_source
name|media_source
index|[
literal|64
index|]
decl_stmt|,
comment|/* Media source */
DECL|member|ink_type
name|ink_type
index|[
literal|64
index|]
decl_stmt|,
comment|/* Ink or cartridge */
DECL|member|dither_algorithm
name|dither_algorithm
index|[
literal|64
index|]
decl_stmt|;
comment|/* Dithering algorithm */
DECL|member|brightness
name|float
name|brightness
decl_stmt|;
comment|/* Output brightness */
DECL|member|scaling
name|float
name|scaling
decl_stmt|;
comment|/* Scaling, percent of printable area */
DECL|member|orientation
name|int
name|orientation
decl_stmt|,
comment|/* Orientation - 0 = port., 1 = land., 				   -1 = auto */
DECL|member|left
name|left
decl_stmt|,
comment|/* Offset from lower-lefthand corner, points */
DECL|member|top
name|top
decl_stmt|;
comment|/* ... */
DECL|member|gamma
name|float
name|gamma
decl_stmt|;
comment|/* Gamma */
DECL|member|contrast
name|float
name|contrast
decl_stmt|,
comment|/* Output Contrast */
DECL|member|cyan
name|cyan
decl_stmt|,
comment|/* Output red level */
DECL|member|magenta
name|magenta
decl_stmt|,
comment|/* Output green level */
DECL|member|yellow
name|yellow
decl_stmt|;
comment|/* Output blue level */
DECL|member|linear
name|int
name|linear
decl_stmt|;
comment|/* Linear density (mostly for testing!) */
DECL|member|saturation
name|float
name|saturation
decl_stmt|;
comment|/* Output saturation */
DECL|member|density
name|float
name|density
decl_stmt|;
comment|/* Maximum output density */
DECL|member|image_type
name|int
name|image_type
decl_stmt|;
comment|/* Image type (line art etc.) */
DECL|member|unit
name|int
name|unit
decl_stmt|;
comment|/* Units for preview area 0=Inch 1=Metric */
DECL|member|app_gamma
name|float
name|app_gamma
decl_stmt|;
comment|/* Application gamma */
DECL|member|page_width
name|int
name|page_width
decl_stmt|;
comment|/* Width of page in points */
DECL|member|page_height
name|int
name|page_height
decl_stmt|;
comment|/* Height of page in points */
DECL|member|lut
name|void
modifier|*
name|lut
decl_stmt|;
comment|/* Look-up table */
DECL|member|cmap
name|unsigned
name|char
modifier|*
name|cmap
decl_stmt|;
comment|/* Color map */
DECL|typedef|vars_t
block|}
name|vars_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
comment|/**** Printer List ****/
DECL|struct|__anon289c5ce20208
block|{
DECL|member|active
name|int
name|active
decl_stmt|;
comment|/* Do we know about this printer? */
DECL|member|name
name|char
name|name
index|[
literal|128
index|]
decl_stmt|;
comment|/* Name of printer */
DECL|member|v
name|vars_t
name|v
decl_stmt|;
DECL|typedef|plist_t
block|}
name|plist_t
typedef|;
end_typedef

begin_typedef
DECL|enum|papersize_unit
typedef|typedef
enum|enum
name|papersize_unit
block|{
DECL|enumerator|PAPERSIZE_ENGLISH
name|PAPERSIZE_ENGLISH
block|,
DECL|enumerator|PAPERSIZE_METRIC
name|PAPERSIZE_METRIC
DECL|typedef|papersize_unit_t
block|}
name|papersize_unit_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
DECL|struct|__anon289c5ce20308
block|{
DECL|member|name
name|char
name|name
index|[
literal|32
index|]
decl_stmt|;
DECL|member|width
name|unsigned
name|width
decl_stmt|;
DECL|member|length
name|unsigned
name|length
decl_stmt|;
DECL|member|paper_unit
name|papersize_unit_t
name|paper_unit
decl_stmt|;
DECL|typedef|papersize_t
block|}
name|papersize_t
typedef|;
end_typedef

begin_comment
comment|/*  * Abstract data type for interfacing with the image creation program  * (in this case, the Gimp).  */
end_comment

begin_typedef
DECL|typedef|Image
typedef|typedef
name|void
modifier|*
name|Image
typedef|;
end_typedef

begin_comment
comment|/* For how to create an Image wrapping a Gimp drawable, see print_gimp.h */
end_comment

begin_function_decl
specifier|extern
name|void
name|Image_init
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|Image_reset
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|Image_transpose
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|Image_hflip
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|Image_vflip
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|Image_crop
parameter_list|(
name|Image
name|image
parameter_list|,
name|int
name|left
parameter_list|,
name|int
name|top
parameter_list|,
name|int
name|right
parameter_list|,
name|int
name|bottom
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|Image_rotate_ccw
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|Image_rotate_cw
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|Image_rotate_180
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|Image_bpp
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|Image_width
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|Image_height
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|Image_get_row
parameter_list|(
name|Image
name|image
parameter_list|,
name|unsigned
name|char
modifier|*
name|data
parameter_list|,
name|int
name|row
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|Image_get_appname
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|Image_progress_init
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|Image_note_progress
parameter_list|(
name|Image
name|image
parameter_list|,
name|double
name|current
parameter_list|,
name|double
name|total
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|Image_progress_conclude
parameter_list|(
name|Image
name|image
parameter_list|)
function_decl|;
end_function_decl

begin_typedef
DECL|struct|printer
typedef|typedef
struct|struct
name|printer
block|{
DECL|member|long_name
name|char
modifier|*
name|long_name
decl_stmt|,
comment|/* Long name for UI */
DECL|member|driver
modifier|*
name|driver
decl_stmt|;
comment|/* Short name for printrc file */
DECL|member|model
name|int
name|model
decl_stmt|;
comment|/* Model number */
DECL|member|parameters
name|char
modifier|*
modifier|*
function_decl|(
modifier|*
name|parameters
function_decl|)
parameter_list|(
specifier|const
name|struct
name|printer
modifier|*
name|printer
parameter_list|,
name|char
modifier|*
name|ppd_file
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
modifier|*
name|count
parameter_list|)
function_decl|;
comment|/* Parameter names */
DECL|member|media_size
name|void
function_decl|(
modifier|*
name|media_size
function_decl|)
parameter_list|(
specifier|const
name|struct
name|printer
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|width
parameter_list|,
name|int
modifier|*
name|length
parameter_list|)
function_decl|;
DECL|member|imageable_area
name|void
function_decl|(
modifier|*
name|imageable_area
function_decl|)
parameter_list|(
specifier|const
name|struct
name|printer
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|left
parameter_list|,
name|int
modifier|*
name|right
parameter_list|,
name|int
modifier|*
name|bottom
parameter_list|,
name|int
modifier|*
name|top
parameter_list|)
function_decl|;
DECL|member|limit
name|void
function_decl|(
modifier|*
name|limit
function_decl|)
parameter_list|(
specifier|const
name|struct
name|printer
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|width
parameter_list|,
name|int
modifier|*
name|length
parameter_list|)
function_decl|;
comment|/* Print function */
DECL|member|print
name|void
function_decl|(
modifier|*
name|print
function_decl|)
parameter_list|(
specifier|const
name|struct
name|printer
modifier|*
name|printer
parameter_list|,
name|int
name|copies
parameter_list|,
name|FILE
modifier|*
name|prn
parameter_list|,
name|Image
name|image
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|)
function_decl|;
DECL|member|default_resolution
specifier|const
name|char
modifier|*
function_decl|(
modifier|*
name|default_resolution
function_decl|)
parameter_list|(
specifier|const
name|struct
name|printer
modifier|*
name|printer
parameter_list|)
function_decl|;
DECL|member|printvars
name|vars_t
name|printvars
decl_stmt|;
DECL|typedef|printer_t
block|}
name|printer_t
typedef|;
end_typedef

begin_typedef
DECL|typedef|convert_t
typedef|typedef
name|void
function_decl|(
modifier|*
name|convert_t
function_decl|)
parameter_list|(
name|unsigned
name|char
modifier|*
name|in
parameter_list|,
name|unsigned
name|short
modifier|*
name|out
parameter_list|,
name|int
name|width
parameter_list|,
name|int
name|bpp
parameter_list|,
name|unsigned
name|char
modifier|*
name|cmap
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|vars
parameter_list|)
function_decl|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
DECL|struct|__anon289c5ce20408
block|{
DECL|member|value
name|double
name|value
decl_stmt|;
DECL|member|bit_pattern
name|unsigned
name|bit_pattern
decl_stmt|;
DECL|member|is_dark
name|int
name|is_dark
decl_stmt|;
DECL|member|dot_size
name|unsigned
name|dot_size
decl_stmt|;
DECL|typedef|simple_dither_range_t
block|}
name|simple_dither_range_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
DECL|struct|__anon289c5ce20508
block|{
DECL|member|value
name|double
name|value
decl_stmt|;
DECL|member|lower
name|double
name|lower
decl_stmt|;
DECL|member|upper
name|double
name|upper
decl_stmt|;
DECL|member|bit_pattern
name|unsigned
name|bit_pattern
decl_stmt|;
DECL|member|is_dark
name|int
name|is_dark
decl_stmt|;
DECL|member|dot_size
name|unsigned
name|dot_size
decl_stmt|;
DECL|typedef|dither_range_t
block|}
name|dither_range_t
typedef|;
end_typedef

begin_typedef
typedef|typedef
struct|struct
DECL|struct|__anon289c5ce20608
block|{
DECL|member|value_l
name|double
name|value_l
decl_stmt|;
DECL|member|value_h
name|double
name|value_h
decl_stmt|;
DECL|member|bits_l
name|unsigned
name|bits_l
decl_stmt|;
DECL|member|bits_h
name|unsigned
name|bits_h
decl_stmt|;
DECL|member|isdark_l
name|int
name|isdark_l
decl_stmt|;
DECL|member|isdark_h
name|int
name|isdark_h
decl_stmt|;
DECL|typedef|full_dither_range_t
block|}
name|full_dither_range_t
typedef|;
end_typedef

begin_comment
comment|/*  * Prototypes...  */
end_comment

begin_function_decl
specifier|extern
name|void
modifier|*
name|init_dither
parameter_list|(
name|int
name|in_width
parameter_list|,
name|int
name|out_width
parameter_list|,
name|int
name|horizontal_aspect
parameter_list|,
name|int
name|vertical_aspect
parameter_list|,
name|vars_t
modifier|*
name|vars
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_transition
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_density
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_black_lower
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_black_upper
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_black_levels
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_randomizers
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_ink_darkness
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_light_inks
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_c_ranges
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|simple_dither_range_t
modifier|*
name|ranges
parameter_list|,
name|double
name|density
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_m_ranges
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|simple_dither_range_t
modifier|*
name|ranges
parameter_list|,
name|double
name|density
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_y_ranges
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|simple_dither_range_t
modifier|*
name|ranges
parameter_list|,
name|double
name|density
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_k_ranges
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|simple_dither_range_t
modifier|*
name|ranges
parameter_list|,
name|double
name|density
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_k_ranges_full
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|full_dither_range_t
modifier|*
name|ranges
parameter_list|,
name|double
name|density
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_c_ranges_full
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|full_dither_range_t
modifier|*
name|ranges
parameter_list|,
name|double
name|density
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_m_ranges_full
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|full_dither_range_t
modifier|*
name|ranges
parameter_list|,
name|double
name|density
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_y_ranges_full
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|full_dither_range_t
modifier|*
name|ranges
parameter_list|,
name|double
name|density
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_c_ranges_simple
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|double
modifier|*
name|levels
parameter_list|,
name|double
name|density
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_m_ranges_simple
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|double
modifier|*
name|levels
parameter_list|,
name|double
name|density
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_y_ranges_simple
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|double
modifier|*
name|levels
parameter_list|,
name|double
name|density
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_k_ranges_simple
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|double
modifier|*
name|levels
parameter_list|,
name|double
name|density
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_c_ranges_complete
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|dither_range_t
modifier|*
name|ranges
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_m_ranges_complete
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|dither_range_t
modifier|*
name|ranges
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_y_ranges_complete
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|dither_range_t
modifier|*
name|ranges
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_k_ranges_complete
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|nlevels
parameter_list|,
specifier|const
name|dither_range_t
modifier|*
name|ranges
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_ink_spread
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|spread
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_max_ink
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
parameter_list|,
name|double
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_x_oversample
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|os
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_y_oversample
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|int
name|os
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_set_adaptive_divisor
parameter_list|(
name|void
modifier|*
name|vd
parameter_list|,
name|unsigned
name|divisor
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|free_dither
parameter_list|(
name|void
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
modifier|*
name|initialize_weave_params
parameter_list|(
name|int
name|S
parameter_list|,
name|int
name|J
parameter_list|,
name|int
name|O
parameter_list|,
name|int
name|firstrow
parameter_list|,
name|int
name|lastrow
parameter_list|,
name|int
name|pagelength
parameter_list|,
name|int
name|strategy
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|calculate_row_parameters
parameter_list|(
name|void
modifier|*
name|w
parameter_list|,
name|int
name|row
parameter_list|,
name|int
name|subpass
parameter_list|,
name|int
modifier|*
name|pass
parameter_list|,
name|int
modifier|*
name|jet
parameter_list|,
name|int
modifier|*
name|startrow
parameter_list|,
name|int
modifier|*
name|phantomrows
parameter_list|,
name|int
modifier|*
name|jetsused
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|destroy_weave_params
parameter_list|(
name|void
modifier|*
name|vw
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_monochrome
parameter_list|(
specifier|const
name|unsigned
name|short
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|int
name|duplicate_line
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_black
parameter_list|(
specifier|const
name|unsigned
name|short
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|int
name|duplicate_line
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|dither_cmyk
parameter_list|(
specifier|const
name|unsigned
name|short
modifier|*
parameter_list|,
name|int
parameter_list|,
name|void
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|unsigned
name|char
modifier|*
parameter_list|,
name|int
name|duplicate_line
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|merge_printvars
parameter_list|(
name|vars_t
modifier|*
name|user
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|print
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|free_lut
parameter_list|(
name|vars_t
modifier|*
name|v
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|compute_lut
parameter_list|(
name|size_t
name|steps
parameter_list|,
name|vars_t
modifier|*
name|v
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|default_media_size
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|width
parameter_list|,
name|int
modifier|*
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
modifier|*
name|escp2_parameters
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
name|char
modifier|*
name|ppd_file
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
modifier|*
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|escp2_imageable_area
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|left
parameter_list|,
name|int
modifier|*
name|right
parameter_list|,
name|int
modifier|*
name|bottom
parameter_list|,
name|int
modifier|*
name|top
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|escp2_limit
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|width
parameter_list|,
name|int
modifier|*
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|escp2_print
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
name|int
name|copies
parameter_list|,
name|FILE
modifier|*
name|prn
parameter_list|,
name|Image
name|image
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|escp2_default_resolution
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
modifier|*
name|canon_parameters
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
name|char
modifier|*
name|ppd_file
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
modifier|*
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|canon_imageable_area
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|left
parameter_list|,
name|int
modifier|*
name|right
parameter_list|,
name|int
modifier|*
name|bottom
parameter_list|,
name|int
modifier|*
name|top
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|canon_limit
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|width
parameter_list|,
name|int
modifier|*
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|canon_print
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
name|int
name|copies
parameter_list|,
name|FILE
modifier|*
name|prn
parameter_list|,
name|Image
name|image
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|canon_default_resolution
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
modifier|*
name|pcl_parameters
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
name|char
modifier|*
name|ppd_file
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
modifier|*
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|pcl_imageable_area
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|left
parameter_list|,
name|int
modifier|*
name|right
parameter_list|,
name|int
modifier|*
name|bottom
parameter_list|,
name|int
modifier|*
name|top
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|pcl_limit
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|width
parameter_list|,
name|int
modifier|*
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|pcl_print
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
name|int
name|copies
parameter_list|,
name|FILE
modifier|*
name|prn
parameter_list|,
name|Image
name|image
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|pcl_default_resolution
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|char
modifier|*
modifier|*
name|ps_parameters
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
name|char
modifier|*
name|ppd_file
parameter_list|,
name|char
modifier|*
name|name
parameter_list|,
name|int
modifier|*
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ps_media_size
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|width
parameter_list|,
name|int
modifier|*
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ps_imageable_area
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|left
parameter_list|,
name|int
modifier|*
name|right
parameter_list|,
name|int
modifier|*
name|bottom
parameter_list|,
name|int
modifier|*
name|top
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ps_limit
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|,
name|int
modifier|*
name|width
parameter_list|,
name|int
modifier|*
name|length
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|ps_print
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|,
name|int
name|copies
parameter_list|,
name|FILE
modifier|*
name|prn
parameter_list|,
name|Image
name|image
parameter_list|,
specifier|const
name|vars_t
modifier|*
name|v
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|ps_default_resolution
parameter_list|(
specifier|const
name|printer_t
modifier|*
name|printer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|char
modifier|*
name|default_dither_algorithm
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|known_papersizes
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|papersize_t
modifier|*
name|get_papersizes
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|papersize_t
modifier|*
name|get_papersize_by_name
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|papersize_t
modifier|*
name|get_papersize_by_size
parameter_list|(
name|int
name|l
parameter_list|,
name|int
name|w
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|known_printers
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|printer_t
modifier|*
name|get_printers
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|printer_t
modifier|*
name|get_printer_by_index
parameter_list|(
name|int
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|printer_t
modifier|*
name|get_printer_by_long_name
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|printer_t
modifier|*
name|get_printer_by_driver
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|get_printer_index_by_driver
parameter_list|(
specifier|const
name|char
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_decl_stmt
specifier|extern
name|int
name|num_dither_algos
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|char
modifier|*
name|dither_algo_names
index|[]
decl_stmt|;
end_decl_stmt

begin_function_decl
specifier|extern
name|convert_t
name|choose_colorfunc
parameter_list|(
name|int
parameter_list|,
name|int
parameter_list|,
specifier|const
name|unsigned
name|char
modifier|*
parameter_list|,
name|int
modifier|*
parameter_list|,
specifier|const
name|vars_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|void
name|compute_page_parameters
parameter_list|(
name|int
name|page_right
parameter_list|,
name|int
name|page_left
parameter_list|,
name|int
name|page_top
parameter_list|,
name|int
name|page_bottom
parameter_list|,
name|double
name|scaling
parameter_list|,
name|int
name|image_width
parameter_list|,
name|int
name|image_height
parameter_list|,
name|Image
name|image
parameter_list|,
name|int
modifier|*
name|orientation
parameter_list|,
name|int
modifier|*
name|page_width
parameter_list|,
name|int
modifier|*
name|page_height
parameter_list|,
name|int
modifier|*
name|out_width
parameter_list|,
name|int
modifier|*
name|out_height
parameter_list|,
name|int
modifier|*
name|left
parameter_list|,
name|int
modifier|*
name|top
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
name|int
name|verify_printer_params
parameter_list|(
specifier|const
name|printer_t
modifier|*
parameter_list|,
specifier|const
name|vars_t
modifier|*
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|vars_t
modifier|*
name|print_default_settings
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|vars_t
modifier|*
name|print_maximum_settings
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|extern
specifier|const
name|vars_t
modifier|*
name|print_minimum_settings
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_ifdef
ifdef|#
directive|ifdef
name|QUANTIFY
end_ifdef

begin_comment
comment|/* Used for performance analysis - to be called before and after  * the interval to be quantified */
end_comment

begin_define
DECL|macro|NUM_QUANTIFY_BUCKETS
define|#
directive|define
name|NUM_QUANTIFY_BUCKETS
value|1024
end_define

begin_decl_stmt
specifier|extern
name|unsigned
name|quantify_counts
index|[
name|NUM_QUANTIFY_BUCKETS
index|]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|timeval
name|quantify_buckets
index|[
name|NUM_QUANTIFY_BUCKETS
index|]
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|quantify_high_index
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|int
name|quantify_first_time
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|timeval
name|quantify_cur_time
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|extern
name|struct
name|timeval
name|quantify_prev_time
decl_stmt|;
end_decl_stmt

begin_define
DECL|macro|QUANT (number)
define|#
directive|define
name|QUANT
parameter_list|(
name|number
parameter_list|)
define|\
value|{\     gettimeofday(&quantify_cur_time, NULL);\     assert(number< NUM_QUANTIFY_BUCKETS);\     quantify_counts[number]++;\ \     if (quantify_first_time) {\         quantify_first_time = 0;\     } else {\         if (number> quantify_high_index) quantify_high_index = number;\         if (quantify_prev_time.tv_usec> quantify_cur_time.tv_usec) {\            quantify_buckets[number].tv_usec += ((quantify_cur_time.tv_usec + 1000000) - quantify_prev_time.tv_usec);\            quantify_buckets[number].tv_sec += (quantify_cur_time.tv_sec - quantify_prev_time.tv_sec - 1);\         } else {\            quantify_buckets[number].tv_sec += quantify_cur_time.tv_sec - quantify_prev_time.tv_sec;\            quantify_buckets[number].tv_usec += quantify_cur_time.tv_usec - quantify_prev_time.tv_usec;\         }\         if (quantify_buckets[number].tv_usec>= 1000000)\         {\            quantify_buckets[number].tv_usec -= 1000000;\            quantify_buckets[number].tv_sec++;\         }\     }\ \     gettimeofday(&quantify_prev_time, NULL);\ }
end_define

begin_function_decl
specifier|extern
name|void
name|print_timers
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* PRINT_HEADER */
end_comment

begin_comment
comment|/*  * End of "$Id$".  */
end_comment

end_unit

