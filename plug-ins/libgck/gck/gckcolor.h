begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/***************************************************************************/
end_comment

begin_comment
comment|/* GCK - The General Convenience Kit. Generally useful conveniece routines */
end_comment

begin_comment
comment|/* for GIMP plug-in writers and users of the GDK/GTK libraries.            */
end_comment

begin_comment
comment|/* Copyright (C) 1996 Tom Bech                                             */
end_comment

begin_comment
comment|/*                                                                         */
end_comment

begin_comment
comment|/* This program is free software; you can redistribute it and/or modify    */
end_comment

begin_comment
comment|/* it under the terms of the GNU General Public License as published by    */
end_comment

begin_comment
comment|/* the Free Software Foundation; either version 2 of the License, or       */
end_comment

begin_comment
comment|/* (at your option) any later version.                                     */
end_comment

begin_comment
comment|/*                                                                         */
end_comment

begin_comment
comment|/* This program is distributed in the hope that it will be useful,         */
end_comment

begin_comment
comment|/* but WITHOUT ANY WARRANTY; without even the implied warranty of          */
end_comment

begin_comment
comment|/* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           */
end_comment

begin_comment
comment|/* GNU General Public License for more details.                            */
end_comment

begin_comment
comment|/*                                                                         */
end_comment

begin_comment
comment|/* You should have received a copy of the GNU General Public License       */
end_comment

begin_comment
comment|/* along with this program; if not, write to the Free Software             */
end_comment

begin_comment
comment|/* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,i  */
end_comment

begin_comment
comment|/* USA.                                                                    */
end_comment

begin_comment
comment|/***************************************************************************/
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__GCKCOLOR_H__
end_ifndef

begin_define
DECL|macro|__GCKCOLOR_H__
define|#
directive|define
name|__GCKCOLOR_H__
end_define

begin_include
include|#
directive|include
file|<gdk/gdk.h>
end_include

begin_include
include|#
directive|include
file|<gck/gck.h>
end_include

begin_include
include|#
directive|include
file|<gck/gcktypes.h>
end_include

begin_ifdef
ifdef|#
directive|ifdef
name|__cplusplus
end_ifdef

begin_extern
extern|extern
literal|"C"
block|{
endif|#
directive|endif
name|GckVisualInfo
modifier|*
name|gck_visualinfo_new
parameter_list|(
name|void
parameter_list|)
function_decl|;
name|void
name|gck_visualinfo_destroy
parameter_list|(
name|GckVisualInfo
modifier|*
name|visinfo
parameter_list|)
function_decl|;
name|GckDitherType
name|gck_visualinfo_get_dither
parameter_list|(
name|GckVisualInfo
modifier|*
name|visinfo
parameter_list|)
function_decl|;
name|void
name|gck_visualinfo_set_dither
parameter_list|(
name|GckVisualInfo
modifier|*
name|visinfo
parameter_list|,
name|GckDitherType
name|dithermethod
parameter_list|)
function_decl|;
comment|/* RGB to Gdk routines */
comment|/* =================== */
name|void
name|gck_rgb_to_gdkimage
parameter_list|(
name|GckVisualInfo
modifier|*
name|visinfo
parameter_list|,
name|guchar
modifier|*
name|RGB_data
parameter_list|,
name|GdkImage
modifier|*
name|image
parameter_list|,
name|int
name|width
parameter_list|,
name|int
name|height
parameter_list|)
function_decl|;
comment|/* returns a static storage */
name|GdkColor
modifier|*
name|gck_rgb_to_gdkcolor
parameter_list|(
name|GckVisualInfo
modifier|*
name|visinfo
parameter_list|,
name|guchar
name|r
parameter_list|,
name|guchar
name|g
parameter_list|,
name|guchar
name|b
parameter_list|)
function_decl|;
comment|/* returns a malloc'ed area */
name|GdkColor
modifier|*
name|gck_rgb_to_gdkcolor_r
parameter_list|(
name|GckVisualInfo
modifier|*
name|visinfo
parameter_list|,
name|guchar
name|r
parameter_list|,
name|guchar
name|g
parameter_list|,
name|guchar
name|b
parameter_list|)
function_decl|;
name|void
name|gck_gc_set_foreground
parameter_list|(
name|GckVisualInfo
modifier|*
name|visinfo
parameter_list|,
name|GdkGC
modifier|*
name|gc
parameter_list|,
name|guchar
name|r
parameter_list|,
name|guchar
name|g
parameter_list|,
name|guchar
name|b
parameter_list|)
function_decl|;
name|void
name|gck_gc_set_background
parameter_list|(
name|GckVisualInfo
modifier|*
name|visinfo
parameter_list|,
name|GdkGC
modifier|*
name|gc
parameter_list|,
name|guchar
name|r
parameter_list|,
name|guchar
name|g
parameter_list|,
name|guchar
name|b
parameter_list|)
function_decl|;
comment|/********************/
comment|/* Color operations */
comment|/********************/
name|double
name|gck_bilinear
parameter_list|(
name|double
name|x
parameter_list|,
name|double
name|y
parameter_list|,
name|double
modifier|*
name|values
parameter_list|)
function_decl|;
name|guchar
name|gck_bilinear_8
parameter_list|(
name|double
name|x
parameter_list|,
name|double
name|y
parameter_list|,
name|guchar
modifier|*
name|values
parameter_list|)
function_decl|;
name|guint16
name|gck_bilinear_16
parameter_list|(
name|double
name|x
parameter_list|,
name|double
name|y
parameter_list|,
name|guint16
modifier|*
name|values
parameter_list|)
function_decl|;
name|guint32
name|gck_bilinear_32
parameter_list|(
name|double
name|x
parameter_list|,
name|double
name|y
parameter_list|,
name|guint32
modifier|*
name|values
parameter_list|)
function_decl|;
name|GckRGB
name|gck_bilinear_rgb
parameter_list|(
name|double
name|x
parameter_list|,
name|double
name|y
parameter_list|,
name|GckRGB
modifier|*
name|values
parameter_list|)
function_decl|;
name|GckRGB
name|gck_bilinear_rgba
parameter_list|(
name|double
name|x
parameter_list|,
name|double
name|y
parameter_list|,
name|GckRGB
modifier|*
name|values
parameter_list|)
function_decl|;
comment|/* RGB pixel operations */
comment|/* ==================== */
name|void
name|gck_rgb_add
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|,
name|GckRGB
modifier|*
name|q
parameter_list|)
function_decl|;
name|void
name|gck_rgb_sub
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|,
name|GckRGB
modifier|*
name|q
parameter_list|)
function_decl|;
name|void
name|gck_rgb_mul
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|,
name|double
name|b
parameter_list|)
function_decl|;
name|void
name|gck_rgb_clamp
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|)
function_decl|;
name|void
name|gck_rgb_set
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|,
name|double
name|r
parameter_list|,
name|double
name|g
parameter_list|,
name|double
name|b
parameter_list|)
function_decl|;
name|void
name|gck_rgb_gamma
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|,
name|double
name|gamma
parameter_list|)
function_decl|;
name|void
name|gck_rgba_add
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|,
name|GckRGB
modifier|*
name|q
parameter_list|)
function_decl|;
name|void
name|gck_rgba_sub
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|,
name|GckRGB
modifier|*
name|q
parameter_list|)
function_decl|;
name|void
name|gck_rgba_mul
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|,
name|double
name|b
parameter_list|)
function_decl|;
name|void
name|gck_rgba_clamp
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|)
function_decl|;
name|void
name|gck_rgba_set
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|,
name|double
name|r
parameter_list|,
name|double
name|g
parameter_list|,
name|double
name|b
parameter_list|,
name|double
name|a
parameter_list|)
function_decl|;
name|void
name|gck_rgba_gamma
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|,
name|double
name|gamma
parameter_list|)
function_decl|;
comment|/* Colorspace conversions */
comment|/* ====================== */
name|void
name|gck_rgb_to_hsv
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|,
name|double
modifier|*
name|h
parameter_list|,
name|double
modifier|*
name|s
parameter_list|,
name|double
modifier|*
name|v
parameter_list|)
function_decl|;
name|void
name|gck_rgb_to_hsl
parameter_list|(
name|GckRGB
modifier|*
name|p
parameter_list|,
name|double
modifier|*
name|h
parameter_list|,
name|double
modifier|*
name|s
parameter_list|,
name|double
modifier|*
name|l
parameter_list|)
function_decl|;
name|void
name|gck_hsv_to_rgb
parameter_list|(
name|double
name|h
parameter_list|,
name|double
name|s
parameter_list|,
name|double
name|v
parameter_list|,
name|GckRGB
modifier|*
name|p
parameter_list|)
function_decl|;
name|void
name|gck_hsl_to_rgb
parameter_list|(
name|double
name|h
parameter_list|,
name|double
name|s
parameter_list|,
name|double
name|l
parameter_list|,
name|GckRGB
modifier|*
name|p
parameter_list|)
function_decl|;
name|void
name|gck_rgb_to_hwb
parameter_list|(
name|GckRGB
modifier|*
name|rgb
parameter_list|,
name|gdouble
modifier|*
name|hue
parameter_list|,
name|gdouble
modifier|*
name|whiteness
parameter_list|,
name|gdouble
modifier|*
name|blackness
parameter_list|)
function_decl|;
name|void
name|gck_hwb_to_rgb
parameter_list|(
name|gdouble
name|H
parameter_list|,
name|gdouble
name|W
parameter_list|,
name|gdouble
name|B
parameter_list|,
name|GckRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
comment|/* Supersampling */
comment|/* ============= */
name|gulong
name|gck_adaptive_supersample_area
parameter_list|(
name|int
name|x1
parameter_list|,
name|int
name|y1
parameter_list|,
name|int
name|x2
parameter_list|,
name|int
name|y2
parameter_list|,
name|int
name|max_depth
parameter_list|,
name|double
name|threshold
parameter_list|,
name|GckRenderFunction
name|render_func
parameter_list|,
name|GckPutPixelFunction
name|put_pixel_func
parameter_list|,
name|GckProgressFunction
name|progress_func
parameter_list|)
function_decl|;
specifier|extern
name|GckNamedRGB
name|gck_named_colors
index|[]
decl_stmt|;
ifdef|#
directive|ifdef
name|__cplusplus
block|}
end_extern

begin_endif
endif|#
directive|endif
end_endif

begin_endif
endif|#
directive|endif
end_endif

end_unit

