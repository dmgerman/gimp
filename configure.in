dnl Process this file with autoconf to produce a configure script.
AC_INIT(gimprc.in)

dnl Initialize automake stuff
GIMP_MAJOR_VERSION=1
GIMP_MINOR_VERSION=1
GIMP_MICRO_VERSION=0
GIMP_INTERFACE_AGE=0
GIMP_BINARY_AGE=0
GIMP_VERSION=$GIMP_MAJOR_VERSION.$GIMP_MINOR_VERSION.$GIMP_MICRO_VERSION

dnl libtool versioning
LT_RELEASE=$GIMP_MAJOR_VERSION.$GIMP_MINOR_VERSION
LT_CURRENT=`expr $GIMP_MICRO_VERSION - $GIMP_INTERFACE_AGE`
LT_REVISION=$GIMP_INTERFACE_AGE
LT_AGE=`expr $GIMP_BINARY_AGE - $GIMP_INTERFACE_AGE`

VERSION=$GIMP_VERSION
PACKAGE=gimp

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

dnl Specify a header configuration file
AM_CONFIG_HEADER(config.h)

dnl Initialize libtool
AM_PROG_LIBTOOL

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

AC_CANONICAL_HOST

AC_ARG_ENABLE(debug, [  --enable-debug          turn on debugging [default=no]],
if eval "test x$enable_debug = xyes"; then
  DEBUGFLAG="-g"
fi)

AC_ARG_ENABLE(ansi, [  --enable-ansi           turn on strict ansi [default=no]],
		    , enable_ansi=no)

dnl Possibly change default gimpdir from .gimp
gimpdir=.gimp-1.1
AC_ARG_ENABLE(gimpdir, [  --enable-gimpdir=DIR    change default gimpdir from .gimp to DIR],
if eval "test x$enable_gimpdir != x"; then
  if eval "test x$enable_gimpdir != xyes"; then
    gimpdir=$enable_gimpdir
  fi
fi)

if test -n "$DEBUGFLAG"; then
  CFLAGS="$DEBUGFLAG $CFLAGS"
fi

dnl Checks for programs.
AC_PROG_CC
AC_ISC_POSIX
AM_PROG_CC_STDC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_CPP

dnl i18n stuff
ALL_LINGUAS=""
AM_GNU_GETTEXT

dnl NeXTStep cc seems to need this
AC_MSG_CHECKING([whether C compiler needs -posix])
AC_TRY_COMPILE([#include <dirent.h>], [DIR *dir;], posix=no, posix=yes)
AC_MSG_RESULT($posix)
if test "$posix" = yes; then
  CFLAGS="$CFLAGS -posix"
fi

dnl Check for GTK+
AM_PATH_GTK(1.1.0,,
  AC_MSG_ERROR(Test for GTK failed. See the file 'INSTALL' for help.))

if eval "test x$GCC = xyes"; then
  if echo "$CFLAGS" | grep "\-Wall" > /dev/null 2> /dev/null; then
    CFLAGS="$CFLAGS"
  else
    CFLAGS="$CFLAGS -Wall"
  fi

  if eval "test x$enable_ansi = xyes"; then
    if echo "$CFLAGS" | grep "\-ansi" > /dev/null 2> /dev/null; then
      CFLAGS="$CFLAGS"
    else
      CFLAGS="$CFLAGS -ansi"
    fi

    if echo "$CFLAGS" | grep "\-pedantic" > /dev/null 2> /dev/null; then
      CFLAGS="$CFLAGS"
    else
      CFLAGS="$CFLAGS -pedantic"
    fi
  fi
fi

gimp_save_CPPFLAGS="$CPPFLAGS"
gimp_save_LDFLAGS="$LDFLAGS"
gimp_save_LIBS="$LIBS"

CPPFLAGS="$CPPFLAGS $GTK_CFLAGS"
LDFLAGS="$LDFLAGS `echo $GTK_LIBS | sed 's/\(.*\)\(-lgtk.*\)/\1/'`"
LIBS="$LIBS $GTK_LIBS"

dnl Test for Xmu
  if test -z "$LIBXMU_LIB"; then
    AC_CHECK_LIB(Xmu, XmuClientWindow,
      AC_CHECK_HEADER(X11/Xmu/WinUtil.h,
	WEBBROWSER="webbrowser"; LIBXMU_LIB='-lXmu -lXt -lSM -lICE',
	AC_MSG_WARN(*** webbrowser plug-in will not be built (XMU header file not found) ***)),
	AC_CHECK_LIB(Xmu, XmuUpdateMapHints,
	  AC_CHECK_HEADER(X11/Xmu/WinUtil.h,
	    WEBBROWSER="webbrowser"; LIBXMU_LIB='-lXmu -lXt',
	    AC_MSG_WARN(*** webbrowser plug-in will not be built (XMU header file not found) ***)),
	AC_MSG_WARN(*** webbrowser plug-in will not be built (XMU library not found) ***), -lXt), -lXt -lSM -lICE)
  fi

dnl Test for libaa
  if test -z "$LIBAA_LIB"; then
    AC_CHECK_LIB(aa, aa_printf,
      AC_CHECK_HEADER(aalib.h,
	AA='aa'; LIBAA_LIB='-laa',
	AC_MSG_WARN(*** AA plug-in will not be built (AA header file not found) ***)),
      AC_MSG_WARN(*** AA plug-in will not be built (AA library not found) ***))
  fi

dnl Test for libtiff
  if test -z "$LIBTIFF_LIB"; then
    AC_CHECK_LIB(tiff, TIFFReadScanline,
      AC_CHECK_HEADER(tiffio.h,
	TIFF='tiff'; LIBTIFF_LIB='-ltiff',
	AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)),
      AC_CHECK_LIB(tiff, TIFFWriteScanline,
	AC_CHECK_HEADER(tiffio.h,
          TIFF='tiff'; LIBTIFF_LIB='-ltiff -ljpeg -lz',
	  AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)),
	AC_CHECK_LIB(tiff34, TIFFFlushData,
	  AC_CHECK_HEADER(tiffio.h,
            TIFF='tiff'; LIBTIFF_LIB='-ltiff34 -ljpeg -lz',
	    AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)),
        AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF library not found) ***), -ljpeg -lz -lm), -ljpeg -lz -lm), -lm)
  fi

dnl Test for libjpeg
  if test -z "$LIBJPEG_LIB"; then
    AC_CHECK_LIB(jpeg, jpeg_destroy_decompress,
      jpeg_ok=yes,
      jpeg_ok=no
      AC_MSG_WARN(*** JPEG plug-in will not be built (JPEG library not found) ***))
    if test "$jpeg_ok" = yes; then
      AC_MSG_CHECKING([for jpeglib.h])
      AC_TRY_CPP(
[#include <stdio.h>
#undef PACKAGE
#undef VERSION
#include <jpeglib.h>],
	jpeg_ok=yes,
	jpeg_ok=no)
      AC_MSG_RESULT($jpeg_ok)
      if test "$jpeg_ok" = yes; then
	JPEG='jpeg'; LIBJPEG_LIB='-ljpeg'
      else
	AC_MSG_WARN(*** JPEG plug-in will not be built (JPEG header file not found) ***)
      fi
    fi
  fi

dnl Test for libpng
  if test -z "$LIBPNG_LIB"; then
    AC_CHECK_LIB(png, png_read_info,
      AC_CHECK_HEADER(png.h,
	png_ok=yes,
	png_ok=no),
      AC_MSG_WARN(*** PNG plug-in will not be built (PNG library not found) ***), -lz -lm)
    if test "$png_ok" = yes; then
      AC_MSG_CHECKING([for png_structp in png.h])
      AC_TRY_COMPILE([#include <png.h>],
        [png_structp pp; png_infop info; png_colorp cmap; png_create_read_struct;],
        png_ok=yes,
        png_ok=no)
      AC_MSG_RESULT($png_ok)
      if test "$png_ok" = yes; then
        PNG='png'; LIBPNG_LIB='-lpng -lz'
      else
        AC_MSG_WARN(*** PNG plug-in will not be built (PNG library is too old) ***)
      fi
    else
      AC_MSG_WARN(*** PNG plug-in will not be built (PNG header file not found) ***)
    fi
  fi

dnl Test for libmpeg
  if test -z "$LIBMPEG_LIB"; then
    AC_CHECK_LIB(mpeg, GetMPEGFrame,
      AC_CHECK_HEADER(mpeg.h,
	MPEG='mpeg'; LIBMPEG_LIB='-lmpeg',
	AC_MSG_WARN(*** MPEG plug-in will not be built (MPEG header file not found) ***)),
      AC_MSG_WARN(*** MPEG plug-in will not be built (MPEG library not found) ***))
  fi

dnl Test for libxdelta (optional)
AC_ARG_WITH(xdelta, [  --with-xdelta           compile the xdelta plugin ])
if test "x$with_xdelta" = "xyes"; then
  if test -z "$LIBXDELTA_LIB"; then
    AC_CHECK_LIB(xdelta, xd_checkin,
      xdelta_ok=yes ; LIBXDELTA_LIB='-lxdelta -lglib -lgdbm',
      AC_CHECK_LIB(xdelta, xd_checkout,
	xdelta_ok=yes ; LIBXDELTA_LIB='-lxdelta -lglib -lgdbm -lz',
	xdelta_ok=no
	AC_MSG_WARN(*** XD plug-in will not be built (XDELTA library not found) ***), -lglib -lgdbm -lz), -lglib -lgdbm)
    if test "$xdelta_ok" = yes; then
      AC_MSG_CHECKING([for xdelta.h])
      AC_TRY_CPP(
[#include <glib.h>
#include <xdelta.h>],
	xdelta_ok=yes,
	xdelta_ok=no)
      AC_MSG_RESULT($xdelta_ok)
      if test "$xdelta_ok" = yes; then
	XD='xd'
      else
	AC_MSG_WARN(*** XD plug-in will not be built (XDELTA header file not found) ***)
      fi
    fi
  fi
fi

dnl Test for libXpm
  if test -z "$LIBXPM_LIB"; then
    AC_CHECK_LIB(Xpm, XpmReadFileToXpmImage,
      AC_CHECK_HEADER(X11/xpm.h,
	XPM='xpm'; LIBXPM_LIB='-lXpm',
	AC_MSG_WARN(*** XPM plug-in will not be built (XPM header file not found) ***)),
      AC_MSG_WARN(*** XPM plug-in will not be built (XPM library not found) ***), $X_LIBS)
  fi

dnl Check for shared memory
AC_CHECK_HEADER(sys/ipc.h, AC_DEFINE(HAVE_IPC_H), no_sys_ipc=yes)
AC_CHECK_HEADER(sys/shm.h, AC_DEFINE(HAVE_SHM_H), no_sys_shm=yes)
if test "$ac_cv_header_sys_shm_h" = "yes"; then
  AC_MSG_CHECKING(whether shmctl IPC_RMID allowes subsequent attaches)
  AC_TRY_RUN([
	#include <sys/types.h>
	#include <sys/ipc.h>
	#include <sys/shm.h>
	int main()
	{
	  int id;
	  char *shmaddr;
	id = shmget (IPC_PRIVATE, 4, IPC_CREAT | 0777);
	if (id == -1)
	  exit (2);
	  shmaddr = shmat (id, 0, 0);
	  shmctl (id, IPC_RMID, 0);
	  if ((char*) shmat (id, 0, 0) == (char*) -1)
	  {
	    shmdt (shmaddr);
	    exit (1);
	  }
	  shmdt (shmaddr);
	  shmdt (shmaddr);
	  exit (0);
	}
    ],
    AC_DEFINE(IPC_RMID_DEFERRED_RELEASE)
      AC_MSG_RESULT(yes),
    AC_MSG_RESULT(no),
    AC_MSG_RESULT(assuming no))
fi

AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_TIME

AC_CHECK_HEADER(sys/time.h, AC_DEFINE(HAVE_SYS_TIME_H))
AC_CHECK_HEADER(unistd.h, AC_DEFINE(HAVE_UNISTD_H))

AC_TYPE_PID_T
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF

AC_FUNC_ALLOCA

dnl Check for sys/select.h

AC_MSG_CHECKING([fd_set and sys/select])
AC_TRY_COMPILE([#include <sys/types.h>],
        [fd_set readMask, writeMask;], gimp_ok=yes, gimp_ok=no)
if test $gimp_ok = no; then
    AC_HEADER_EGREP(fd_mask, sys/select.h, gimp_ok=yes)
    if test $gimp_ok = yes; then
        AC_DEFINE(HAVE_SYS_SELECT_H)
    fi
fi
AC_MSG_RESULT($gimp_ok)
if test $gimp_ok = no; then
    AC_DEFINE(NO_FD_SET)
fi

dnl Check for random number functions
LIBUCB_LIB=""
AC_CHECK_FUNC(random, [
  AC_DEFINE(RAND_FUNC, random)
  AC_DEFINE(SRAND_FUNC, srandom)],
  [AC_CHECK_LIB(ucb, random, [
    AC_DEFINE(RAND_FUNC, random)
    AC_DEFINE(SRAND_FUNC, srandom)
    LIBUCB_LIB='-lucb'],
    [AC_CHECK_FUNC(lrand48,
      [AC_DEFINE(RAND_FUNC, lrand48) AC_DEFINE(SRAND_FUNC, srand48)],
      [AC_DEFINE(RAND_FUNC, rand) AC_DEFINE(SRAND_FUNC, srand)])])])

dnl check for difftime
AC_CHECK_FUNC(difftime, , AC_DEFINE(NO_DIFFTIME))

dnl check for putenv (because %#@&% NeXTStep doesn't have it)
AC_CHECK_FUNC(putenv, AC_DEFINE(HAVE_PUTENV))

dnl check for inline
AC_MSG_CHECKING([for inline definition in glibconfig.h])
AC_EGREP_CPP(glib_defines_inline,
[#include <glibconfig.h>
#ifdef inline
   glib_defines_inline
#endif
], have_glib_inline=yes, have_glib_inline=no)
AC_MSG_RESULT($have_glib_inline)
if test "$have_glib_inline" = "no"; then
  AC_C_INLINE
fi  

dnl Threads
AC_ARG_WITH(threads, [  --with-threads=[posix]  support threading ])
THREAD_LIBS=
if test "x$with_threads" = "xposix" || test "x$with_threads" = "xyes"; then
  AC_CHECK_LIB(pthread, pthread_attr_init,
    AC_DEFINE(USE_PTHREADS)
    CFLAGS="$CFLAGS -D_REENTRANT"
    THREAD_LIBS="-lpthread")
fi

CPPFLAGS="$gimp_save_CPPFLAGS"
LDFLAGS="$gimp_save_LDFLAGS"
LIBS="$gimp_save_LIBS"

gimpdatadir=$datadir/gimp
gimpplugindir=$libdir/$PACKAGE/$GIMP_MAJOR_VERSION.$GIMP_MINOR_VERSION

brushdata=`ls -1 $srcdir/data/brushes | grep -v Makefile`
gradientdata=`ls -1 $srcdir/data/gradients | grep -v Makefile`
palettedata=`ls -1 $srcdir/data/palettes | grep -v Makefile`
patterndata=`ls -1 $srcdir/data/patterns | grep -v Makefile`

brushdata=`echo $brushdata`
gradientdata=`echo $gradientdata`
palettedata=`echo $palettedata`
patterndata=`echo $patterndata`

dnl This is for generating PDB docuemntation.
AC_PATH_PROGS(EMACS, emacs xemacs, :)

dnl This is for the mail plug-in
sendmail_path=":"
AC_ARG_ENABLE(sendmail_path, [  --with-sendmail=DIR     set sendmail command location],
if eval "test x$with_sendmail != x"; then
    sendmail_path=$with_sendmail
fi)
AC_PATH_PROG(SENDMAIL, "sendmail", $sendmail_path, $PATH:/usr/lib:/usr/sbin)

if test $ac_cv_path_SENDMAIL != ":"; then
  MAILER="-DMAILER=\\\"$ac_cv_path_SENDMAIL\\\""
fi

dnl This is for the print plug-in
lp_path=":"
AC_ARG_ENABLE(lp_path, [  --with-lp=DIR           set lp command location],
if eval "test x$with_lp != x"; then
    lp_path=$with_lp
fi)
AC_PATH_PROG(LP_COMMAND, "lp", $lp_path,
  $PATH:/usr/bin:/usr/sbin:/usr/ucb:/usr/bsd)

if test $ac_cv_path_LP_COMMAND != ":"; then
  LP_DEF="-DLP_COMMAND=\\\"$ac_cv_path_LP_COMMAND\\\""
fi

lpstat_path=":"
AC_ARG_ENABLE(lpstat_path, [  --with-lpstat=DIR       set lpstat command location],
if eval "test x$with_lpstat != x"; then
    lpstat_path=$with_lpstat
fi)
AC_PATH_PROG(LPSTAT_COMMAND, "lpstat", $lpstat_path,
  $PATH:/usr/bin:/usr/sbin:/usr/ucb:/usr/bsd)

if test $ac_cv_path_LPSTAT_COMMAND != ":"; then
  LPSTAT_DEF="-DLPSTAT_COMMAND=\\\"$ac_cv_path_LPSTAT_COMMAND\\\""
fi

lpr_path=":"
AC_ARG_ENABLE(lpr_path, [  --with-lpr=DIR          set lpr command location],
if eval "test x$with_lpr != x"; then
    lpr_path=$with_lpr
fi)
AC_PATH_PROG(LPR_COMMAND, "lpr", $lpr_path,
  $PATH:/usr/bin:/usr/sbin:/usr/ucb:/usr/bsd)

if test $ac_cv_path_LPR_COMMAND != ":"; then
  LPR_DEF="-DLPR_COMMAND=\\\"$ac_cv_path_LPR_COMMAND\\\""
fi

lpc_path=":"
AC_ARG_ENABLE(lpc_path, [  --with-lpc=DIR          set lpc command location],
if eval "test x$with_lpc != x"; then
    lpc_path=$with_lpc
fi)
AC_PATH_PROG(LPC_COMMAND, "lpc", $lpc_path,
  $PATH:/usr/bin:/usr/sbin:/usr/ucb:/usr/bsd)

if test $ac_cv_path_LPC_COMMAND != ":"; then
  LPC_DEF="-DLPC_COMMAND=\\\"$ac_cv_path_LPC_COMMAND\\\""
fi

AC_SUBST(GIMP_MAJOR_VERSION)
AC_SUBST(GIMP_MINOR_VERSION)
AC_SUBST(GIMP_MICRO_VERSION)
AC_SUBST(GIMP_VERSION)

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

AC_SUBST(gimpdir)
AC_SUBST(gimpdatadir)
AC_SUBST(gimpplugindir)
AC_SUBST(brushdata)
AC_SUBST(gradientdata)
AC_SUBST(palettedata)
AC_SUBST(patterndata)
AC_SUBST(WEBBROWSER)
AC_SUBST(LIBXMU_LIB)
AC_SUBST(TIFF)
AC_SUBST(LIBTIFF_LIB)
AC_SUBST(JPEG)
AC_SUBST(LIBJPEG_LIB)
AC_SUBST(PNG)
AC_SUBST(LIBPNG_LIB)
AC_SUBST(AA)
AC_SUBST(LIBAA_LIB)
AC_SUBST(MPEG)
AC_SUBST(LIBMPEG_LIB)
AC_SUBST(XD)
AC_SUBST(LIBXDELTA_LIB)
AC_SUBST(XPM)
AC_SUBST(LIBXPM_LIB)
AC_SUBST(LIBUCB_LIB)
AC_SUBST(LP_DEF)
AC_SUBST(LPSTAT_DEF)
AC_SUBST(LPR_DEF)
AC_SUBST(LPC_DEF)
AC_SUBST(MAILER)
AC_SUBST(THREAD_LIBS)

dnl Output the Makefiles

AC_OUTPUT([
gimprc
gimprc_user
gimptool
libgimp/gimpfeatures.h
Makefile
po/Makefile.in
intl/Makefile
libgimp/Makefile
plug-ins/Makefile
plug-ins/libgck/Makefile
plug-ins/libgck/gck/Makefile
plug-ins/megawidget/Makefile
plug-ins/gpc/Makefile
plug-ins/dbbrowser/Makefile
plug-ins/script-fu/Makefile
plug-ins/script-fu/scripts/Makefile
plug-ins/aa/Makefile
plug-ins/jpeg/Makefile
plug-ins/mpeg/Makefile
plug-ins/png/Makefile
plug-ins/tiff/Makefile
plug-ins/webbrowser/Makefile
plug-ins/xd/Makefile
plug-ins/xpm/Makefile
plug-ins/AlienMap/Makefile
plug-ins/CEL/Makefile
plug-ins/CML_explorer/Makefile
plug-ins/Lighting/Makefile
plug-ins/MapObject/Makefile
plug-ins/align_layers/Makefile
plug-ins/animationplay/Makefile
plug-ins/animoptimize/Makefile
plug-ins/apply_lens/Makefile
plug-ins/autocrop/Makefile
plug-ins/autostretch_hsv/Makefile
plug-ins/blinds/Makefile
plug-ins/blur/Makefile
plug-ins/bmp/Makefile
plug-ins/bumpmap/Makefile
plug-ins/bz2/Makefile
plug-ins/c_astretch/Makefile
plug-ins/checkerboard/Makefile
plug-ins/colorify/Makefile
plug-ins/compose/Makefile
plug-ins/convmatrix/Makefile
plug-ins/cubism/Makefile
plug-ins/decompose/Makefile
plug-ins/deinterlace/Makefile
plug-ins/depthmerge/Makefile
plug-ins/despeckle/Makefile
plug-ins/destripe/Makefile
plug-ins/diffraction/Makefile
plug-ins/displace/Makefile
plug-ins/edge/Makefile
plug-ins/emboss/Makefile
plug-ins/engrave/Makefile
plug-ins/exchange/Makefile
plug-ins/faxg3/Makefile
plug-ins/film/Makefile
plug-ins/fits/Makefile
plug-ins/flame/Makefile
plug-ins/flarefx/Makefile
plug-ins/fp/Makefile
plug-ins/fractaltrace/Makefile
plug-ins/gauss_iir/Makefile
plug-ins/gauss_rle/Makefile
plug-ins/gbr/Makefile
plug-ins/gee/Makefile
plug-ins/gfig/Makefile
plug-ins/gfig/gfig-examples/Makefile
plug-ins/gfli/Makefile
plug-ins/gicon/Makefile
plug-ins/gif/Makefile
plug-ins/glasstile/Makefile
plug-ins/gqbist/Makefile
plug-ins/gradmap/Makefile
plug-ins/grid/Makefile
plug-ins/gtm/Makefile
plug-ins/guillotine/Makefile
plug-ins/gz/Makefile
plug-ins/header/Makefile
plug-ins/hot/Makefile
plug-ins/hrz/Makefile
plug-ins/ifscompose/Makefile
plug-ins/illusion/Makefile
plug-ins/iwarp/Makefile
plug-ins/laplace/Makefile
plug-ins/mail/Makefile
plug-ins/max_rgb/Makefile
plug-ins/maze/Makefile
plug-ins/mblur/Makefile
plug-ins/mosaic/Makefile
plug-ins/nlfilt/Makefile
plug-ins/noisify/Makefile
plug-ins/normalize/Makefile
plug-ins/nova/Makefile
plug-ins/oilify/Makefile
plug-ins/pagecurl/Makefile
plug-ins/palette/Makefile
plug-ins/papertile/Makefile
plug-ins/pat/Makefile
plug-ins/pcx/Makefile
plug-ins/pix/Makefile
plug-ins/pixelize/Makefile
plug-ins/plasma/Makefile
plug-ins/pnm/Makefile
plug-ins/polar/Makefile
plug-ins/print/Makefile
plug-ins/ps/Makefile
plug-ins/psd/Makefile
plug-ins/randomize/Makefile
plug-ins/ripple/Makefile
plug-ins/rotate/Makefile
plug-ins/rotators/Makefile
plug-ins/scatter_hsv/Makefile
plug-ins/screenshot/Makefile
plug-ins/semiflatten/Makefile
plug-ins/sgi/Makefile
plug-ins/sharpen/Makefile
plug-ins/shift/Makefile
plug-ins/sinus/Makefile
plug-ins/smooth_palette/Makefile
plug-ins/snoise/Makefile
plug-ins/snp/Makefile
plug-ins/sobel/Makefile
plug-ins/sparkle/Makefile
plug-ins/spread/Makefile
plug-ins/struc/Makefile
plug-ins/sunras/Makefile
plug-ins/tga/Makefile
plug-ins/threshold_alpha/Makefile
plug-ins/tile/Makefile
plug-ins/tileit/Makefile
plug-ins/tiler/Makefile
plug-ins/url/Makefile
plug-ins/video/Makefile
plug-ins/vinvert/Makefile
plug-ins/vpropagate/Makefile
plug-ins/waterselect/Makefile
plug-ins/waves/Makefile
plug-ins/whirlpinch/Makefile
plug-ins/xwd/Makefile
plug-ins/zealouscrop/Makefile
app/Makefile
docs/Makefile
data/Makefile
data/brushes/Makefile
data/gradients/Makefile
data/palettes/Makefile
data/patterns/Makefile],
[chmod +x gimptool
sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile]
)
