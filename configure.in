dnl Process this file with autoconf to produce a configure script.
AC_INIT(gimprc.in)

dnl Initialize automake stuff
GIMP_MAJOR_VERSION=1
GIMP_MINOR_VERSION=1
GIMP_MICRO_VERSION=14
GIMP_INTERFACE_AGE=0
GIMP_BINARY_AGE=0
GIMP_VERSION=$GIMP_MAJOR_VERSION.$GIMP_MINOR_VERSION.$GIMP_MICRO_VERSION

dnl libtool versioning
LT_RELEASE=$GIMP_MAJOR_VERSION.$GIMP_MINOR_VERSION
LT_CURRENT=`expr $GIMP_MICRO_VERSION - $GIMP_INTERFACE_AGE`
LT_REVISION=$GIMP_INTERFACE_AGE
LT_AGE=`expr $GIMP_BINARY_AGE - $GIMP_INTERFACE_AGE`

VERSION=$GIMP_VERSION
PACKAGE=gimp

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

dnl Specify a header configuration file
AM_CONFIG_HEADER(config.h)

dnl Initialize libtool
AM_PROG_LIBTOOL

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC
AC_ISC_POSIX
AM_PROG_CC_STDC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_CPP

AC_ARG_ENABLE(debug, [  --enable-debug          turn on debugging [default=no]],
if eval "test x$enable_debug = xyes"; then
  DEBUGFLAG="-g"
fi)

ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

dnl Why the heck isn't there already a macro for this?

dnl AC_ARG_WITH(gnu-make, [  --with-gnu-make         assume 'make' understands gnu extensions],
dnl,
dnl if $ac_make -v 2>/dev/null | grep 'GNU Make' >/dev/null; then
dnl   with_gnu_make=yes
dnl fi)
dnl
dnl AC_ARG_WITH(gcg, [  --with-gcg              build 'gcg' code generation tool],
dnl,
dnl with_gcg=$enable_maintainer_mode)
dnl
dnl if test "x$with_gcg" = xyes; then
dnl   AC_CONFIG_SUBDIRS(tools/gcg)
dnl fi
dnl
dnl AC_ARG_ENABLE(gcg-deps, [  --enable-gcg-deps       turn on dynamic gcg dependency tracking (need gcc and gnu make)],
dnl ,
dnl if eval "test x$GCC$with_gnu_make$with_gcg = xyesyesyes"; then
dnl   enable_gcg_deps=yes
dnl fi)
dnl
dnl AM_CONDITIONAL(WITH_GCG, test x$with_gcg = xyes)
dnl AM_CONDITIONAL(WITH_GNU_MAKE, test x$with_gnu_make = xyes)
dnl AM_CONDITIONAL(ENABLE_GCG_DEPS, test x$enable_gcg_deps = xyes)

AC_ARG_ENABLE(ansi, [  --enable-ansi           turn on strict ansi [default=no]],
		    , enable_ansi=no)

dnl Possibly change default gimpdir from .gimp
gimpdir=.gimp-1.1
AC_ARG_ENABLE(gimpdir, [  --enable-gimpdir=DIR    change default gimpdir from .gimp to DIR],
if eval "test x$enable_gimpdir != x"; then
  if eval "test x$enable_gimpdir != xyes"; then
    gimpdir=$enable_gimpdir
  fi
fi)

if test -n "$DEBUGFLAG"; then
  CFLAGS="$DEBUGFLAG $CFLAGS"
fi


dnl i18n stuff
ALL_LINGUAS="cs da de fi fr hu it ja ko nl no pl ru sk sv"

AM_GNU_GETTEXT

dnl Check for GTK+
AM_PATH_GTK(1.2.6,,
  AC_MSG_ERROR(Test for GTK failed. See the file 'INSTALL' for help.))

changequote(,)dnl

dnl Evil stuff to extract GLIB stuff from gtk-config output
dnl (we want to make sure it matches with the gtk we're using)
GLIB_CFLAGS=`echo $GTK_CFLAGS | sed 's/^.*\(-I[^ ]*glib[^ ]*  *-I[^ ]*\).*$/\1/'`
GLIB_LDFLAGS=`echo $GTK_LIBS | sed -e 's/^.*-lgdk[^ ]* *\(-L[^ ]*\).*$/\1/' -e 's/^.* -lgdk[^ ]* .*$//'`
if test -z "$GLIB_LDFLAGS" ; then
  GLIB_LDFLAGS=`echo $GTK_LIBS | sed 's/^ *\(-L[^ ]*\) .*$/\1/'`
fi 
GLIB_LIBS="$GLIB_LDFLAGS `echo $GTK_LIBS | sed 's/^.*\(-lglib[^ ]*\).*$/\1/'`"

if eval "test x$GCC = xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac

  if test "x$enable_ansi" = "xyes"; then
    case " $CFLAGS " in
    *[\ \	]-ansi[\ \	]*) ;;
    *) CFLAGS="$CFLAGS -ansi" ;;
    esac

    case " $CFLAGS " in
    *[\ \	]-pedantic[\ \	]*) ;;
    *) CFLAGS="$CFLAGS -pedantic" ;;
    esac
  fi
fi

changequote([,])dnl

dnl DU4 native cc currently needs -std1 for ANSI mode (instead of K&R)
AC_MSG_CHECKING([for extra flags to get ANSI library prototypes])
gimp_save_LIBS=$LIBS
LIBS="$LIBS -lm"
AC_TRY_RUN([#include <math.h>
             int main (void) { return (log(1) != log(1.)); }],
  AC_MSG_RESULT(none needed),
  gimp_save_CFLAGS=$CFLAGS
  CFLAGS="$CFLAGS -std1"
  AC_TRY_RUN([#include <math.h>
               int main (void) { return (log(1) != log(1.)); }],
    AC_MSG_RESULT(-std1),
    AC_MSG_RESULT()
    CFLAGS=$gimp_save_CFLAGS
    AC_MSG_WARN([No ANSI prototypes found in library. (-std1 didn't work.)]),
    AC_MSG_RESULT),
  AC_MSG_RESULT())

LIBS=$gimp_save_LIBS

dnl NeXTStep cc seems to need this
AC_MSG_CHECKING([for extra flags for POSIX compliance])
AC_TRY_COMPILE([#include <dirent.h>], [DIR *dir;],
  AC_MSG_RESULT(none needed),
  gimp_save_CFLAGS=$CFLAGS
  CFLAGS="$CFLAGS -posix"
  AC_TRY_COMPILE([#include <dirent.h>], [DIR *dir;],
    AC_MSG_RESULT(-posix),
    AC_MSG_RESULT()
    CFLAGS=$gimp_save_CFLAGS
    AC_MSG_WARN([Could not determine POSIX flag. (-posix didn't work.)])))

gimp_save_CPPFLAGS="$CPPFLAGS"
gimp_save_LDFLAGS="$LDFLAGS"
gimp_save_LIBS="$LIBS"

CPPFLAGS="$CPPFLAGS $GTK_CFLAGS"
LDFLAGS="$LDFLAGS `echo $GTK_LIBS | sed 's/\(.*\)\(-lgtk.*\)/\1/'`"
LIBS="$LIBS $GTK_LIBS"

dnl Test for Xmu
  if test -z "$LIBXMU"; then
    AC_CHECK_LIB(Xmu, XmuClientWindow,
      AC_CHECK_HEADER(X11/Xmu/WinUtil.h,
	WEBBROWSER="webbrowser"; LIBXMU='-lXmu -lXt -lSM -lICE',
	AC_MSG_WARN(*** webbrowser plug-in will not be built (XMU header file not found) ***)),
	AC_CHECK_LIB(Xmu, XmuUpdateMapHints,
	  AC_CHECK_HEADER(X11/Xmu/WinUtil.h,
	    WEBBROWSER="webbrowser"; LIBXMU='-lXmu -lXt',
	    AC_MSG_WARN(*** webbrowser plug-in will not be built (XMU header file not found) ***)),
	AC_MSG_WARN(*** webbrowser plug-in will not be built (XMU library not found) ***), -lXt), -lXt -lSM -lICE)
  fi

dnl Test for libaa
  if test -z "$LIBAA"; then
    AC_CHECK_LIB(aa, aa_printf,
      AC_CHECK_HEADER(aalib.h,
	AA='aa'; LIBAA='-laa',
	AC_MSG_WARN(*** AA plug-in will not be built (AA header file not found) ***)),
      AC_MSG_WARN(*** AA plug-in will not be built (AA library not found) ***))
  fi

dnl Test for libtiff
  if test -z "$LIBTIFF"; then
    AC_CHECK_LIB(tiff, TIFFReadScanline,
      AC_CHECK_HEADER(tiffio.h,
	TIFF='tiff'; LIBTIFF='-ltiff',
	AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)),
      AC_CHECK_LIB(tiff, TIFFWriteScanline,
	AC_CHECK_HEADER(tiffio.h,
          TIFF='tiff'; LIBTIFF='-ltiff -ljpeg -lz',
	  AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)),
	AC_CHECK_LIB(tiff34, TIFFFlushData,
	  AC_CHECK_HEADER(tiffio.h,
            TIFF='tiff'; LIBTIFF='-ltiff34 -ljpeg -lz',
	    AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)),
        AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF library not found) ***), -ljpeg -lz -lm), -ljpeg -lz -lm), -lm)
  fi

dnl Test for libjpeg
  if test -z "$LIBJPEG"; then
    AC_CHECK_LIB(jpeg, jpeg_destroy_decompress,
      jpeg_ok=yes,
      jpeg_ok=no
      AC_MSG_WARN(*** JPEG plug-in will not be built (JPEG library not found) ***)
      AC_MSG_WARN(*** XJT plug-in will not be built (JPEG library not found) ***))
    if test "$jpeg_ok" = yes; then
      AC_MSG_CHECKING([for jpeglib.h])
      AC_TRY_CPP(
[#include <stdio.h>
#undef PACKAGE
#undef VERSION
#include <jpeglib.h>],
	jpeg_ok=yes,
	jpeg_ok=no)
      AC_MSG_RESULT($jpeg_ok)
      if test "$jpeg_ok" = yes; then
	JPEG='jpeg'; XJT='xjt'; LIBJPEG='-ljpeg'
	AC_CHECK_LIB(jpeg, jpeg_simple_progression,	
	  AC_DEFINE(HAVE_PROGRESSIVE_JPEG),
	  AC_MSG_WARN(JPEG library does not support progressive saving.))
      else
	AC_MSG_WARN(*** JPEG plug-in will not be built (JPEG header file not found) ***)
        AC_MSG_WARN(*** XJT plug-in will not be built (JPEG header file not found) ***)
      fi
    fi
  fi

dnl Test for libz
  if test -z "$LIBZ"; then
    AC_CHECK_LIB(z, gzsetparams,
      AC_CHECK_HEADER(zlib.h,
	PSP='psp'; LIBZ='-lz',
	AC_MSG_WARN(*** PSP and PNG plug-ins will not be built (ZLIB header files not found) ***)),
      AC_MSG_WARN(*** PSP and PNG plug-ins will not be built (ZLIB library not found) ***))
  fi

dnl Test for libpng
  if test -z "$LIBPNG" && test -n "$LIBZ"; then
    AC_CHECK_LIB(png, png_read_info,
      AC_CHECK_HEADER(png.h,
	png_ok=yes,
	png_ok=no),
      AC_MSG_WARN(*** PNG plug-in will not be built (PNG library not found) ***), -lz -lm)
    if test "$png_ok" = yes; then
      AC_MSG_CHECKING([for png_structp in png.h])
      AC_TRY_COMPILE([#include <png.h>],
        [png_structp pp; png_infop info; png_colorp cmap; png_create_read_struct;],
        png_ok=yes,
        png_ok=no)
      AC_MSG_RESULT($png_ok)
      if test "$png_ok" = yes; then
        PNG='png'; LIBPNG="-lpng $LIBZ"
      else
        AC_MSG_WARN(*** PNG plug-in will not be built (PNG library is too old) ***)
      fi
    else
      AC_MSG_WARN(*** PNG plug-in will not be built (PNG header file not found) ***)
    fi
  fi

dnl Test for libmpeg
  if test -z "$LIBMPEG"; then
    AC_CHECK_LIB(mpeg, GetMPEGFrame,
      AC_CHECK_HEADER(mpeg.h,
	MPEG='mpeg'; LIBMPEG='-lmpeg'; GAP_DECODE_MPEG='gap_decode_mpeg',
	AC_MSG_WARN(*** MPEG plug-in will not be built (MPEG header file not found) ***)),
      AC_MSG_WARN(*** MPEG plug-in will not be built (MPEG library not found) ***))
  fi

dnl Test for libXpm
  if test -z "$LIBXPM"; then
    AC_CHECK_LIB(Xpm, XpmReadFileToXpmImage,
      AC_CHECK_HEADER(X11/xpm.h,
	XPM='xpm'; LIBXPM='-lXpm',
	AC_MSG_WARN(*** XPM plug-in will not be built (XPM header file not found) ***)),
      AC_MSG_WARN(*** XPM plug-in will not be built (XPM library not found) ***), $X_LIBS)
  fi

dnl Check for shared memory
AC_CHECK_HEADER(sys/ipc.h, AC_DEFINE(HAVE_IPC_H), no_sys_ipc=yes)
AC_CHECK_HEADER(sys/shm.h, AC_DEFINE(HAVE_SHM_H), no_sys_shm=yes)
if test "$ac_cv_header_sys_shm_h" = "yes"; then
  AC_MSG_CHECKING(whether shmctl IPC_RMID allowes subsequent attaches)
  AC_TRY_RUN([
	#include <sys/types.h>
	#include <sys/ipc.h>
	#include <sys/shm.h>
	int main()
	{
	  int id;
	  char *shmaddr;
	id = shmget (IPC_PRIVATE, 4, IPC_CREAT | 0777);
	if (id == -1)
	  exit (2);
	  shmaddr = shmat (id, 0, 0);
	  shmctl (id, IPC_RMID, 0);
	  if ((char*) shmat (id, 0, 0) == (char*) -1)
	  {
	    shmdt (shmaddr);
	    exit (1);
	  }
	  shmdt (shmaddr);
	  shmdt (shmaddr);
	  exit (0);
	}
    ],
    AC_DEFINE(IPC_RMID_DEFERRED_RELEASE)
      AC_MSG_RESULT(yes),
    AC_MSG_RESULT(no),
    AC_MSG_RESULT(assuming no))
fi

AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_TIME

AC_CHECK_HEADER(sys/param.h, AC_DEFINE(HAVE_SYS_PARAM_H))
AC_CHECK_HEADER(sys/time.h, AC_DEFINE(HAVE_SYS_TIME_H))
AC_CHECK_HEADER(sys/times.h, AC_DEFINE(HAVE_SYS_TIMES_H))
AC_CHECK_HEADER(sys/wait.h, AC_DEFINE(HAVE_SYS_WAIT_H))
AC_CHECK_HEADER(unistd.h, AC_DEFINE(HAVE_UNISTD_H))

AC_TYPE_PID_T
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF

AC_FUNC_ALLOCA

dnl Check for sys/select.h

AC_MSG_CHECKING([fd_set and sys/select])
AC_TRY_COMPILE([#include <sys/types.h>],
        [fd_set readMask, writeMask;], gimp_ok=yes, gimp_ok=no)
if test $gimp_ok = no; then
    AC_HEADER_EGREP(fd_mask, sys/select.h, gimp_ok=yes)
    if test $gimp_ok = yes; then
        AC_DEFINE(HAVE_SYS_SELECT_H)
    fi
fi
AC_MSG_RESULT($gimp_ok)
if test $gimp_ok = no; then
    AC_DEFINE(NO_FD_SET)
fi

dnl Check for random number functions
LIBUCB=""
AC_CHECK_FUNC(random, [
  AC_DEFINE(RAND_FUNC, random)
  AC_DEFINE(SRAND_FUNC, srandom)],
  [AC_CHECK_LIB(ucb, random, [
    AC_DEFINE(RAND_FUNC, random)
    AC_DEFINE(SRAND_FUNC, srandom)
    LIBUCB='-lucb'],
    [AC_CHECK_FUNC(lrand48,
      [AC_DEFINE(RAND_FUNC, lrand48) AC_DEFINE(SRAND_FUNC, srand48)],
      [AC_DEFINE(RAND_FUNC, rand) AC_DEFINE(SRAND_FUNC, srand)])])])

dnl check for difftime
AC_CHECK_FUNC(difftime, , AC_DEFINE(NO_DIFFTIME))

dnl check for putenv (because %#@&% NeXTStep doesn't have it)
AC_CHECK_FUNC(putenv, AC_DEFINE(HAVE_PUTENV))

dnl check for rint
AC_CHECK_FUNC(rint, AC_DEFINE(HAVE_RINT), [
  AC_CHECK_LIB(m, rint, [
    AC_DEFINE(HAVE_RINT)])])

AC_CHECK_FUNCS(mmap)

dnl check for inline
AC_MSG_CHECKING([for inline definition in glibconfig.h])
AC_EGREP_CPP(glib_defines_inline,
[#include <glibconfig.h>
#ifdef inline
   glib_defines_inline
#endif
], have_glib_inline=yes, have_glib_inline=no)
AC_MSG_RESULT($have_glib_inline)
if test "$have_glib_inline" = "no"; then
  AC_C_INLINE
fi  

CPPFLAGS="$gimp_save_CPPFLAGS"
LDFLAGS="$gimp_save_LDFLAGS"
LIBS="$gimp_save_LIBS"

dnl Threads
AC_ARG_WITH(threads, [  --with-threads=[posix]  support threading ])
GIMP_THREAD_LIBS=
if test "x$with_threads" = "xposix" || test "x$with_threads" = "xyes"; then
  AC_CHECK_LIB(pthread, pthread_attr_init, 
    [AC_DEFINE(USE_PTHREADS)
    GIMP_THREAD_LIBS="-lpthread"
    GIMP_THREAD_FLAGS="-D_REENTRANT"],
    # AIX has libpthreads, cause they're special. Special friends (TM)
    AC_CHECK_LIB(pthreads, pthread_attr_init,
      [AC_DEFINE(USE_PTHREADS)
      GIMP_THREAD_LIBS="-lpthreads"
      GIMP_THREAD_FLAGS="-D_REENTRANT -D_THREAD_SAFE"]))
fi

dnl Multi-Processor Support
AC_ARG_WITH(mp, [  --with-mp=[no]          support multiple processors ])
GIMP_MP_LIBS=
if test "x$with_mp" = "xyes"; then
  AC_CHECK_LIB(pthread, pthread_attr_init, 
    [AC_DEFINE(ENABLE_MP)
    GIMP_MP_LIBS="-lpthread"
    GIMP_MP_FLAGS="-D_REENTRANT"],
    # AIX has libpthreads, cause they're special. Special friends (TM)
    AC_CHECK_LIB(pthreads, pthread_attr_init,
      [AC_DEFINE(ENABLE_MP)
      GIMP_MP_LIBS="-lpthreads"
      GIMP_MP_FLAGS="-D_REENTRANT -D_THREAD_SAFE"]))
fi

gimpdatadir=$datadir/gimp
gimpplugindir=$libdir/$PACKAGE/$GIMP_MAJOR_VERSION.$GIMP_MINOR_VERSION
localedir='${prefix}/${DATADIRNAME}/locale'

brushdata=`ls -1 $srcdir/data/brushes | grep -v Makefile`
gradientdata=`ls -1 $srcdir/data/gradients | grep -v Makefile`
palettedata=`ls -1 $srcdir/data/palettes | grep -v Makefile`
patterndata=`ls -1 $srcdir/data/patterns | grep -v Makefile`

brushdata=`echo $brushdata`
gradientdata=`echo $gradientdata`
palettedata=`echo $palettedata`
patterndata=`echo $patterndata`

dnl This is for generating PDB docuemntation.
AC_PATH_PROGS(EMACS, emacs xemacs, :)

dnl This is for the mail plug-in
sendmail_path=":"
AC_ARG_ENABLE(sendmail_path, [  --with-sendmail=DIR     set sendmail command location],
if eval "test x$with_sendmail != x"; then
    sendmail_path=$with_sendmail
fi)
AC_PATH_PROG(SENDMAIL, "sendmail", $sendmail_path, $PATH:/usr/sbin:/usr/lib)

if test $ac_cv_path_SENDMAIL != ":"; then
  MAILER="-DMAILER=\\\"$ac_cv_path_SENDMAIL\\\""
fi

dnl This is for the print plug-in
lp_path=":"
AC_ARG_ENABLE(lp_path, [  --with-lp=DIR           set lp command location],
if eval "test x$with_lp != x"; then
    lp_path=$with_lp
fi)
AC_PATH_PROG(LP_COMMAND, "lp", $lp_path,
  $PATH:/usr/bin:/usr/sbin:/usr/ucb:/usr/bsd)

if test $ac_cv_path_LP_COMMAND != ":"; then
  LP_DEF="-DLP_COMMAND=\\\"$ac_cv_path_LP_COMMAND\\\""
fi

lpstat_path=":"
AC_ARG_ENABLE(lpstat_path, [  --with-lpstat=DIR       set lpstat command location],
if eval "test x$with_lpstat != x"; then
    lpstat_path=$with_lpstat
fi)
AC_PATH_PROG(LPSTAT_COMMAND, "lpstat", $lpstat_path,
  $PATH:/usr/bin:/usr/sbin:/usr/ucb:/usr/bsd)

if test $ac_cv_path_LPSTAT_COMMAND != ":"; then
  LPSTAT_DEF="-DLPSTAT_COMMAND=\\\"$ac_cv_path_LPSTAT_COMMAND\\\""
fi

lpr_path=":"
AC_ARG_ENABLE(lpr_path, [  --with-lpr=DIR          set lpr command location],
if eval "test x$with_lpr != x"; then
    lpr_path=$with_lpr
fi)
AC_PATH_PROG(LPR_COMMAND, "lpr", $lpr_path,
  $PATH:/usr/bin:/usr/sbin:/usr/ucb:/usr/bsd)

if test $ac_cv_path_LPR_COMMAND != ":"; then
  LPR_DEF="-DLPR_COMMAND=\\\"$ac_cv_path_LPR_COMMAND\\\""
fi

lpc_path=":"
AC_ARG_ENABLE(lpc_path, [  --with-lpc=DIR          set lpc command location],
if eval "test x$with_lpc != x"; then
    lpc_path=$with_lpc
fi)
AC_PATH_PROG(LPC_COMMAND, "lpc", $lpc_path,
  $PATH:/usr/bin:/usr/sbin:/usr/ucb:/usr/bsd)

if test $ac_cv_path_LPC_COMMAND != ":"; then
  LPC_DEF="-DLPC_COMMAND=\\\"$ac_cv_path_LPC_COMMAND\\\""
fi

dnl This is for the help browser
AC_PATH_PROG(GNOME_CONFIG,gnome-config,no)
if test "$GNOME_CONFIG" = "no"; then
  HELPBROWSER=
  dnl Test for standalone GtkXMHTML widget
  AC_CHECK_LIB(gtkxmhtml, gtk_xmhtml_new,
    GTKXMHTML_CFLAGS=$GLIB_CFLAGS
    GTKXMHTML_LIBS="$GLIB_LIBS -lgtkxmhtml"
    HELPBROWSER=helpbrowser,
    AC_MSG_WARN(*** Help browser plug-in will not be built (GtkXMHTML library not found) ***))
else
  GTKXMHTML_CFLAGS=`$GNOME_CONFIG --cflags gnomeui`
  GTKXMHTML_LIBS=`$GNOME_CONFIG --libs gtkxmhtml`
  HELPBROWSER=helpbrowser
fi

dnl This is for the gimp-perl plug-in
AC_ARG_ENABLE(perl, [  --disable-perl          do not build perl extension [by default enabled]
  --enable-perl[=prefix]  use specified prefix for perl (see INSTALL)])

AC_ARG_WITH(pdbgen, [  --with-pdbgen           use 'pdbgen' code generation tool],
,
with_pdbgen=$enable_maintainer_mode)

if test "x$enable_perl" != xno || test "x$with_pdbgen" = xyes ; then
   AC_PATH_PROGS(PERL,perl5 perl perl5.005 perl5.004,perl)
fi

AM_CONDITIONAL(WITH_PDBGEN, test x$with_pdbgen = xyes)

rm -f plug-ins/perl/config.status

if test "x$enable_perl" != xno; then
   AC_MSG_CHECKING(for perl version >= 5.004_04)
   if test "`$PERL -e 'print $]>=5.004_04'`" = "1"; then
      AC_MSG_RESULT(yes)
      
      dnl perl does not allow VPATH builds (yet)
      if test ! -f plug-ins/perl/Makefile.PL; then
         mkdir plug-ins || true
         cp -r $srcdir/plug-ins/perl plug-ins/perl
      fi
      
      dnl these are gross hacks
      GIMP_CFLAGS_NOUI="-I\$topdir/../.. $GLIB_CFLAGS $GTK_CFLAGS $CFLAGS"
      GIMP_CFLAGS="$GIMP_CFLAGS_NOUI"
      GIMP_LIBS_NOUI="-L\$topdir/../../libgimp/.libs -L\$dirprefix/../../libgimp -lgimp $GLIB_LIBS $LIBS"
      GIMP_LIBS="$GIMP_LIBS_NOUI -lgimpui"
      GIMPTOOL="../../gimptool"
      IN_GIMP=1
      EXTENSIVE_TESTS=0

      dnl include the autoconf fragment from there
      sinclude(plug-ins/perl/configure.frag)

      dnl we ignore prefix
      if test -n "$enable_perl" && test "x$enable_perl" != xyes; then
         perl_prefix="PREFIX=$enable_perl"
      fi
      cat >plug-ins/perl/config.status <<EOF
      echo invoking perl for configuration...
      $PERL Makefile.PL --writemakefile $perl_prefix
EOF
      GIMP_PERL=perl
   else
      GIMP_PERL=
      AC_MSG_RESULT(no)
      AC_MSG_WARN(*** gimp-perl plug-in won't be build (perl5.004_04 or higher required) ***)
   fi
fi

dnl Pygimp configure stuff ...
AC_ARG_ENABLE(python,
[  --disable-python        do not build python extension],,[enable_python=no])
build_python=false
if test "x$enable_python" != xno; then
  AM_PATH_PYTHON
  if test "x$PYTHON" != xno; then
    AM_INIT_PYEXEC_MOD
    if test "x$am_cv_python_makefile" != xno; then
      PYGIMP_CFLAGS_NOUI="-I\$(top_srcdir) $GLIB_CFLAGS"
      PYGIMP_LIBS_NOUI="-L\$(top_builddir)/libgimp/.libs -lgimp $GLIB_LIBS"

      build_python=true
      AM_CHECK_PYMOD(gtk,,,build_python=false)
    fi
  fi
fi
AC_SUBST(PYGIMP_CFLAGS_NOUI)
AC_SUBST(PYGIMP_LIBS_NOUI)
AM_CONDITIONAL(BUILD_PYTHON, $build_python)
  

GIMPINSTALL=
if test "$INSTALL" = "$ac_install_sh"; then
  GIMPINSTALL="gimpinstall"
fi

GIMPDOCS=
if test -n "$DISTMAKE"; then
  WEBBROWSER=webbrowser TIFF=tiff JPEG=jpeg PNG=png AA=aa MPEG=mpeg
  XJT=xjt XPM=xpm GIMPDOCS=docs
fi

AM_CONDITIONAL(STATICLIBS, test x$enable_static = xyes)

AC_SUBST(GIMP_MAJOR_VERSION)
AC_SUBST(GIMP_MINOR_VERSION)
AC_SUBST(GIMP_MICRO_VERSION)
AC_SUBST(GIMP_VERSION)

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)

AC_SUBST(gimpdir)
AC_SUBST(gimpdatadir)
AC_SUBST(gimpplugindir)
AC_SUBST(localedir)
AC_SUBST(brushdata)
AC_SUBST(gradientdata)
AC_SUBST(palettedata)
AC_SUBST(patterndata)
AC_SUBST(WEBBROWSER)
AC_SUBST(LIBXMU)
AC_SUBST(TIFF)
AC_SUBST(LIBTIFF)
AC_SUBST(JPEG)
AC_SUBST(XJT)
AC_SUBST(LIBJPEG)
AC_SUBST(PSP)
AC_SUBST(LIBZ)
AC_SUBST(PNG)
AC_SUBST(LIBPNG)
AC_SUBST(AA)
AC_SUBST(LIBAA)
AC_SUBST(MPEG)
AC_SUBST(LIBMPEG)
AC_SUBST(GAP_DECODE_MPEG)
AC_SUBST(XPM)
AC_SUBST(LIBXPM)
AC_SUBST(LIBUCB)
AC_SUBST(LP_DEF)
AC_SUBST(LPSTAT_DEF)
AC_SUBST(LPR_DEF)
AC_SUBST(LPC_DEF)
AC_SUBST(MAILER)
AC_SUBST(GIMP_THREAD_FLAGS)
AC_SUBST(GIMP_THREAD_LIBS)
AC_SUBST(GIMP_MP_FLAGS)
AC_SUBST(GIMP_MP_LIBS)
AC_SUBST(GIMP_PERL)
AC_SUBST(GIMPDOCS)
AC_SUBST(GIMPINSTALL)
AC_SUBST(HELPBROWSER)
AC_SUBST(GTKXMHTML_CFLAGS)
AC_SUBST(GTKXMHTML_LIBS)

dnl easy way to skip the plug-in build
GIMP_PLUGINS=plug-ins
GIMP_MODULES=modules
AC_SUBST(GIMP_PLUGINS)
AC_SUBST(GIMP_MODULES)

dnl Output the Makefiles

AC_OUTPUT([
gimprc
gimprc_user
gimprc.5
gimptool
libgimp/gimpfeatures.h
libgimp/Makefile
app/Makefile
app/unittest/Makefile
plug-ins/Makefile
plug-ins/perl/config.pl
plug-ins/libgck/Makefile
plug-ins/libgck/gck/Makefile
plug-ins/megawidget/Makefile
plug-ins/dbbrowser/Makefile
plug-ins/script-fu/Makefile
plug-ins/script-fu/scripts/Makefile
plug-ins/webbrowser/Makefile
plug-ins/xjt/Makefile
plug-ins/AlienMap/Makefile
plug-ins/AlienMap2/Makefile
plug-ins/FractalExplorer/Makefile
plug-ins/FractalExplorer/fractalexplorer-examples/Makefile
plug-ins/Lighting/Makefile
plug-ins/MapObject/Makefile
plug-ins/bmp/Makefile
plug-ins/borderaverage/Makefile
plug-ins/common/Makefile
plug-ins/faxg3/Makefile
plug-ins/fits/Makefile
plug-ins/flame/Makefile
plug-ins/fp/Makefile
plug-ins/gap/Makefile
plug-ins/gdyntext/Makefile
plug-ins/gfig/Makefile
plug-ins/gfig/gfig-examples/Makefile
plug-ins/gflare/Makefile
plug-ins/gflare/gflares/Makefile
plug-ins/gfli/Makefile
plug-ins/gimpressionist/Makefile
plug-ins/gimpressionist/Brushes/Makefile
plug-ins/gimpressionist/Paper/Makefile
plug-ins/gimpressionist/Presets/Makefile
plug-ins/helpbrowser/Makefile
plug-ins/ifscompose/Makefile
plug-ins/imagemap/Makefile
plug-ins/maze/Makefile
plug-ins/mosaic/Makefile
plug-ins/pagecurl/Makefile
plug-ins/print/Makefile
plug-ins/pygimp/Makefile
plug-ins/pygimp/doc/Makefile
plug-ins/pygimp/plug-ins/Makefile
plug-ins/rcm/Makefile
plug-ins/sel2path/Makefile
plug-ins/sgi/Makefile
plug-ins/sinus/Makefile
plug-ins/struc/Makefile
plug-ins/unsharp/Makefile
modules/Makefile
docs/Makefile
data/Makefile
data/brushes/Makefile
data/gradients/Makefile
data/palettes/Makefile
data/patterns/Makefile
Makefile
po/Makefile.in
po-plug-ins/Makefile.in
intl/Makefile
tools/Makefile
tools/pdbgen/Makefile
tips/Makefile
help/Makefile
help/C/Makefile
help/C/channels/Makefile
help/C/dialogs/Makefile
help/C/dialogs/channels/Makefile
help/C/dialogs/color_selectors/Makefile
help/C/dialogs/display_filters/Makefile
help/C/dialogs/gradient_editor/Makefile
help/C/dialogs/layers/Makefile
help/C/dialogs/palette_editor/Makefile
help/C/dialogs/paths/Makefile
help/C/dialogs/preferences/Makefile
help/C/file/Makefile
help/C/filters/Makefile
help/C/image/Makefile
help/C/image/edit/Makefile
help/C/image/image/Makefile
help/C/image/image/colors/Makefile
help/C/image/image/colors/auto/Makefile
help/C/image/image/mode/Makefile
help/C/image/image/transforms/Makefile
help/C/image/select/Makefile
help/C/image/view/Makefile
help/C/layers/Makefile
help/C/layers/stack/Makefile
help/C/open/Makefile
help/C/paths/Makefile
help/C/save/Makefile
help/C/toolbox/Makefile
help/C/toolbox/help/Makefile
help/C/tools/Makefile
help/images/Makefile],
[
   chmod +x gimptool
   sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile
   sed -e "/POTFILES =/r po-plug-ins/POTFILES" po-plug-ins/Makefile.in > po-plug-ins/Makefile
   case "$CONFIG_FILES" in
   *plug-ins/perl*)
      if test -f plug-ins/perl/config.status; then
         ( cd plug-ins/perl; ${CONFIG_SHELL-/bin/sh} config.status )
      fi
      ;;
   esac
]
)
