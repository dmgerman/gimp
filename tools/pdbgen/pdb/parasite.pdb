# GIMP - The GNU Image Manipulation Program
# Copyright (C) 1998 Jay Cox <jaycox@earthlink.net>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# "Perlized" from C source by Manish Singh <yosh@gimp.org>

sub parasite_find {
    $blurb = 'Look up a global parasite.';

    $help = <<'HELP';
Finds and returns the global parasite that was previously attached.
HELP

    &jay_pdb_misc('1998');

    @inargs = (
	{ name => 'name', type => 'string',
	  desc => 'The name of the parasite to find' }
    );

    @outargs = (
	{ name => 'parasite', type => 'parasite',
	  desc => 'The found parasite' }
    );

    %invoke = (
	code => <<'CODE'
{
  parasite = gimp_parasite_copy (gimp_parasite_find (gimp, name));

  if (! parasite)
    success = FALSE;
}
CODE
    );
}

sub parasite_attach {
    $blurb = 'Add a global parasite.';

    $help = <<'HELP';
This procedure attaches a global parasite. It has no return values.
HELP

    &jay_pdb_misc('1998');

    @inargs = (
	{ name => 'parasite', type => 'parasite',
	  desc => 'The parasite to attach' }
    );

    %invoke = (
	code => <<'CODE'
{
  gimp_parasite_attach (gimp, parasite);
}
CODE
    );
}

sub parasite_detach {
    $blurb = 'Removes a global parasite.';

    $help = <<'HELP';
This procedure detaches a global parasite from. It has no return values.
HELP

    &jay_pdb_misc('1998');

    @inargs = (
	{ name => 'name', type => 'string',
	  desc => 'The name of the parasite to detach.' }
    );

    %invoke = (
	code => <<'CODE'
{
  gimp_parasite_detach (gimp, name);
}
CODE
    );
}

sub parasite_list {
    $blurb = 'List all parasites.';
    $help  = 'Returns a list of all currently attached global parasites.';

    &marc_pdb_misc('1999');

    @outargs = (
	{ name => 'parasites', type => 'stringarray', void_ret => 1,
	  desc => 'The names of currently attached parasites',
	  array => { desc => 'The number of attached parasites' } }
    );

    %invoke = (
	code => <<'CODE'
{
  parasites = gimp_parasite_list (gimp, &num_parasites);
}
CODE
    );
}

@headers = qw("core/gimp-parasites.h");

@procs = qw(parasite_find
            parasite_attach parasite_detach
            parasite_list);

%exports = (app => [@procs], lib => [@procs]);

$desc = 'Parasite procedures';
$doc_title = 'gimpparasite';
$doc_short_desc = 'Operations related to parasites.';
$doc_long_desc = 'Operations related to parasites.';

1;
