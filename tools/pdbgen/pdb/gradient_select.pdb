# The GIMP -- an image manipulation program
# Copyright (C) 1995 Spencer Kimball and Peter Mattis

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# "Perlized" from C source by Manish Singh <yosh@gimp.org>

sub pdb_misc {
    $author = $copyright = 'Andy Thomas';
    $date = '1998';
}

sub sample_size_arg {{
    name => 'sample_size',
    type => '0 < int32 <= 10000',
    desc => 'Size of the sample to return when the gradient is changed
	    (%%desc%%)',
    on_fail => 'sample_size = GIMP_GRADIENT_DEFAULT_SAMPLE_SIZE;',
    no_success => 1
}}

sub gradients_popup {
    $blurb = 'Invokes the Gimp gradients selection.';

    $help = 'This procedure popups the gradients selection dialog.';

    &pdb_misc;

    @inargs = (
	{ name => 'gradient_callback', type => 'string',
	  desc => 'The callback PDB proc to call when gradient selection is
		   made' },
	{ name => 'popup_title', type => 'string',
	  desc => 'Title to give the gradient popup window' },
	{ name => 'initial_gradient', type => 'string',
	  desc => 'The name of the pattern to set as the first selected',
	  no_success => 1 },
	&sample_size_arg
    );

    %invoke = (
	vars => [ 'ProcRecord *proc' ],
	code => <<'CODE'
{
  if (! gimp->no_interface &&
      (proc = procedural_db_lookup (gimp, gradient_callback)))
    {
      gradient_select_new (gimp, popup_title,
                           initial_gradient,
                           gradient_callback,
                           sample_size);
    }
  else
    {
      success = FALSE;
    }
}
CODE
    );
}

sub gradients_close_popup {
    $blurb = 'Popdown the Gimp gradient selection.';

    $help = 'This procedure closes an opened gradient selection dialog.';

    &pdb_misc;

    @inargs = (
	{ name => 'gradient_callback', type => 'string',
	  desc => 'The name of the callback registered for this popup' }
    );

    %invoke = (
	vars => [ 'ProcRecord *prec', 'GradientSelect *gsp' ],
	code => <<'CODE'
{
  if (! gimp->no_interface &&
      (prec = procedural_db_lookup (gimp, gradient_callback)) &&
      (gsp = gradient_select_get_by_callback (gradient_callback)))
    {
      gradient_select_free (gsp);
    }
  else
    {
      success = FALSE;
    }
}
CODE
    );
}

sub gradients_set_popup {
    $blurb = 'Sets the current gradient selection in a popup.';

    $help = $blurb;

    &pdb_misc;

    @inargs = (
	{ name => 'gradient_callback', type => 'string',
	  desc => 'The name of the callback registered for this popup' },
	{ name => 'gradient_name', type => 'string',
	  desc => 'The name of the gradient to set as selected' }
    );

    %invoke = (
	vars => [ 'ProcRecord *prec', 'GradientSelect *gsp' ],
	code => <<'CODE'
{
  if (! gimp->no_interface &&
      (prec = procedural_db_lookup (gimp, gradient_callback)) &&
      (gsp = gradient_select_get_by_callback (gradient_callback)))
    {
      GimpGradient *active = (GimpGradient *)
        gimp_container_get_child_by_name (gimp->gradient_factory->container,
                                          gradient_name);

      success = (active != NULL);

      if (success)
        gimp_context_set_gradient (gsp->context, active);
    }
  else
    success = FALSE;
}
CODE
    );
}

@headers = qw("core/gimp.h" "core/gimpcontext.h"
	      "core/gimpcontainer.h" "core/gimpdatafactory.h"
              "core/gimpgradient.h"
	      "gui/gui-types.h" "gui/gradient-select.h");

@procs = qw(gradients_popup gradients_close_popup gradients_set_popup);
%exports = (app => [@procs], lib => [@procs]);

$desc = 'Gradient UI';

1;
