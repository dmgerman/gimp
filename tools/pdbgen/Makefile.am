PDBGEN_BACKUP = 0
PDBGEN_GROUPS =

pdb_sources = \
	pdb/brush_select.pdb	\
	pdb/brushes.pdb		\
	pdb/channel.pdb		\
	pdb/color.pdb		\
	pdb/convert.pdb		\
	pdb/display.pdb		\
	pdb/drawable.pdb	\
	pdb/edit.pdb		\
	pdb/fileops.pdb		\
	pdb/floating_sel.pdb	\
	pdb/font_select.pdb	\
	pdb/fonts.pdb		\
	pdb/gimprc.pdb		\
	pdb/gradient_edit.pdb	\
	pdb/gradient_select.pdb	\
	pdb/gradients.pdb	\
	pdb/guides.pdb		\
	pdb/help.pdb		\
	pdb/image.pdb		\
	pdb/layer.pdb		\
	pdb/message.pdb		\
	pdb/misc.pdb		\
	pdb/paint_tools.pdb	\
	pdb/palette.pdb		\
	pdb/palette_select.pdb	\
	pdb/palettes.pdb	\
	pdb/parasite.pdb	\
	pdb/paths.pdb		\
	pdb/pattern_select.pdb	\
	pdb/patterns.pdb	\
	pdb/plug_in.pdb		\
	pdb/procedural_db.pdb	\
	pdb/selection.pdb	\
	pdb/selection_tools.pdb	\
	pdb/text_tool.pdb	\
	pdb/transform_tools.pdb	\
	pdb/undo.pdb		\
	pdb/unit.pdb

EXTRA_DIST = \
	README		\
	app.pl		\
	enumcode.pl	\
	enumcode-py.pl	\
	enumgen.pl	\
	groups.pl	\
	lib.pl		\
	pdb.pl		\
	pdbgen.pl	\
	stddefs.pdb	\
	util.pl		\
	$(pdb_sources)

enum_headers = \
	../../libgimpbase/gimpbasetypes.h		\
	../../app/paint-funcs/paint-funcs-types.h	\
	../../app/base/base-enums.h			\
	../../app/core/core-enums.h			\
	../../app/core/core-types.h			\
	../../app/paint/paint-enums.h			\
	../../app/plug-in/plug-in-types.h

pdb_scripts = \
	pdbgen.pl	\
	stddefs.pdb	\
	pdb.pl		\
	util.pl		\
	enums.pl	\
	groups.pl

$(srcdir)/enums.pl: stamp-enums
	@:
stamp-enums: $(srcdir)/enumgen.pl $(enum_headers) Makefile.am
	rootme=`pwd`; \
	cd $(srcdir) && $(PERL) enumgen.pl $(enum_headers) \
	&& echo timestamp > $$rootme/stamp-enums

$(srcdir)/groups.pl: stamp-groups
	@:

stamp-groups: Makefile.am
	rootme=`pwd`; cd $(srcdir) \
	&& echo "# This file is autogenerated" > $$rootme/groups.pl.tmp \
	&& echo "@groups = qw(" >> $$rootme/groups.pl.tmp \
	&& (for pdb in $(pdb_sources); do \
	      group=`echo $$pdb | sed -e 's%pdb/\([^.]*\)\..*%\1%'`; \
	      echo "    $$group" >> $$rootme/groups.pl.tmp; \
	    done) \
	&& echo ");" >> $$rootme/groups.pl.tmp \
	&& (cmp -s $$rootme/groups.pl.tmp groups.pl || \
            cp $$rootme/groups.pl.tmp groups.pl) \
	&& rm $$rootme/groups.pl.tmp \
	&& echo timestamp > $$rootme/stamp-groups

stamp-pdbgen: $(srcdir)/app.pl $(srcdir)/lib.pl $(pdb_scripts) $(pdb_sources)
	rootme=`pwd`; \
	destdir=`cd $(top_srcdir) && pwd`; export destdir; \
	cd $(srcdir) && \
	   PDBGEN_BACKUP=$(PDBGEN_BACKUP) PDBGEN_GROUPS=$(PDBGEN_GROUPS) \
	   $(PERL) pdbgen.pl app lib \
	&& echo timestamp > $$rootme/stamp-pdbgen

stamp-enum-code: $(srcdir)/enumcode.pl enums.pl util.pl
	rootme=`pwd`; \
	destdir=`cd $(top_srcdir) && pwd`; export destdir; \
	cd $(srcdir) && \
	  PDBGEN_BACKUP=$(PDBGEN_BACKUP) \
	  $(PERL) enumcode.pl \
	 && echo timestamp > $$rootme/stamp-enum-code

stamp-enum-code-py: $(srcdir)/enumcode-py.pl enums.pl util.pl
	rootme=`pwd`; \
	destdir=`cd $(top_srcdir) && pwd`; export destdir; \
	cd $(srcdir) && \
	  PDBGEN_BACKUP=$(PDBGEN_BACKUP) \
	  $(PERL) enumcode-py.pl \
	 && echo timestamp > $$rootme/stamp-enum-code-py

all-local: stamp-pdbgen stamp-enum-code stamp-enum-code-py
