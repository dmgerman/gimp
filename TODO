Please add things to this file when the need to do them is
discovered.

gui/functionality seperation
	both file scope wise and in use, particulary so that
	the gui version of the tool uses the pdb whenever possible
	(for finding bugs, and for macro recording)


fix the palette dialogs (it would be nice to be able to actually edit
 palettes and the like), also replace that menubox with a list or
 something

tools...er, fix em or something

integrate palette saving into core

more configurabilty (eek)

fix stuff so that the tile size could actually be changed eventually?

file new dialog stuff   (i'm working on this....)
	1. default to size of cut buffer
	2. add units and resolution options
	3. make x,y values have dropdowns for last 5 or so used sizes
	4. maybe an estimate of how much ram the image will take?
	5. maybe some "preset" common image sizes?

export filters...

previews in file save (for jpeg compression, etc)

save/restore state of major dialogs (exported to the PDB too)

keybindings for simple "binary" tools (for ex, flip should
flip horiz normal, and shift+click to shift vertically)

curve deal in the gradient editor?

some degree of drawing tools, straight line, etc...

paths, and better beziers would be a nice touch

Macro recording and better scripting support

More Xinput stuff ( gradient brushes, pen "strokes" ?)

natural media tools (raph?)

A "Revert To" menu options

Redesign of the Blend Tool dialog? (it's rather large...)

"Fit text to selection"? make selection, scare text to fit it...

a complete groundup rewrite of iscissors?

Interactive resizing/scaling of layers (maybe with handles on the edges)

progress bars on long proccesses?

status bars on image window (maybe swallow plug-in progress bars, show
current x,y, file type, etc...)
	- optionally show that information in the toolbar ?
	- probably dragable to the toolbar and vice versa

"open into layer" and new image from cut buffer stuff should
perhaps be in core?

drag & drop for layers (both in the dialog, and from image to image)

more indicators of current status (X,Y position, selection size and
placement etc ), maybe in another dialog, maybe a status bar?

Clean up swapfiles?

Automagically guess whats a good tilecache size?

an artist palette type of color selector? (maybe based on raphs
watercolor deal?) notebooked with the regular color selector?

BETTER FONT SUPPORT! even if we have to go around X.
and a better font selector too

ability to get an exact count of the total number of colors
in the image

indexed/color reducing to arbitrary number of colors?

Folding box for the toolbar. So you can have it be 9x3 like now, or
1x27, or whatever... gyve has rough outlines of a widget to do this...

optimize transform_core (special cases, fft stuff?, optimizations only
	raph understands, etc...)

brush-shaped cursors...

pixmap brushes...


Quickmask/paintable selections

let pdb stuff register under the layers_dialog menu

some sort of mdi for dialogs so you could tab them together or
pull them apart?

make color picker able to choose from any color on the screen

dodge/burn tools

session management


Text Tool
	More complete font selection
	Multiple lines and alignment


big cad style cross-hairs cursor?


more info available to the user in general (current brush, etc)

some sort of image locking, so we don't munge images by doing >1 ops
on them at once


Suggestion from Ville Hautamaki (CW): 
Pattern groups


Overwork the transform tools UI. It would be nice if the transformation
wouldn't automatically start when releasing the mouse. Instead have a window
that shows the currently choosen transformation numerically 
(e.g. Scale X: 0.75 | Scale Y: 1.00). The transformation should be editable
there and with handles on the outline. Perform the transformation when "OK" is
clicked in the dialog or when you doubleclick(?) into the image. 

Probably have a "Preview" button too that performs the transformation 
without interpolation?


Selections should always be bezierifyable.

Selections should be transformable (e.g. rotate an elliptical selection; the
selection, not it's content!!).

Have a possibility to add a text as selection (is this doable with
Type1-fonts?). If selections would be editable as described above, we'd 
then have editable vector-text.


