<!-- ##### SECTION Title ##### -->
GimpWidgets

<!-- ##### SECTION Short_Description ##### -->
A collection of convenient widget constructors, standard callbacks and
helper functions.

<!-- ##### SECTION Long_Description ##### -->
<para>

</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### FUNCTION gimp_widgets_init ##### -->
<para>

</para>



<!-- ##### FUNCTION gimp_option_menu_new ##### -->
<para>

The @va_list describing the #GtkMenuItem's has the following format:

<informaltable pgwide=1 frame="none" role="struct">
<tgroup cols="2"><colspec colwidth="4*"><colspec colwidth="8*">
<tbody>

<row>
<entry>#gchar *label,</entry>
<entry>The menu item's label.</entry>
</row>

<row>
<entry>#GtkSignalFunc callback,</entry>
<entry>The callback which will be connected to the menu item's
"activate" signal</entry>
</row>

<row>
<entry>#gpointer data,</entry>
<entry>The callback data which will be used in gtk_signal_connect().</entry>
</row>

<row>
<entry>#gpointer user_data,</entry>
<entry>The menu item's @user_data which will be set with
gtk_object_set_user_data().</entry>
</row>

<row>
<entry>#GtkWidget **widget_ptr,</entry>
<entry>A pointer to store the created menu item in.</entry>
</row>

<row>
<entry>#gboolean active,</entry>
<entry>#TRUE if this should be the initially selected menu item.</entry>
</row>

</tbody></tgroup></informaltable>

</para>

@menu_only: 
@Varargs: 
@Returns: 


<!-- ##### FUNCTION gimp_option_menu_new2 ##### -->
<para>

The @va_list describing the #GtkMenuItem's has the following format:

<informaltable pgwide=1 frame="none" role="struct">
<tgroup cols="2"><colspec colwidth="4*"><colspec colwidth="8*">
<tbody>

<row>
<entry>#gchar *label,</entry>
<entry>The menu item's label.</entry>
</row>

<row>
<entry>#gpointer user_data,</entry>
<entry>The menu item's @user_data which will be set with
gtk_object_set_user_data().</entry>
</row>

<row>
<entry>#GtkWidget **widget_ptr,</entry>
<entry>A pointer to store the created menu item in.</entry>
</row>

</tbody></tgroup></informaltable>

</para>

@menu_only: 
@menu_item_callback: 
@menu_item_callback_data: 
@initial: 
@Varargs: 
@Returns: 
<!-- # Unused Parameters # -->
@data: 


<!-- ##### FUNCTION gimp_option_menu_set_history ##### -->
<para>

</para>

@option_menu: 
@item_data: 
<!-- # Unused Parameters # -->
@user_data: 


<!-- ##### FUNCTION gimp_option_menu_set_sensitive ##### -->
<para>

</para>

@option_menu: 
@callback: 
@callback_data: 


<!-- ##### USER_FUNCTION GimpOptionMenuSensitivityCallback ##### -->
<para>

</para>

@item_data: 
@callback_data: 
@Returns: 


<!-- ##### FUNCTION gimp_radio_group_new ##### -->
<para>

The @va_list describing the #GtkRadioButton's has the following format:

<informaltable pgwide=1 frame="none" role="struct">
<tgroup cols="2"><colspec colwidth="4*"><colspec colwidth="8*">
<tbody>

<row>
<entry>#gchar *label,</entry>
<entry>The radio button's label.</entry>
</row>

<row>
<entry>#GtkSignalFunc callback,</entry>
<entry>The callback which will be connected to the radio button's
"toggled" signal</entry>
</row>

<row>
<entry>#gpointer data,</entry>
<entry>The callback data which will be used in gtk_signal_connect().</entry>
</row>

<row>
<entry>#gpointer user_data,</entry>
<entry>The radio button's @user_data which will be set with
gtk_object_set_user_data().</entry>
</row>

<row>
<entry>#GtkWidget **widget_ptr,</entry>
<entry>A pointer to store the created radio button in.</entry>
</row>

<row>
<entry>#gboolean active,</entry>
<entry>#TRUE if this should be the initially pressed radio button.</entry>
</row>

</tbody></tgroup></informaltable>

</para>

@in_frame: 
@frame_title: 
@Varargs: 
@Returns: 


<!-- ##### FUNCTION gimp_radio_group_new2 ##### -->
<para>

The @va_list describing the #GtkRadioButton's has the following format:

<informaltable pgwide=1 frame="none" role="struct">
<tgroup cols="2"><colspec colwidth="4*"><colspec colwidth="8*">
<tbody>

<row>
<entry>#gchar *label,</entry>
<entry>The radio button's label.</entry>
</row>

<row>
<entry>#gpointer user_data,</entry>
<entry>The radio button's @user_data which will be set with
gtk_object_set_user_data().</entry>
</row>

<row>
<entry>#GtkWidget **widget_ptr,</entry>
<entry>A pointer to store the created radio button in.</entry>
</row>

</tbody></tgroup></informaltable>

</para>

@in_frame: 
@frame_title: 
@radio_button_callback: 
@radio_button_callback_data: 
@initial: 
@Varargs: 
@Returns: 
<!-- # Unused Parameters # -->
@data: 


<!-- ##### FUNCTION gimp_radio_group_set_active ##### -->
<para>

</para>

@radio_button: 
@item_data: 


<!-- ##### FUNCTION gimp_spin_button_new ##### -->
<para>

</para>

@adjustment: 
@value: 
@lower: 
@upper: 
@step_increment: 
@page_increment: 
@page_size: 
@climb_rate: 
@digits: 
@Returns: 


<!-- ##### MACRO GIMP_SCALE_ENTRY_LABEL ##### -->
<para>
Returns the scale_entry's #GtkLabel.
</para>

@adj: The #GtkAdjustment returned by gimp_scale_entry_new().


<!-- ##### MACRO GIMP_SCALE_ENTRY_SCALE ##### -->
<para>
Returns the scale_entry's #GtkHScale.
</para>

@adj: The #GtkAdjustment returned by gimp_scale_entry_new().


<!-- ##### MACRO GIMP_SCALE_ENTRY_SCALE_ADJ ##### -->
<para>
Returns the #GtkAdjustment of the scale_entry's #GtkHScale.
</para>

@adj: The #GtkAdjustment returned by gimp_scale_entry_new().


<!-- ##### MACRO GIMP_SCALE_ENTRY_SPINBUTTON ##### -->
<para>
Returns the scale_entry's #GtkSpinButton.
</para>

@adj: The #GtkAdjustment returned by gimp_scale_entry_new().


<!-- ##### MACRO GIMP_SCALE_ENTRY_SPINBUTTON_ADJ ##### -->
<para>
Returns the #GtkAdjustment of the scale_entry's #GtkSpinButton.
</para>

@adj: The #GtkAdjustment returned by gimp_scale_entry_new().


<!-- ##### FUNCTION gimp_scale_entry_new ##### -->
<para>

</para>

@table: 
@column: 
@row: 
@text: 
@scale_width: 
@spinbutton_width: 
@value: 
@lower: 
@upper: 
@step_increment: 
@page_increment: 
@digits: 
@constrain: 
@unconstrained_lower: 
@unconstrained_upper: 
@tooltip: 
@help_data: 
@Returns: 
<!-- # Unused Parameters # -->
@scale_usize: 
@spinbutton_usize: 


<!-- ##### MACRO GIMP_RANDOM_SEED_SPINBUTTON ##### -->
<para>
Returns the random_seed's #GtkSpinButton.
</para>

@hbox: The #GtkHBox returned by gimp_random_seed_new().


<!-- ##### MACRO GIMP_RANDOM_SEED_SPINBUTTON_ADJ ##### -->
<para>
Returns the #GtkAdjustment of the random_seed's #GtkSpinButton.
</para>

@hbox: The #GtkHBox returned by gimp_random_seed_new().


<!-- ##### MACRO GIMP_RANDOM_SEED_TOGGLEBUTTON ##### -->
<para>
Returns the random_seed's #GtkToggleButton.
</para>

@hbox: The #GtkHBox returned by gimp_random_seed_new().


<!-- ##### FUNCTION gimp_random_seed_new ##### -->
<para>

</para>

@seed: 
@use_time: 
@time_true: 
@time_false: 
@Returns: 


<!-- ##### MACRO GIMP_COORDINATES_CHAINBUTTON ##### -->
<para>
Returns the #GimpChainButton which is attached to the #GimpSizeEntry.
</para>

@sizeentry: The #GimpSizeEntry returned by gimp_coordinates_new().


<!-- ##### FUNCTION gimp_coordinates_new ##### -->
<para>

</para>

@unit: 
@unit_format: 
@menu_show_pixels: 
@menu_show_percent: 
@spinbutton_width: 
@update_policy: 
@chainbutton_active: 
@chain_constrains_ratio: 
@xlabel: 
@x: 
@xres: 
@lower_boundary_x: 
@upper_boundary_x: 
@xsize_0: 
@xsize_100: 
@ylabel: 
@y: 
@yres: 
@lower_boundary_y: 
@upper_boundary_y: 
@ysize_0: 
@ysize_100: 
@Returns: 
<!-- # Unused Parameters # -->
@spinbutton_usize: 


<!-- ##### MACRO GIMP_MEM_SIZE_ENTRY_SPINBUTTON ##### -->
<para>

</para>

@memsize: 


<!-- ##### MACRO GIMP_MEM_SIZE_ENTRY_SPINBUTTON_ADJ ##### -->
<para>

</para>

@memsize: 


<!-- ##### MACRO GIMP_MEM_SIZE_ENTRY_OPTIONMENU ##### -->
<para>

</para>

@memsize: 


<!-- ##### FUNCTION gimp_mem_size_entry_new ##### -->
<para>

</para>

@adjustment: 
@Returns: 


<!-- ##### FUNCTION gimp_pixmap_button_new ##### -->
<para>

</para>

@xpm_data: 
@text: 
@Returns: 


<!-- ##### FUNCTION gimp_toggle_button_sensitive_update ##### -->
<para>

</para>

@toggle_button: 


<!-- ##### FUNCTION gimp_toggle_button_update ##### -->
<para>

</para>

@widget: 
@data: 


<!-- ##### FUNCTION gimp_radio_button_update ##### -->
<para>

</para>

@widget: 
@data: 


<!-- ##### FUNCTION gimp_menu_item_update ##### -->
<para>

</para>

@widget: 
@data: 


<!-- ##### FUNCTION gimp_int_adjustment_update ##### -->
<para>

</para>

@adjustment: 
@data: 


<!-- ##### FUNCTION gimp_uint_adjustment_update ##### -->
<para>

</para>

@adjustment: 
@data: 


<!-- ##### FUNCTION gimp_float_adjustment_update ##### -->
<para>

</para>

@adjustment: 
@data: 


<!-- ##### FUNCTION gimp_double_adjustment_update ##### -->
<para>

</para>

@adjustment: 
@data: 


<!-- ##### FUNCTION gimp_unit_menu_update ##### -->
<para>

</para>

@widget: 
@data: 


<!-- ##### FUNCTION gimp_table_attach_aligned ##### -->
<para>

</para>

@table: 
@column: 
@row: 
@label_text: 
@xalign: 
@yalign: 
@widget: 
@colspan: 
@left_align: 
@Returns: 


