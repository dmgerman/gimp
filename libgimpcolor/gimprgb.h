begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* LIBGIMP - The GIMP Library  * Copyright (C) 1995-1997 Peter Mattis and Spencer Kimball  *  * This library is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public  * License as published by the Free Software Foundation; either  * version 2 of the License, or (at your option) any later version.  *  * This library is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  * Library General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the  * Free Software Foundation, Inc., 59 Temple Place - Suite 330,  * Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__GIMP_RGB_H__
end_ifndef

begin_define
DECL|macro|__GIMP_RGB_H__
define|#
directive|define
name|__GIMP_RGB_H__
end_define

begin_macro
name|G_BEGIN_DECLS
end_macro

begin_comment
comment|/* For information look into the C source or the html documentation */
end_comment

begin_comment
comment|/*  RGB and RGBA color types and operations taken from LibGCK  */
end_comment

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon2773daca0103
block|{
DECL|enumerator|GIMP_RGB_COMPOSITE_NONE
name|GIMP_RGB_COMPOSITE_NONE
init|=
literal|0
block|,
DECL|enumerator|GIMP_RGB_COMPOSITE_NORMAL
name|GIMP_RGB_COMPOSITE_NORMAL
block|,
DECL|enumerator|GIMP_RGB_COMPOSITE_BEHIND
name|GIMP_RGB_COMPOSITE_BEHIND
DECL|typedef|GimpRGBCompositeMode
block|}
name|GimpRGBCompositeMode
typedef|;
end_typedef

begin_function_decl
name|void
name|gimp_rgb_set
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
name|gdouble
name|red
parameter_list|,
name|gdouble
name|green
parameter_list|,
name|gdouble
name|blue
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgb_set_alpha
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
name|gdouble
name|alpha
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgb_set_uchar
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
name|guchar
name|red
parameter_list|,
name|guchar
name|green
parameter_list|,
name|guchar
name|blue
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgb_get_uchar
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
name|guchar
modifier|*
name|red
parameter_list|,
name|guchar
modifier|*
name|green
parameter_list|,
name|guchar
modifier|*
name|blue
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_rgb_parse_name
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
specifier|const
name|gchar
modifier|*
name|name
parameter_list|,
name|gint
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_rgb_parse_hex
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
specifier|const
name|gchar
modifier|*
name|hex
parameter_list|,
name|gint
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_rgb_parse_css
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
specifier|const
name|gchar
modifier|*
name|css
parameter_list|,
name|gint
name|len
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgb_add
parameter_list|(
name|GimpRGB
modifier|*
name|rgb1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgb2
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgb_subtract
parameter_list|(
name|GimpRGB
modifier|*
name|rgb1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgb2
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgb_multiply
parameter_list|(
name|GimpRGB
modifier|*
name|rgb1
parameter_list|,
name|gdouble
name|factor
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gdouble
name|gimp_rgb_distance
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgb2
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gdouble
name|gimp_rgb_max
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gdouble
name|gimp_rgb_min
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgb_clamp
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgb_gamma
parameter_list|(
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
name|gdouble
name|gamma
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gdouble
name|gimp_rgb_intensity
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|guchar
name|gimp_rgb_intensity_uchar
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgb
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgb_composite
parameter_list|(
name|GimpRGB
modifier|*
name|color1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|color2
parameter_list|,
name|GimpRGBCompositeMode
name|mode
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgba_set
parameter_list|(
name|GimpRGB
modifier|*
name|rgba
parameter_list|,
name|gdouble
name|red
parameter_list|,
name|gdouble
name|green
parameter_list|,
name|gdouble
name|blue
parameter_list|,
name|gdouble
name|alpha
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgba_set_uchar
parameter_list|(
name|GimpRGB
modifier|*
name|rgba
parameter_list|,
name|guchar
name|red
parameter_list|,
name|guchar
name|green
parameter_list|,
name|guchar
name|blue
parameter_list|,
name|guchar
name|alpha
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgba_get_uchar
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgba
parameter_list|,
name|guchar
modifier|*
name|red
parameter_list|,
name|guchar
modifier|*
name|green
parameter_list|,
name|guchar
modifier|*
name|blue
parameter_list|,
name|guchar
modifier|*
name|alpha
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgba_add
parameter_list|(
name|GimpRGB
modifier|*
name|rgba1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgba2
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgba_subtract
parameter_list|(
name|GimpRGB
modifier|*
name|rgba1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgba2
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_rgba_multiply
parameter_list|(
name|GimpRGB
modifier|*
name|rgba
parameter_list|,
name|gdouble
name|factor
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gdouble
name|gimp_rgba_distance
parameter_list|(
specifier|const
name|GimpRGB
modifier|*
name|rgba1
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgba2
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  Map RGB to intensity  */
end_comment

begin_define
DECL|macro|GIMP_RGB_INTENSITY_RED
define|#
directive|define
name|GIMP_RGB_INTENSITY_RED
value|0.30
end_define

begin_define
DECL|macro|GIMP_RGB_INTENSITY_GREEN
define|#
directive|define
name|GIMP_RGB_INTENSITY_GREEN
value|0.59
end_define

begin_define
DECL|macro|GIMP_RGB_INTENSITY_BLUE
define|#
directive|define
name|GIMP_RGB_INTENSITY_BLUE
value|0.11
end_define

begin_define
DECL|macro|GIMP_RGB_INTENSITY (r,g,b)
define|#
directive|define
name|GIMP_RGB_INTENSITY
parameter_list|(
name|r
parameter_list|,
name|g
parameter_list|,
name|b
parameter_list|)
value|((r) * GIMP_RGB_INTENSITY_RED   + \ 			           (g) * GIMP_RGB_INTENSITY_GREEN + \ 			           (b) * GIMP_RGB_INTENSITY_BLUE)
end_define

begin_macro
name|G_END_DECLS
end_macro

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __GIMP_RGB_H__ */
end_comment

end_unit

