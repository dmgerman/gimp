begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* GIMP - The GNU Image Manipulation Program  * Copyright (C) 1995 Spencer Kimball and Peter Mattis  *  * gimpoperationlayermode-blend.h  * Copyright (C) 2017 Michael Natterer<mitch@gimp.org>  *               2017 Ãyvind KolÃ¥s<pippin@gimp.org>  *               2017 Ell  *  * This program is free software: you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 3 of the License, or  * (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; withcomp even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program.  If not, see<https://www.gnu.org/licenses/>.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__GIMP_OPERATION_LAYER_MODE_BLEND_H__
end_ifndef

begin_define
DECL|macro|__GIMP_OPERATION_LAYER_MODE_BLEND_H__
define|#
directive|define
name|__GIMP_OPERATION_LAYER_MODE_BLEND_H__
end_define

begin_comment
comment|/*  nonsubtractive blend functions  */
end_comment

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_addition
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_burn
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_darken_only
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_difference
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_divide
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_dodge
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_exclusion
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_grain_extract
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_grain_merge
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_hard_mix
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_hardlight
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_hsl_color
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_hsv_hue
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_hsv_saturation
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_hsv_value
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_lch_chroma
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_lch_color
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_lch_hue
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_lch_lightness
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_lighten_only
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_linear_burn
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_linear_light
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_luma_darken_only
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_luma_lighten_only
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_luminance
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_multiply
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_overlay
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_pin_light
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_screen
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_softlight
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_subtract
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_vivid_light
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  subtractive blend functions  */
end_comment

begin_function_decl
name|void
name|gimp_operation_layer_mode_blend_color_erase
parameter_list|(
specifier|const
name|gfloat
modifier|*
name|in
parameter_list|,
specifier|const
name|gfloat
modifier|*
name|layer
parameter_list|,
name|gfloat
modifier|*
name|comp
parameter_list|,
name|gint
name|samples
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __GIMP_OPERATION_LAYER_MODE_BLEND_H__ */
end_comment

end_unit

