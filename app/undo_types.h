begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* The GIMP -- an image manipulation program  * Copyright (C) 1995 Spencer Kimball and Peter Mattis  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__UNDO_TYPES_H__
end_ifndef

begin_define
DECL|macro|__UNDO_TYPES_H__
define|#
directive|define
name|__UNDO_TYPES_H__
end_define

begin_comment
comment|/*  Undo types which actually do something, unlike the ones in  *  core/core-types.h, which are only for pushing groups  */
end_comment

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon275a98170103
block|{
DECL|enumerator|IMAGE_UNDO
name|IMAGE_UNDO
init|=
name|LAST_UNDO_GROUP
operator|+
literal|1
block|,
DECL|enumerator|IMAGE_MOD_UNDO
name|IMAGE_MOD_UNDO
block|,
DECL|enumerator|IMAGE_TYPE_UNDO
name|IMAGE_TYPE_UNDO
block|,
DECL|enumerator|IMAGE_SIZE_UNDO
name|IMAGE_SIZE_UNDO
block|,
DECL|enumerator|IMAGE_RESOLUTION_UNDO
name|IMAGE_RESOLUTION_UNDO
block|,
DECL|enumerator|IMAGE_MASK_UNDO
name|IMAGE_MASK_UNDO
block|,
DECL|enumerator|IMAGE_QMASK_UNDO
name|IMAGE_QMASK_UNDO
block|,
DECL|enumerator|IMAGE_GUIDE_UNDO
name|IMAGE_GUIDE_UNDO
block|,
DECL|enumerator|ITEM_RENAME_UNDO
name|ITEM_RENAME_UNDO
block|,
DECL|enumerator|LAYER_ADD_UNDO
name|LAYER_ADD_UNDO
block|,
DECL|enumerator|LAYER_REMOVE_UNDO
name|LAYER_REMOVE_UNDO
block|,
DECL|enumerator|LAYER_MOD_UNDO
name|LAYER_MOD_UNDO
block|,
DECL|enumerator|LAYER_MASK_ADD_UNDO
name|LAYER_MASK_ADD_UNDO
block|,
DECL|enumerator|LAYER_MASK_REMOVE_UNDO
name|LAYER_MASK_REMOVE_UNDO
block|,
DECL|enumerator|LAYER_REPOSITION_UNDO
name|LAYER_REPOSITION_UNDO
block|,
DECL|enumerator|LAYER_DISPLACE_UNDO
name|LAYER_DISPLACE_UNDO
block|,
DECL|enumerator|CHANNEL_ADD_UNDO
name|CHANNEL_ADD_UNDO
block|,
DECL|enumerator|CHANNEL_REMOVE_UNDO
name|CHANNEL_REMOVE_UNDO
block|,
DECL|enumerator|CHANNEL_MOD_UNDO
name|CHANNEL_MOD_UNDO
block|,
DECL|enumerator|CHANNEL_REPOSITION_UNDO
name|CHANNEL_REPOSITION_UNDO
block|,
DECL|enumerator|VECTORS_ADD_UNDO
name|VECTORS_ADD_UNDO
block|,
DECL|enumerator|VECTORS_REMOVE_UNDO
name|VECTORS_REMOVE_UNDO
block|,
DECL|enumerator|VECTORS_MOD_UNDO
name|VECTORS_MOD_UNDO
block|,
DECL|enumerator|VECTORS_REPOSITION_UNDO
name|VECTORS_REPOSITION_UNDO
block|,
DECL|enumerator|FS_TO_LAYER_UNDO
name|FS_TO_LAYER_UNDO
block|,
DECL|enumerator|FS_RIGOR_UNDO
name|FS_RIGOR_UNDO
block|,
DECL|enumerator|FS_RELAX_UNDO
name|FS_RELAX_UNDO
block|,
DECL|enumerator|TRANSFORM_UNDO
name|TRANSFORM_UNDO
block|,
DECL|enumerator|PAINT_UNDO
name|PAINT_UNDO
block|,
DECL|enumerator|PARASITE_ATTACH_UNDO
name|PARASITE_ATTACH_UNDO
block|,
DECL|enumerator|PARASITE_REMOVE_UNDO
name|PARASITE_REMOVE_UNDO
block|,
DECL|enumerator|CANT_UNDO
name|CANT_UNDO
DECL|typedef|UndoImplType
block|}
name|UndoImplType
typedef|;
end_typedef

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __UNDO_TYPES_H__ */
end_comment

end_unit

