begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* The GIMP -- an image manipulation program  * Copyright (C) 1995 Spencer Kimball and Peter Mattis  *  * gimpui.h  * Copyright (C) 1999 Michael Natterer<mitch@gimp.org>  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__GIMP_UI_H__
end_ifndef

begin_define
DECL|macro|__GIMP_UI_H__
define|#
directive|define
name|__GIMP_UI_H__
end_define

begin_include
include|#
directive|include
file|<gtk/gtk.h>
end_include

begin_include
include|#
directive|include
file|"gimphelp.h"
end_include

begin_include
include|#
directive|include
file|"libgimp/gimpunit.h"
end_include

begin_comment
comment|/*  typedefs  */
end_comment

begin_typedef
DECL|typedef|GimpQueryFunc
typedef|typedef
name|void
function_decl|(
modifier|*
name|GimpQueryFunc
function_decl|)
parameter_list|(
name|GtkWidget
modifier|*
parameter_list|,
name|gpointer
parameter_list|,
name|gpointer
parameter_list|)
function_decl|;
end_typedef

begin_comment
comment|/*  widget constructors  */
end_comment

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_dialog_new
parameter_list|(
specifier|const
name|gchar
modifier|*
name|title
parameter_list|,
specifier|const
name|gchar
modifier|*
name|wmclass_name
parameter_list|,
name|GimpHelpFunc
name|help_func
parameter_list|,
name|gchar
modifier|*
name|help_data
parameter_list|,
name|GtkWindowPosition
name|position
parameter_list|,
name|gint
name|allow_shrink
parameter_list|,
name|gint
name|allow_grow
parameter_list|,
name|gint
name|auto_shrink
parameter_list|,
comment|/* specify action area buttons 					      * as va_list: 					      *  gchar          *label, 					      *  GtkSignalFunc   callback, 					      *  gpointer        data, 					      *  GtkWidget     **widget_ptr, 					      *  gboolean        default_action, 					      *  gboolean        connect_delete, 					      */
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_dialog_newv
parameter_list|(
specifier|const
name|gchar
modifier|*
name|title
parameter_list|,
specifier|const
name|gchar
modifier|*
name|wmclass_name
parameter_list|,
name|GimpHelpFunc
name|help_func
parameter_list|,
name|gchar
modifier|*
name|help_data
parameter_list|,
name|GtkWindowPosition
name|position
parameter_list|,
name|gint
name|allow_shrink
parameter_list|,
name|gint
name|allow_grow
parameter_list|,
name|gint
name|auto_shrink
parameter_list|,
name|va_list
name|args
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_dialog_create_action_area
parameter_list|(
name|GtkDialog
modifier|*
name|dialog
parameter_list|,
comment|/* specify action area buttons 					      * as va_list: 					      *  gchar          *label, 					      *  GtkSignalFunc   callback, 					      *  gpointer        data, 					      *  GtkWidget     **widget_ptr, 					      *  gboolean        default_action, 					      *  gboolean        connect_delete, 					      */
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_dialog_create_action_areav
parameter_list|(
name|GtkDialog
modifier|*
name|dialog
parameter_list|,
name|va_list
name|args
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_option_menu_new
parameter_list|(
name|GtkSignalFunc
name|menu_item_callback
parameter_list|,
name|gpointer
name|initial
parameter_list|,
comment|/* user_data */
comment|/* specify menu items as va_list: 				   *  gchar          *label, 				   *  gpointer        data, 				   *  gpointer        user_data, 				   */
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_radio_group_new
parameter_list|(
name|gboolean
name|in_frame
parameter_list|,
name|gchar
modifier|*
name|frame_title
parameter_list|,
comment|/* specify radio buttons as va_list: 				   *  gchar          *label, 				   *  GtkSignalFunc   callback, 				   *  gpointer        data, 				   *  gpointer        user_data, 				   *  GtkWidget     **widget_ptr, 				   *  gboolean        active, 				   */
modifier|...
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_spin_button_new
parameter_list|(
comment|/* return value: */
name|GtkObject
modifier|*
modifier|*
name|adjustment
parameter_list|,
name|gfloat
name|value
parameter_list|,
name|gfloat
name|lower
parameter_list|,
name|gfloat
name|upper
parameter_list|,
name|gfloat
name|step_increment
parameter_list|,
name|gfloat
name|page_increment
parameter_list|,
name|gfloat
name|page_size
parameter_list|,
name|gfloat
name|climb_rate
parameter_list|,
name|guint
name|digits
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  some simple query dialogs  *  if object != NULL then the query boxes will connect their cancel callback  *  to the provided signal of this object  *  *  it's the caller's job to show the returned widgets  */
end_comment

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_query_string_box
parameter_list|(
name|gchar
modifier|*
name|title
parameter_list|,
name|GimpHelpFunc
name|help_func
parameter_list|,
name|gchar
modifier|*
name|help_data
parameter_list|,
name|gchar
modifier|*
name|message
parameter_list|,
name|gchar
modifier|*
name|initial
parameter_list|,
name|GtkObject
modifier|*
name|object
parameter_list|,
name|gchar
modifier|*
name|signal
parameter_list|,
name|GimpQueryFunc
name|callback
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_query_int_box
parameter_list|(
name|gchar
modifier|*
name|title
parameter_list|,
name|GimpHelpFunc
name|help_func
parameter_list|,
name|gchar
modifier|*
name|help_data
parameter_list|,
name|char
modifier|*
name|message
parameter_list|,
name|gint
name|initial
parameter_list|,
name|gint
name|lower
parameter_list|,
name|gint
name|upper
parameter_list|,
name|GtkObject
modifier|*
name|object
parameter_list|,
name|gchar
modifier|*
name|signal
parameter_list|,
name|GimpQueryFunc
name|callback
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_query_double_box
parameter_list|(
name|gchar
modifier|*
name|title
parameter_list|,
name|GimpHelpFunc
name|help_func
parameter_list|,
name|gchar
modifier|*
name|help_data
parameter_list|,
name|gchar
modifier|*
name|message
parameter_list|,
name|gdouble
name|initial
parameter_list|,
name|gdouble
name|lower
parameter_list|,
name|gdouble
name|upper
parameter_list|,
name|gint
name|digits
parameter_list|,
name|GtkObject
modifier|*
name|object
parameter_list|,
name|gchar
modifier|*
name|signal
parameter_list|,
name|GimpQueryFunc
name|callback
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_query_size_box
parameter_list|(
name|gchar
modifier|*
name|title
parameter_list|,
name|GimpHelpFunc
name|help_func
parameter_list|,
name|gchar
modifier|*
name|help_data
parameter_list|,
name|gchar
modifier|*
name|message
parameter_list|,
name|gdouble
name|initial
parameter_list|,
name|gdouble
name|lower
parameter_list|,
name|gdouble
name|upper
parameter_list|,
name|gint
name|digits
parameter_list|,
name|GUnit
name|unit
parameter_list|,
name|gdouble
name|resolution
parameter_list|,
name|gboolean
name|dot_for_dot
parameter_list|,
name|GtkObject
modifier|*
name|object
parameter_list|,
name|gchar
modifier|*
name|signal
parameter_list|,
name|GimpQueryFunc
name|callback
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  a simple message box  */
end_comment

begin_function_decl
name|GtkWidget
modifier|*
name|gimp_message_box
parameter_list|(
name|gchar
modifier|*
name|message
parameter_list|,
name|GtkCallback
name|callback
parameter_list|,
name|gpointer
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  helper functions  */
end_comment

begin_comment
comment|/*  add aligned label& widget to a two-column table  */
end_comment

begin_function_decl
name|void
name|gimp_table_attach_aligned
parameter_list|(
name|GtkTable
modifier|*
name|table
parameter_list|,
name|gint
name|row
parameter_list|,
name|gchar
modifier|*
name|text
parameter_list|,
name|gfloat
name|xalign
parameter_list|,
name|gfloat
name|yalign
parameter_list|,
name|GtkWidget
modifier|*
name|widget
parameter_list|,
name|gboolean
name|left_adjust
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __GIMP_UI_H__ */
end_comment

end_unit

