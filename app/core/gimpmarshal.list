# see glib-genmarshal(1) for a detailed description of the file format,
# possible parameter types are:
#   VOID        indicates   no   return   type,  or  no  extra
#               parameters. if VOID is used as  the  parameter
#               list, no additional parameters may be present.
#   BOOLEAN     for boolean types (gboolean)
#   CHAR        for signed char types (gchar)
#   UCHAR       for unsigned char types (guchar)
#   INT         for signed integer types (gint)
#   UINT        for unsigned integer types (guint)
#   LONG        for signed long integer types (glong)
#   ULONG       for unsigned long integer types (gulong)
#   ENUM        for enumeration types (gint)
#   FLAGS       for flag enumeration types (guint)
#   FLOAT       for single-precision float types (gfloat)
#   DOUBLE      for double-precision float types (gdouble)
#   STRING      for string types (gchar*)
#   BOXED       for boxed (anonymous but reference counted) types (GBoxed*)
#   POINTER     for anonymous pointer types (gpointer)
#   PARAM       for GParamSpec or derived types  (GParamSpec*)
#   OBJECT      for GObject or derived types (GObject*)
#   NONE        deprecated alias for VOID
#   BOOL        deprecated alias for BOOLEAN

BOOLEAN: OBJECT
BOOLEAN: POINTER
BOOLEAN: VOID

INT: OBJECT
INT: POINTER

OBJECT: BOOLEAN
OBJECT: INT
OBJECT: POINTER

POINTER: INT
POINTER: INT, INT
POINTER: OBJECT, INT
POINTER: POINTER
POINTER: POINTER, INT
POINTER: POINTER, INT, INT
POINTER: VOID

VOID: BOXED
VOID: DOUBLE
VOID: ENUM
VOID: INT
VOID: INT, BOOLEAN, INT, OBJECT
VOID: INT, INT
VOID: INT, INT, INT
VOID: INT, INT, INT, INT
VOID: INT, OBJECT
VOID: INT, POINTER
VOID: INT, POINTER, POINTER
VOID: OBJECT
VOID: OBJECT, INT
VOID: OBJECT, INT, POINTER
VOID: OBJECT, POINTER
VOID: POINTER
VOID: POINTER, INT
VOID: POINTER, INT, OBJECT
VOID: POINTER, OBJECT
VOID: POINTER, POINTER
VOID: POINTER, UINT, INT, OBJECT
VOID: UINT
VOID: VOID
