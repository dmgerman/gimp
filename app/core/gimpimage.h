begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* The GIMP -- an image manipulation program  * Copyright (C) 1995 Spencer Kimball and Peter Mattisbvf  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__GIMP_IMAGE_H__
end_ifndef

begin_define
DECL|macro|__GIMP_IMAGE_H__
define|#
directive|define
name|__GIMP_IMAGE_H__
end_define

begin_include
include|#
directive|include
file|"gimpviewable.h"
end_include

begin_define
DECL|macro|GIMP_IMAGE_TYPE_IS_RGB (t)
define|#
directive|define
name|GIMP_IMAGE_TYPE_IS_RGB
parameter_list|(
name|t
parameter_list|)
value|((t) == GIMP_RGB_IMAGE ||         \ 				            (t) == GIMP_RGBA_IMAGE)
end_define

begin_define
DECL|macro|GIMP_IMAGE_TYPE_IS_GRAY (t)
define|#
directive|define
name|GIMP_IMAGE_TYPE_IS_GRAY
parameter_list|(
name|t
parameter_list|)
value|((t) == GIMP_GRAY_IMAGE ||        \ 				            (t) == GIMP_GRAYA_IMAGE)
end_define

begin_define
DECL|macro|GIMP_IMAGE_TYPE_IS_INDEXED (t)
define|#
directive|define
name|GIMP_IMAGE_TYPE_IS_INDEXED
parameter_list|(
name|t
parameter_list|)
value|((t) == GIMP_INDEXED_IMAGE ||     \ 				            (t) == GIMP_INDEXEDA_IMAGE)
end_define

begin_define
DECL|macro|GIMP_IMAGE_TYPE_HAS_ALPHA (t)
define|#
directive|define
name|GIMP_IMAGE_TYPE_HAS_ALPHA
parameter_list|(
name|t
parameter_list|)
value|((t) == GIMP_RGBA_IMAGE  ||       \ 				            (t) == GIMP_GRAYA_IMAGE ||       \ 				            (t) == GIMP_INDEXEDA_IMAGE)
end_define

begin_define
DECL|macro|GIMP_IMAGE_TYPE_WITH_ALPHA (t)
define|#
directive|define
name|GIMP_IMAGE_TYPE_WITH_ALPHA
parameter_list|(
name|t
parameter_list|)
value|(((t) == GIMP_RGB_IMAGE ||         \                                             (t) == GIMP_RGBA_IMAGE) ?        \                                            GIMP_RGBA_IMAGE :                 \                                            ((t) == GIMP_GRAY_IMAGE ||        \                                             (t) == GIMP_GRAYA_IMAGE) ?       \                                            GIMP_GRAYA_IMAGE :                \                                            ((t) == GIMP_INDEXED_IMAGE ||     \                                             (t) == GIMP_INDEXEDA_IMAGE) ?    \                                            GIMP_INDEXEDA_IMAGE : -1)
end_define

begin_define
DECL|macro|GIMP_IMAGE_TYPE_WITHOUT_ALPHA (t)
define|#
directive|define
name|GIMP_IMAGE_TYPE_WITHOUT_ALPHA
parameter_list|(
name|t
parameter_list|)
value|(((t) == GIMP_RGB_IMAGE ||         \                                             (t) == GIMP_RGBA_IMAGE) ?        \                                            GIMP_RGB_IMAGE :                  \                                            ((t) == GIMP_GRAY_IMAGE ||        \                                             (t) == GIMP_GRAYA_IMAGE) ?       \                                            GIMP_GRAY_IMAGE :                 \                                            ((t) == GIMP_INDEXED_IMAGE ||     \                                             (t) == GIMP_INDEXEDA_IMAGE) ?    \                                            GIMP_INDEXED_IMAGE : -1)
end_define

begin_define
DECL|macro|GIMP_IMAGE_TYPE_BYTES (t)
define|#
directive|define
name|GIMP_IMAGE_TYPE_BYTES
parameter_list|(
name|t
parameter_list|)
value|((t) == GIMP_RGBA_IMAGE     ? 4 : \                                             (t) == GIMP_RGB_IMAGE      ? 3 : \                                             (t) == GIMP_GRAYA_IMAGE    ? 2 : \                                             (t) == GIMP_GRAY_IMAGE     ? 1 : \                                             (t) == GIMP_INDEXEDA_IMAGE ? 2 : \                                             (t) == GIMP_INDEXED_IMAGE  ? 1 : -1)
end_define

begin_define
DECL|macro|GIMP_IMAGE_TYPE_BASE_TYPE (t)
define|#
directive|define
name|GIMP_IMAGE_TYPE_BASE_TYPE
parameter_list|(
name|t
parameter_list|)
value|(((t) == GIMP_RGB_IMAGE ||         \                                             (t) == GIMP_RGBA_IMAGE) ?        \                                            GIMP_RGB :                        \                                            ((t) == GIMP_GRAY_IMAGE ||        \                                             (t) == GIMP_GRAYA_IMAGE) ?       \                                            GIMP_GRAY :                       \                                            ((t) == GIMP_INDEXED_IMAGE ||     \                                             (t) == GIMP_INDEXEDA_IMAGE) ?    \                                            GIMP_INDEXED : -1)
end_define

begin_define
DECL|macro|GIMP_IMAGE_TYPE_FROM_BASE_TYPE (b)
define|#
directive|define
name|GIMP_IMAGE_TYPE_FROM_BASE_TYPE
parameter_list|(
name|b
parameter_list|)
value|((b) == GIMP_RGB ?                \                                             GIMP_RGB_IMAGE :                 \                                             (b) == GIMP_GRAY ?               \                                             GIMP_GRAY_IMAGE :                \                                             (b) == GIMP_INDEXED ?            \                                             GIMP_INDEXED_IMAGE : -1)
end_define

begin_typedef
DECL|typedef|GimpImageFlushAccumulator
typedef|typedef
name|struct
name|_GimpImageFlushAccumulator
name|GimpImageFlushAccumulator
typedef|;
end_typedef

begin_struct
DECL|struct|_GimpImageFlushAccumulator
struct|struct
name|_GimpImageFlushAccumulator
block|{
DECL|member|alpha_changed
name|gboolean
name|alpha_changed
decl_stmt|;
DECL|member|mask_changed
name|gboolean
name|mask_changed
decl_stmt|;
block|}
struct|;
end_struct

begin_define
DECL|macro|GIMP_TYPE_IMAGE
define|#
directive|define
name|GIMP_TYPE_IMAGE
value|(gimp_image_get_type ())
end_define

begin_define
DECL|macro|GIMP_IMAGE (obj)
define|#
directive|define
name|GIMP_IMAGE
parameter_list|(
name|obj
parameter_list|)
value|(G_TYPE_CHECK_INSTANCE_CAST ((obj), GIMP_TYPE_IMAGE, GimpImage))
end_define

begin_define
DECL|macro|GIMP_IMAGE_CLASS (klass)
define|#
directive|define
name|GIMP_IMAGE_CLASS
parameter_list|(
name|klass
parameter_list|)
value|(G_TYPE_CHECK_CLASS_CAST ((klass), GIMP_TYPE_IMAGE, GimpImageClass))
end_define

begin_define
DECL|macro|GIMP_IS_IMAGE (obj)
define|#
directive|define
name|GIMP_IS_IMAGE
parameter_list|(
name|obj
parameter_list|)
value|(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GIMP_TYPE_IMAGE))
end_define

begin_define
DECL|macro|GIMP_IS_IMAGE_CLASS (klass)
define|#
directive|define
name|GIMP_IS_IMAGE_CLASS
parameter_list|(
name|klass
parameter_list|)
value|(G_TYPE_CHECK_CLASS_TYPE ((klass), GIMP_TYPE_IMAGE))
end_define

begin_define
DECL|macro|GIMP_IMAGE_GET_CLASS (obj)
define|#
directive|define
name|GIMP_IMAGE_GET_CLASS
parameter_list|(
name|obj
parameter_list|)
value|(G_TYPE_INSTANCE_GET_CLASS ((obj), GIMP_TYPE_IMAGE, GimpImageClass))
end_define

begin_typedef
DECL|typedef|GimpImageClass
typedef|typedef
name|struct
name|_GimpImageClass
name|GimpImageClass
typedef|;
end_typedef

begin_struct
DECL|struct|_GimpImage
struct|struct
name|_GimpImage
block|{
DECL|member|parent_instance
name|GimpViewable
name|parent_instance
decl_stmt|;
DECL|member|gimp
name|Gimp
modifier|*
name|gimp
decl_stmt|;
comment|/*  the GIMP the image belongs to*/
DECL|member|ID
name|gint
name|ID
decl_stmt|;
comment|/*  provides a unique ID         */
DECL|member|save_proc
name|PlugInProcDef
modifier|*
name|save_proc
decl_stmt|;
comment|/*  last PDB save proc used      */
DECL|member|width
DECL|member|height
name|gint
name|width
decl_stmt|,
name|height
decl_stmt|;
comment|/*  width and height attributes  */
DECL|member|xresolution
name|gdouble
name|xresolution
decl_stmt|;
comment|/*  image x-res, in dpi          */
DECL|member|yresolution
name|gdouble
name|yresolution
decl_stmt|;
comment|/*  image y-res, in dpi          */
DECL|member|resolution_unit
name|GimpUnit
name|resolution_unit
decl_stmt|;
comment|/*  resolution unit              */
DECL|member|base_type
name|GimpImageBaseType
name|base_type
decl_stmt|;
comment|/*  base gimp_image type         */
DECL|member|cmap
name|guchar
modifier|*
name|cmap
decl_stmt|;
comment|/*  colormap--for indexed        */
DECL|member|num_cols
name|gint
name|num_cols
decl_stmt|;
comment|/*  number of cols--for indexed  */
DECL|member|dirty
name|gint
name|dirty
decl_stmt|;
comment|/*  dirty flag -- # of ops       */
DECL|member|dirty_time
name|guint
name|dirty_time
decl_stmt|;
comment|/*  time when image became dirty */
DECL|member|undo_freeze_count
name|gint
name|undo_freeze_count
decl_stmt|;
comment|/*  counts the _freeze's         */
DECL|member|instance_count
name|gint
name|instance_count
decl_stmt|;
comment|/*  number of instances          */
DECL|member|disp_count
name|gint
name|disp_count
decl_stmt|;
comment|/*  number of displays           */
DECL|member|tattoo_state
name|GimpTattoo
name|tattoo_state
decl_stmt|;
comment|/*  the next unique tattoo to use*/
DECL|member|shadow
name|TileManager
modifier|*
name|shadow
decl_stmt|;
comment|/*  shadow buffer tiles          */
DECL|member|projection
name|GimpProjection
modifier|*
name|projection
decl_stmt|;
comment|/*  projection layers& channels */
DECL|member|guides
name|GList
modifier|*
name|guides
decl_stmt|;
comment|/*  guides                       */
DECL|member|grid
name|GimpGrid
modifier|*
name|grid
decl_stmt|;
comment|/*  grid                         */
DECL|member|sample_points
name|GList
modifier|*
name|sample_points
decl_stmt|;
comment|/*  color sample points          */
comment|/*  Layer/Channel attributes  */
DECL|member|layers
name|GimpContainer
modifier|*
name|layers
decl_stmt|;
comment|/*  the list of layers           */
DECL|member|channels
name|GimpContainer
modifier|*
name|channels
decl_stmt|;
comment|/*  the list of masks            */
DECL|member|vectors
name|GimpContainer
modifier|*
name|vectors
decl_stmt|;
comment|/*  the list of vectors          */
DECL|member|layer_stack
name|GSList
modifier|*
name|layer_stack
decl_stmt|;
comment|/*  the layers in MRU order      */
DECL|member|layer_update_handler
name|GQuark
name|layer_update_handler
decl_stmt|;
DECL|member|layer_visible_handler
name|GQuark
name|layer_visible_handler
decl_stmt|;
DECL|member|layer_alpha_handler
name|GQuark
name|layer_alpha_handler
decl_stmt|;
DECL|member|channel_update_handler
name|GQuark
name|channel_update_handler
decl_stmt|;
DECL|member|channel_visible_handler
name|GQuark
name|channel_visible_handler
decl_stmt|;
DECL|member|channel_name_changed_handler
name|GQuark
name|channel_name_changed_handler
decl_stmt|;
DECL|member|channel_color_changed_handler
name|GQuark
name|channel_color_changed_handler
decl_stmt|;
DECL|member|active_layer
name|GimpLayer
modifier|*
name|active_layer
decl_stmt|;
comment|/*  the active layer             */
DECL|member|active_channel
name|GimpChannel
modifier|*
name|active_channel
decl_stmt|;
comment|/*  the active channel           */
DECL|member|active_vectors
name|GimpVectors
modifier|*
name|active_vectors
decl_stmt|;
comment|/*  the active vectors           */
DECL|member|floating_sel
name|GimpLayer
modifier|*
name|floating_sel
decl_stmt|;
comment|/*  the FS layer                 */
DECL|member|selection_mask
name|GimpChannel
modifier|*
name|selection_mask
decl_stmt|;
comment|/*  the selection mask channel   */
DECL|member|parasites
name|GimpParasiteList
modifier|*
name|parasites
decl_stmt|;
comment|/*  Plug-in parasite data        */
DECL|member|visible
name|gboolean
name|visible
index|[
name|MAX_CHANNELS
index|]
decl_stmt|;
comment|/*  visible channels             */
DECL|member|active
name|gboolean
name|active
index|[
name|MAX_CHANNELS
index|]
decl_stmt|;
comment|/*  active channels              */
DECL|member|qmask_state
name|gboolean
name|qmask_state
decl_stmt|;
comment|/*  TRUE if qmask is on          */
DECL|member|qmask_inverted
name|gboolean
name|qmask_inverted
decl_stmt|;
comment|/*  TRUE if qmask is inverted    */
DECL|member|qmask_color
name|GimpRGB
name|qmask_color
decl_stmt|;
comment|/*  rgba triplet of the color    */
comment|/*  Undo apparatus  */
DECL|member|undo_stack
name|GimpUndoStack
modifier|*
name|undo_stack
decl_stmt|;
comment|/*  stack for undo operations    */
DECL|member|redo_stack
name|GimpUndoStack
modifier|*
name|redo_stack
decl_stmt|;
comment|/*  stack for redo operations    */
DECL|member|group_count
name|gint
name|group_count
decl_stmt|;
comment|/*  nested undo groups           */
DECL|member|pushing_undo_group
name|GimpUndoType
name|pushing_undo_group
decl_stmt|;
comment|/*  undo group status flag       */
comment|/*  Composite preview  */
DECL|member|comp_preview
name|TempBuf
modifier|*
name|comp_preview
decl_stmt|;
comment|/*  the composite preview        */
DECL|member|comp_preview_valid
name|gboolean
name|comp_preview_valid
decl_stmt|;
comment|/*  preview valid-1/channel      */
comment|/*  Signal emmision accumulator  */
DECL|member|flush_accum
name|GimpImageFlushAccumulator
name|flush_accum
decl_stmt|;
block|}
struct|;
end_struct

begin_struct
DECL|struct|_GimpImageClass
struct|struct
name|_GimpImageClass
block|{
DECL|member|parent_class
name|GimpViewableClass
name|parent_class
decl_stmt|;
comment|/*  signals  */
DECL|member|mode_changed
name|void
function_decl|(
modifier|*
name|mode_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
DECL|member|alpha_changed
name|void
function_decl|(
modifier|*
name|alpha_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
DECL|member|floating_selection_changed
name|void
function_decl|(
modifier|*
name|floating_selection_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
DECL|member|active_layer_changed
name|void
function_decl|(
modifier|*
name|active_layer_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
DECL|member|active_channel_changed
name|void
function_decl|(
modifier|*
name|active_channel_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
DECL|member|active_vectors_changed
name|void
function_decl|(
modifier|*
name|active_vectors_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
DECL|member|component_visibility_changed
name|void
function_decl|(
modifier|*
name|component_visibility_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannelType
name|channel
parameter_list|)
function_decl|;
DECL|member|component_active_changed
name|void
function_decl|(
modifier|*
name|component_active_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannelType
name|channel
parameter_list|)
function_decl|;
DECL|member|mask_changed
name|void
function_decl|(
modifier|*
name|mask_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
DECL|member|resolution_changed
name|void
function_decl|(
modifier|*
name|resolution_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
DECL|member|unit_changed
name|void
function_decl|(
modifier|*
name|unit_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
DECL|member|qmask_changed
name|void
function_decl|(
modifier|*
name|qmask_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
DECL|member|selection_control
name|void
function_decl|(
modifier|*
name|selection_control
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpSelectionControl
name|control
parameter_list|)
function_decl|;
DECL|member|clean
name|void
function_decl|(
modifier|*
name|clean
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpDirtyMask
name|dirty_mask
parameter_list|)
function_decl|;
DECL|member|dirty
name|void
function_decl|(
modifier|*
name|dirty
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpDirtyMask
name|dirty_mask
parameter_list|)
function_decl|;
DECL|member|update
name|void
function_decl|(
modifier|*
name|update
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|gint
name|x
parameter_list|,
name|gint
name|y
parameter_list|,
name|gint
name|width
parameter_list|,
name|gint
name|height
parameter_list|)
function_decl|;
DECL|member|update_guide
name|void
function_decl|(
modifier|*
name|update_guide
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpGuide
modifier|*
name|guide
parameter_list|)
function_decl|;
DECL|member|update_sample_point
name|void
function_decl|(
modifier|*
name|update_sample_point
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpSamplePoint
modifier|*
name|sample_point
parameter_list|)
function_decl|;
DECL|member|sample_point_added
name|void
function_decl|(
modifier|*
name|sample_point_added
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpSamplePoint
modifier|*
name|sample_point
parameter_list|)
function_decl|;
DECL|member|sample_point_removed
name|void
function_decl|(
modifier|*
name|sample_point_removed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpSamplePoint
modifier|*
name|sample_point
parameter_list|)
function_decl|;
DECL|member|colormap_changed
name|void
function_decl|(
modifier|*
name|colormap_changed
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|gint
name|color_index
parameter_list|)
function_decl|;
DECL|member|undo_event
name|void
function_decl|(
modifier|*
name|undo_event
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpUndoEvent
name|event
parameter_list|,
name|GimpUndo
modifier|*
name|undo
parameter_list|)
function_decl|;
DECL|member|flush
name|void
function_decl|(
modifier|*
name|flush
function_decl|)
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
block|}
struct|;
end_struct

begin_decl_stmt
name|GType
name|gimp_image_get_type
argument_list|(
name|void
argument_list|)
name|G_GNUC_CONST
decl_stmt|;
end_decl_stmt

begin_function_decl
name|GimpImage
modifier|*
name|gimp_image_new
parameter_list|(
name|Gimp
modifier|*
name|gimp
parameter_list|,
name|gint
name|width
parameter_list|,
name|gint
name|height
parameter_list|,
name|GimpImageBaseType
name|base_type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpImageBaseType
name|gimp_image_base_type
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpImageType
name|gimp_image_base_type_with_alpha
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|CombinationMode
name|gimp_image_get_combination_mode
parameter_list|(
name|GimpImageType
name|dest_type
parameter_list|,
name|gint
name|src_bytes
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|gimp_image_get_ID
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpImage
modifier|*
name|gimp_image_get_by_ID
parameter_list|(
name|Gimp
modifier|*
name|gimp
parameter_list|,
name|gint
name|id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_set_uri
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|gchar
modifier|*
name|uri
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
specifier|const
name|gchar
modifier|*
name|gimp_image_get_uri
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_set_filename
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|gchar
modifier|*
name|filename
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gchar
modifier|*
name|gimp_image_get_filename
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_set_save_proc
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|PlugInProcDef
modifier|*
name|proc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|PlugInProcDef
modifier|*
name|gimp_image_get_save_proc
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_set_resolution
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|gdouble
name|xres
parameter_list|,
name|gdouble
name|yres
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_get_resolution
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|gdouble
modifier|*
name|xres
parameter_list|,
name|gdouble
modifier|*
name|yres
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_resolution_changed
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_set_unit
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpUnit
name|unit
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpUnit
name|gimp_image_get_unit
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_unit_changed
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|gimp_image_get_width
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|gimp_image_get_height
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_has_alpha
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_is_empty
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpLayer
modifier|*
name|gimp_image_floating_sel
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_floating_selection_changed
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpChannel
modifier|*
name|gimp_image_get_mask
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_mask_changed
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|gimp_image_get_component_index
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannelType
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_set_component_active
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannelType
name|type
parameter_list|,
name|gboolean
name|active
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_get_component_active
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannelType
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_set_component_visible
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannelType
name|type
parameter_list|,
name|gboolean
name|visible
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_get_component_visible
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannelType
name|type
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_mode_changed
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_alpha_changed
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_update
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|gint
name|x
parameter_list|,
name|gint
name|y
parameter_list|,
name|gint
name|width
parameter_list|,
name|gint
name|height
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_update_guide
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpGuide
modifier|*
name|guide
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_update_sample_point
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpSamplePoint
modifier|*
name|sample_point
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_sample_point_added
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpSamplePoint
modifier|*
name|sample_point
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_sample_point_removed
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpSamplePoint
modifier|*
name|sample_point
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_colormap_changed
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|gint
name|col
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_selection_control
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpSelectionControl
name|control
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_qmask_changed
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  undo  */
end_comment

begin_function_decl
name|gboolean
name|gimp_image_undo_is_enabled
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_undo_enable
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_undo_disable
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_undo_freeze
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_undo_thaw
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_undo_event
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpUndoEvent
name|event
parameter_list|,
name|GimpUndo
modifier|*
name|undo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|gimp_image_dirty
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpDirtyMask
name|dirty_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|gimp_image_clean
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpDirtyMask
name|dirty_mask
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_clean_all
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  flush this image's displays  */
end_comment

begin_function_decl
name|void
name|gimp_image_flush
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  color transforms / utilities  */
end_comment

begin_function_decl
name|void
name|gimp_image_get_foreground
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|GimpDrawable
modifier|*
name|drawable
parameter_list|,
name|GimpContext
modifier|*
name|context
parameter_list|,
name|guchar
modifier|*
name|fg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_get_background
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|GimpDrawable
modifier|*
name|drawable
parameter_list|,
name|GimpContext
modifier|*
name|context
parameter_list|,
name|guchar
modifier|*
name|bg
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_get_color
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|src_gimage
parameter_list|,
name|GimpImageType
name|src_type
parameter_list|,
specifier|const
name|guchar
modifier|*
name|src
parameter_list|,
name|guchar
modifier|*
name|rgba
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_transform_rgb
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|dest_gimage
parameter_list|,
specifier|const
name|GimpDrawable
modifier|*
name|dest_drawable
parameter_list|,
specifier|const
name|GimpRGB
modifier|*
name|rgb
parameter_list|,
name|guchar
modifier|*
name|color
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_transform_color
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|dest_gimage
parameter_list|,
specifier|const
name|GimpDrawable
modifier|*
name|dest_drawable
parameter_list|,
name|guchar
modifier|*
name|dest
parameter_list|,
name|GimpImageBaseType
name|src_type
parameter_list|,
specifier|const
name|guchar
modifier|*
name|src
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|TempBuf
modifier|*
name|gimp_image_transform_temp_buf
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|dest_gimage
parameter_list|,
specifier|const
name|GimpDrawable
modifier|*
name|dest_drawable
parameter_list|,
name|TempBuf
modifier|*
name|temp_buf
parameter_list|,
name|gboolean
modifier|*
name|new_buf
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  shadow tiles  */
end_comment

begin_function_decl
name|TileManager
modifier|*
name|gimp_image_shadow
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|gint
name|width
parameter_list|,
name|gint
name|height
parameter_list|,
name|gint
name|bpp
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_free_shadow
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  parasites  */
end_comment

begin_function_decl
name|GimpParasite
modifier|*
name|gimp_image_parasite_find
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|gchar
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gchar
modifier|*
modifier|*
name|gimp_image_parasite_list
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|gint
modifier|*
name|count
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_parasite_attach
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpParasite
modifier|*
name|parasite
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_parasite_detach
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|gchar
modifier|*
name|parasite
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  tattoos  */
end_comment

begin_function_decl
name|GimpTattoo
name|gimp_image_get_new_tattoo
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_set_tattoo_state
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpTattoo
name|val
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpTattoo
name|gimp_image_get_tattoo_state
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/*  layers / channels / vectors  */
end_comment

begin_function_decl
name|GimpContainer
modifier|*
name|gimp_image_get_layers
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpContainer
modifier|*
name|gimp_image_get_channels
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpContainer
modifier|*
name|gimp_image_get_vectors
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpDrawable
modifier|*
name|gimp_image_active_drawable
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpLayer
modifier|*
name|gimp_image_get_active_layer
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpChannel
modifier|*
name|gimp_image_get_active_channel
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpVectors
modifier|*
name|gimp_image_get_active_vectors
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpLayer
modifier|*
name|gimp_image_set_active_layer
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpLayer
modifier|*
name|layer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpChannel
modifier|*
name|gimp_image_set_active_channel
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannel
modifier|*
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpChannel
modifier|*
name|gimp_image_unset_active_channel
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpVectors
modifier|*
name|gimp_image_set_active_vectors
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpVectors
modifier|*
name|vectors
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_active_layer_changed
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_active_channel_changed
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_active_vectors_changed
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|gimp_image_get_layer_index
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|GimpLayer
modifier|*
name|layer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|gimp_image_get_channel_index
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|GimpChannel
modifier|*
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|gimp_image_get_vectors_index
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|GimpVectors
modifier|*
name|vectors
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpLayer
modifier|*
name|gimp_image_get_layer_by_tattoo
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpTattoo
name|tatoo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpChannel
modifier|*
name|gimp_image_get_channel_by_tattoo
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpTattoo
name|tatoo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpVectors
modifier|*
name|gimp_image_get_vectors_by_tattoo
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpTattoo
name|tatoo
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpLayer
modifier|*
name|gimp_image_get_layer_by_name
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|gchar
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpChannel
modifier|*
name|gimp_image_get_channel_by_name
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|gchar
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpVectors
modifier|*
name|gimp_image_get_vectors_by_name
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|gchar
modifier|*
name|name
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_add_layer
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpLayer
modifier|*
name|layer
parameter_list|,
name|gint
name|position
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_remove_layer
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpLayer
modifier|*
name|layer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_raise_layer
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpLayer
modifier|*
name|layer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_lower_layer
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpLayer
modifier|*
name|layer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_raise_layer_to_top
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpLayer
modifier|*
name|layer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_lower_layer_to_bottom
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpLayer
modifier|*
name|layer
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_position_layer
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpLayer
modifier|*
name|layer
parameter_list|,
name|gint
name|new_index
parameter_list|,
name|gboolean
name|push_undo
parameter_list|,
specifier|const
name|gchar
modifier|*
name|undo_desc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_add_channel
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannel
modifier|*
name|channel
parameter_list|,
name|gint
name|position
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_remove_channel
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannel
modifier|*
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_raise_channel
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannel
modifier|*
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_raise_channel_to_top
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannel
modifier|*
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_lower_channel
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannel
modifier|*
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_lower_channel_to_bottom
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannel
modifier|*
name|channel
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_position_channel
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpChannel
modifier|*
name|channel
parameter_list|,
name|gint
name|new_index
parameter_list|,
name|gboolean
name|push_undo
parameter_list|,
specifier|const
name|gchar
modifier|*
name|undo_desc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_add_vectors
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpVectors
modifier|*
name|vectors
parameter_list|,
name|gint
name|position
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_remove_vectors
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpVectors
modifier|*
name|vectors
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_raise_vectors
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpVectors
modifier|*
name|vectors
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_raise_vectors_to_top
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpVectors
modifier|*
name|vectors
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_lower_vectors
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpVectors
modifier|*
name|vectors
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_lower_vectors_to_bottom
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpVectors
modifier|*
name|vectors
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_position_vectors
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|GimpVectors
modifier|*
name|vectors
parameter_list|,
name|gint
name|new_index
parameter_list|,
name|gboolean
name|push_undo
parameter_list|,
specifier|const
name|gchar
modifier|*
name|undo_desc
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_layer_boundary
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|BoundSeg
modifier|*
modifier|*
name|segs
parameter_list|,
name|gint
modifier|*
name|n_segs
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|GimpLayer
modifier|*
name|gimp_image_pick_correlate_layer
parameter_list|(
specifier|const
name|GimpImage
modifier|*
name|gimage
parameter_list|,
name|gint
name|x
parameter_list|,
name|gint
name|y
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gimp_image_coords_in_active_drawable
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|,
specifier|const
name|GimpCoords
modifier|*
name|coords
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_invalidate_layer_previews
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_image_invalidate_channel_previews
parameter_list|(
name|GimpImage
modifier|*
name|gimage
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __GIMP_IMAGE_H__ */
end_comment

end_unit

