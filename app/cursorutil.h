begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* The GIMP -- an image manipulation program  * Copyright (C) 1995 Spencer Kimball and Peter Mattis  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__CURSORUTIL_H__
end_ifndef

begin_define
DECL|macro|__CURSORUTIL_H__
define|#
directive|define
name|__CURSORUTIL_H__
end_define

begin_include
include|#
directive|include
file|<gtk/gtk.h>
end_include

begin_include
include|#
directive|include
file|<gdk/gdktypes.h>
end_include

begin_if
if|#
directive|if
name|defined
argument_list|(
name|GDK_WINDOWING_WIN32
argument_list|)
operator|||
name|defined
argument_list|(
name|GDK_WINDOWING_X11
argument_list|)
end_if

begin_comment
comment|/* Stopgap measure to detect build with current CVS GTk+ */
end_comment

begin_include
include|#
directive|include
file|<gdk/gdkcursor.h>
end_include

begin_endif
endif|#
directive|endif
end_endif

begin_include
include|#
directive|include
file|"toolsF.h"
end_include

begin_typedef
typedef|typedef
struct|struct
DECL|struct|__anon2b205f4b0108
block|{
DECL|member|bits
name|guchar
modifier|*
name|bits
decl_stmt|;
DECL|member|mask_bits
name|guchar
modifier|*
name|mask_bits
decl_stmt|;
DECL|member|width
DECL|member|height
name|gint
name|width
decl_stmt|,
name|height
decl_stmt|;
DECL|member|x_hot
DECL|member|y_hot
name|gint
name|x_hot
decl_stmt|,
name|y_hot
decl_stmt|;
DECL|member|bitmap
name|GdkBitmap
modifier|*
name|bitmap
decl_stmt|;
DECL|member|mask
name|GdkBitmap
modifier|*
name|mask
decl_stmt|;
DECL|member|cursor
name|GdkCursor
modifier|*
name|cursor
decl_stmt|;
DECL|typedef|BitmapCursor
block|}
name|BitmapCursor
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon2b205f4b0203
block|{
DECL|enumerator|CURSOR_MODE_TOOL_ICON
name|CURSOR_MODE_TOOL_ICON
block|,
DECL|enumerator|CURSOR_MODE_TOOL_CROSSHAIR
name|CURSOR_MODE_TOOL_CROSSHAIR
block|,
DECL|enumerator|CURSOR_MODE_CROSSHAIR
name|CURSOR_MODE_CROSSHAIR
DECL|typedef|CursorMode
block|}
name|CursorMode
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon2b205f4b0303
block|{
DECL|enumerator|CURSOR_MODIFIER_NONE
name|CURSOR_MODIFIER_NONE
block|,
DECL|enumerator|CURSOR_MODIFIER_PLUS
name|CURSOR_MODIFIER_PLUS
block|,
DECL|enumerator|CURSOR_MODIFIER_MINUS
name|CURSOR_MODIFIER_MINUS
block|,
DECL|enumerator|CURSOR_MODIFIER_INTERSECT
name|CURSOR_MODIFIER_INTERSECT
block|,
DECL|enumerator|CURSOR_MODIFIER_MOVE
name|CURSOR_MODIFIER_MOVE
block|,
DECL|enumerator|CURSOR_MODIFIER_RESIZE
name|CURSOR_MODIFIER_RESIZE
block|,
DECL|enumerator|CURSOR_MODIFIER_CONTROL
name|CURSOR_MODIFIER_CONTROL
block|,
DECL|enumerator|CURSOR_MODIFIER_ANCHOR
name|CURSOR_MODIFIER_ANCHOR
block|,
DECL|enumerator|CURSOR_MODIFIER_FOREGROUND
name|CURSOR_MODIFIER_FOREGROUND
block|,
DECL|enumerator|CURSOR_MODIFIER_BACKGROUND
name|CURSOR_MODIFIER_BACKGROUND
block|,
DECL|enumerator|CURSOR_MODIFIER_PATTERN
name|CURSOR_MODIFIER_PATTERN
block|,
DECL|enumerator|CURSOR_MODIFIER_HAND
name|CURSOR_MODIFIER_HAND
DECL|typedef|CursorModifier
block|}
name|CursorModifier
typedef|;
end_typedef

begin_typedef
typedef|typedef
enum|enum
DECL|enum|__anon2b205f4b0403
block|{
DECL|enumerator|GIMP_MOUSE_CURSOR
name|GIMP_MOUSE_CURSOR
init|=
operator|(
name|GDK_LAST_CURSOR
operator|+
literal|2
operator|)
block|,
DECL|enumerator|GIMP_CROSSHAIR_CURSOR
name|GIMP_CROSSHAIR_CURSOR
block|,
DECL|enumerator|GIMP_CROSSHAIR_SMALL_CURSOR
name|GIMP_CROSSHAIR_SMALL_CURSOR
block|,
DECL|enumerator|GIMP_BAD_CURSOR
name|GIMP_BAD_CURSOR
block|,
DECL|enumerator|GIMP_ZOOM_CURSOR
name|GIMP_ZOOM_CURSOR
block|,
DECL|enumerator|GIMP_COLOR_PICKER_CURSOR
name|GIMP_COLOR_PICKER_CURSOR
block|,
DECL|enumerator|GIMP_LAST_CURSOR_ENTRY
name|GIMP_LAST_CURSOR_ENTRY
DECL|typedef|GimpCursorType
block|}
name|GimpCursorType
typedef|;
end_typedef

begin_comment
comment|/* FIXME: gimp_busy HACK */
end_comment

begin_decl_stmt
specifier|extern
name|gboolean
name|gimp_busy
decl_stmt|;
end_decl_stmt

begin_function_decl
name|void
name|change_win_cursor
parameter_list|(
name|GdkWindow
modifier|*
name|win
parameter_list|,
name|GdkCursorType
name|curtype
parameter_list|,
name|ToolType
name|tool_type
parameter_list|,
name|CursorModifier
name|modifier
parameter_list|,
name|gboolean
name|toggle_cursor
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|unset_win_cursor
parameter_list|(
name|GdkWindow
modifier|*
name|win
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_add_busy_cursors_until_idle
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|gimp_add_busy_cursors
parameter_list|(
name|void
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|gimp_remove_busy_cursors
parameter_list|(
name|gpointer
name|data
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gboolean
name|gtkutil_compress_motion
parameter_list|(
name|GtkWidget
modifier|*
name|widget
parameter_list|,
name|gdouble
modifier|*
name|lastmotion_x
parameter_list|,
name|gdouble
modifier|*
name|lastmotion_y
parameter_list|)
function_decl|;
end_function_decl

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/*  __CURSORUTIL_H__  */
end_comment

end_unit

