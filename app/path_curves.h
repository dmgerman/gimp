begin_unit|revision:0.9.5;language:C;cregit-version:0.0.1
begin_comment
comment|/* The GIMP -- an image manipulation program  *  * This file Copyright (C) 1999 Simon Budig  *  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
end_comment

begin_ifndef
ifndef|#
directive|ifndef
name|__PATH_CURVES_H__
end_ifndef

begin_define
DECL|macro|__PATH_CURVES_H__
define|#
directive|define
name|__PATH_CURVES_H__
end_define

begin_include
include|#
directive|include
file|<gdk/gdk.h>
end_include

begin_include
include|#
directive|include
file|"path_toolP.h"
end_include

begin_comment
comment|/*  * This function is to get a set of npoints different coordinates for  * the range from start to end (each in the range from 0 to 1 and  * start< end).  * returns the number of created coords. Make sure that the points-  * Array is allocated.  */
end_comment

begin_typedef
DECL|typedef|PathGetPointsFunc
typedef|typedef
name|guint
function_decl|(
modifier|*
name|PathGetPointsFunc
function_decl|)
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|GdkPoint
modifier|*
name|points
parameter_list|,
name|guint
name|npoints
parameter_list|,
name|gdouble
name|start
parameter_list|,
name|gdouble
name|end
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|PathGetPointFunc
typedef|typedef
name|void
function_decl|(
modifier|*
name|PathGetPointFunc
function_decl|)
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|gdouble
name|position
parameter_list|,
name|gdouble
modifier|*
name|x
parameter_list|,
name|gdouble
modifier|*
name|y
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|PathDrawHandlesFunc
typedef|typedef
name|void
function_decl|(
modifier|*
name|PathDrawHandlesFunc
function_decl|)
parameter_list|(
name|Tool
modifier|*
name|tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|PathDrawSegmentFunc
typedef|typedef
name|void
function_decl|(
modifier|*
name|PathDrawSegmentFunc
function_decl|)
parameter_list|(
name|Tool
modifier|*
name|tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|PathOnSegmentFunc
typedef|typedef
name|gdouble
function_decl|(
modifier|*
name|PathOnSegmentFunc
function_decl|)
parameter_list|(
name|Tool
modifier|*
name|tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|gint
name|x
parameter_list|,
name|gint
name|y
parameter_list|,
name|gint
name|halfwidth
parameter_list|,
name|gint
modifier|*
name|distance
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|PathDragSegmentFunc
typedef|typedef
name|void
function_decl|(
modifier|*
name|PathDragSegmentFunc
function_decl|)
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|gdouble
name|position
parameter_list|,
name|gint
name|x
parameter_list|,
name|gint
name|y
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|PathOnHandlesFunc
typedef|typedef
name|gint
function_decl|(
modifier|*
name|PathOnHandlesFunc
function_decl|)
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|gint
name|x
parameter_list|,
name|gint
name|y
parameter_list|,
name|gint
name|halfwidth
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|PathDragHandleFunc
typedef|typedef
name|void
function_decl|(
modifier|*
name|PathDragHandleFunc
function_decl|)
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|gint
name|x
parameter_list|,
name|gint
name|y
parameter_list|,
name|gint
name|handle_id
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|PathInsertAnchorFunc
typedef|typedef
name|PathSegment
modifier|*
function_decl|(
modifier|*
name|PathInsertAnchorFunc
function_decl|)
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|gdouble
name|position
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|PathUpdateSegmentFunc
typedef|typedef
name|void
function_decl|(
modifier|*
name|PathUpdateSegmentFunc
function_decl|)
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|PathFlipSegmentFunc
typedef|typedef
name|void
function_decl|(
modifier|*
name|PathFlipSegmentFunc
function_decl|)
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|PathInitSegmentFunc
typedef|typedef
name|void
function_decl|(
modifier|*
name|PathInitSegmentFunc
function_decl|)
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|typedef|PathCleanupSegmentFunc
typedef|typedef
name|void
function_decl|(
modifier|*
name|PathCleanupSegmentFunc
function_decl|)
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|)
function_decl|;
end_typedef

begin_typedef
DECL|struct|__anon294af93e0108
typedef|typedef
struct|struct
block|{
DECL|member|get_points
name|PathGetPointsFunc
name|get_points
decl_stmt|;
DECL|member|get_point
name|PathGetPointFunc
name|get_point
decl_stmt|;
DECL|member|draw_handles
name|PathDrawHandlesFunc
name|draw_handles
decl_stmt|;
DECL|member|draw_segment
name|PathDrawSegmentFunc
name|draw_segment
decl_stmt|;
DECL|member|on_segment
name|PathOnSegmentFunc
name|on_segment
decl_stmt|;
DECL|member|drag_segment
name|PathDragSegmentFunc
name|drag_segment
decl_stmt|;
DECL|member|on_handles
name|PathOnHandlesFunc
name|on_handles
decl_stmt|;
DECL|member|drag_handle
name|PathDragHandleFunc
name|drag_handle
decl_stmt|;
DECL|member|insert_anchor
name|PathInsertAnchorFunc
name|insert_anchor
decl_stmt|;
DECL|member|update_segment
name|PathUpdateSegmentFunc
name|update_segment
decl_stmt|;
DECL|member|flip_segment
name|PathFlipSegmentFunc
name|flip_segment
decl_stmt|;
DECL|member|init_segment
name|PathInitSegmentFunc
name|init_segment
decl_stmt|;
DECL|member|cleanup_segment
name|PathCleanupSegmentFunc
name|cleanup_segment
decl_stmt|;
DECL|typedef|CurveDescription
block|}
name|CurveDescription
typedef|;
end_typedef

begin_function_decl
name|guint
name|path_curve_get_points
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|GdkPoint
modifier|*
name|points
parameter_list|,
name|guint
name|npoints
parameter_list|,
name|gdouble
name|start
parameter_list|,
name|gdouble
name|end
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|path_curve_get_point
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|gdouble
name|position
parameter_list|,
name|gdouble
modifier|*
name|x
parameter_list|,
name|gdouble
modifier|*
name|y
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|path_curve_draw_handles
parameter_list|(
name|Tool
modifier|*
name|tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|path_curve_draw_segment
parameter_list|(
name|Tool
modifier|*
name|tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gdouble
name|path_curve_on_segment
parameter_list|(
name|Tool
modifier|*
name|tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|gint
name|x
parameter_list|,
name|gint
name|y
parameter_list|,
name|gint
name|halfwidth
parameter_list|,
name|gint
modifier|*
name|distance
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|path_curve_drag_segment
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|gdouble
name|position
parameter_list|,
name|gint
name|x
parameter_list|,
name|gint
name|y
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|gint
name|path_curve_on_handle
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|gint
name|x
parameter_list|,
name|gint
name|y
parameter_list|,
name|gint
name|halfwidth
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|path_curve_drag_handle
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|gint
name|x
parameter_list|,
name|gint
name|y
parameter_list|,
name|gint
name|handle_id
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|PathSegment
modifier|*
name|path_curve_insert_anchor
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|,
name|gdouble
name|position
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|path_curve_update_segment
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|path_curve_flip_segment
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|path_curve_init_segment
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|)
function_decl|;
end_function_decl

begin_function_decl
name|void
name|path_curve_cleanup_segment
parameter_list|(
name|PathTool
modifier|*
name|path_tool
parameter_list|,
name|PathSegment
modifier|*
name|segment
parameter_list|)
function_decl|;
end_function_decl

begin_comment
comment|/* This is, what Soleil (Olofs little daughter) has to say to this:  fc fc g hgvfvv  drrrrrrtcc jctfcz w   sdzs d bx   cv^[ ^[c^[f c vffvcccccccccccccggfc fvx^[c^[x^[x^[x^[x^[x^[x^[ v       xbvcbvcxv cxxc xxxx^[x xz^[c^[x^[x^[x^[x^[x^[x^[xxxxxxcccccccxxxxxxxxxxxxxxxvä"åp' hj^[[24~^[[4~^[[1~^[[4~^[[1~^[[4~ ^[[D^[[Bk^[[B,,,,, ,^[[2~^[[4~^[[6~^[[4~l^[[6~,l' .holg^[[B^[[B n,,klmj ^[[B^[[1~j ^[[P^[[B ^[[D^[[4~^[[6~nb ^[[A^[[C ^[[Akj^[[B            ^[[A^[[C^[[A   ...^[[1~^[[D^[[4~^[[2~^[[C^[[B,^[[A^[[2~^[[C^[[2~^[[A^[[3~^[[A^[[4~ ^[[2~ ^[[2~pö-  ., å^[[Aöpl.,  k,km , m,^[[5~^[[6~^[[2~^[[C^[[3~p^[[A^[[Bö^[[2~^[[B^[[6~^[[1~, .^[[D^[[4~^[[2~^[[Db .l, .,.,m ^[[2~pöl. ik ^[[20~kl9i^[[20~^[[20~^[[20~^[[21~^[[21~^[[21~^[[21~^[[21~^[[21~^[[20~m + ^[[A^[[5~^[[G^[[D ^[[5~^[[1+^[[C  */
end_comment

begin_endif
endif|#
directive|endif
end_endif

begin_comment
comment|/* __PATH_CURVES_H__ */
end_comment

end_unit

